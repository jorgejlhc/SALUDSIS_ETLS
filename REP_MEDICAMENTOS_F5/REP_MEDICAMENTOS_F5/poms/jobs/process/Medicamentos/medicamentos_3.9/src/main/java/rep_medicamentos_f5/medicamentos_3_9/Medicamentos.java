// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package rep_medicamentos_f5.medicamentos_3_9;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.Utils;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_4
	//import java.util.List;

	//the import part of tJava_2
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: Medicamentos Purpose: <br>
 * Description:  <br>
 * @author jorgejlhc@gmail.com
 * @version 8.8.8.20240722_1936-SNAPSHOT
 * @status 
 */
public class Medicamentos implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(db_origen_AdditionalParams != null){
				
					this.setProperty("db_origen_AdditionalParams", db_origen_AdditionalParams.toString());
				
			}
			
			if(db_origen_Login != null){
				
					this.setProperty("db_origen_Login", db_origen_Login.toString());
				
			}
			
			if(db_origen_Password != null){
				
					this.setProperty("db_origen_Password", db_origen_Password.toString());
				
			}
			
			if(db_origen_Port != null){
				
					this.setProperty("db_origen_Port", db_origen_Port.toString());
				
			}
			
			if(db_origen_Schema != null){
				
					this.setProperty("db_origen_Schema", db_origen_Schema.toString());
				
			}
			
			if(db_origen_Server != null){
				
					this.setProperty("db_origen_Server", db_origen_Server.toString());
				
			}
			
			if(db_origen_ServiceName != null){
				
					this.setProperty("db_origen_ServiceName", db_origen_ServiceName.toString());
				
			}
			
			if(db_destino_AdditionalParams != null){
				
					this.setProperty("db_destino_AdditionalParams", db_destino_AdditionalParams.toString());
				
			}
			
			if(db_destino_Login != null){
				
					this.setProperty("db_destino_Login", db_destino_Login.toString());
				
			}
			
			if(db_destino_Password != null){
				
					this.setProperty("db_destino_Password", db_destino_Password.toString());
				
			}
			
			if(db_destino_Port != null){
				
					this.setProperty("db_destino_Port", db_destino_Port.toString());
				
			}
			
			if(db_destino_Schema != null){
				
					this.setProperty("db_destino_Schema", db_destino_Schema.toString());
				
			}
			
			if(db_destino_Server != null){
				
					this.setProperty("db_destino_Server", db_destino_Server.toString());
				
			}
			
			if(db_destino_ServiceName != null){
				
					this.setProperty("db_destino_ServiceName", db_destino_ServiceName.toString());
				
			}
			
			if(db_destino_Sid != null){
				
					this.setProperty("db_destino_Sid", db_destino_Sid.toString());
				
			}
			
			if(ACTUALIZACION_TOTAL != null){
				
					this.setProperty("ACTUALIZACION_TOTAL", ACTUALIZACION_TOTAL.toString());
				
			}
			
			if(BODEGA != null){
				
					this.setProperty("BODEGA", BODEGA.toString());
				
			}
			
			if(ERROR != null){
				
					this.setProperty("ERROR", ERROR.toString());
				
			}
			
			if(ESTADO != null){
				
					this.setProperty("ESTADO", ESTADO.toString());
				
			}
			
			if(ESTADO_EXEC != null){
				
					this.setProperty("ESTADO_EXEC", ESTADO_EXEC.toString());
				
			}
			
			if(FANTERIOR != null){
				
					this.setProperty("FANTERIOR", FANTERIOR.toString());
				
			}
			
			if(FECHA_EJECUCION != null){
				
					this.setProperty("FECHA_EJECUCION", FECHA_EJECUCION.toString());
				
			}
			
			if(FECHA_TERMINACION != null){
				
					this.setProperty("FECHA_TERMINACION", FECHA_TERMINACION.toString());
				
			}
			
			if(HORA_FINAL != null){
				
					this.setProperty("HORA_FINAL", HORA_FINAL.toString());
				
			}
			
			if(HORA_INICIO != null){
				
					this.setProperty("HORA_INICIO", HORA_INICIO.toString());
				
			}
			
			if(ID_SOLICITUD != null){
				
					this.setProperty("ID_SOLICITUD", ID_SOLICITUD.toString());
				
			}
			
			if(LAST_DAYS != null){
				
					this.setProperty("LAST_DAYS", LAST_DAYS.toString());
				
			}
			
			if(LOGS_ERROR != null){
				
					this.setProperty("LOGS_ERROR", LOGS_ERROR.toString());
				
			}
			
			if(LOGS_EXECUTION != null){
				
					this.setProperty("LOGS_EXECUTION", LOGS_EXECUTION.toString());
				
			}
			
			if(ORIGEN != null){
				
					this.setProperty("ORIGEN", ORIGEN.toString());
				
			}
			
			if(mail_Message != null){
				
					this.setProperty("mail_Message", mail_Message.toString());
				
			}
			
			if(mail_Password != null){
				
					this.setProperty("mail_Password", mail_Password.toString());
				
			}
			
			if(mail_Sendername != null){
				
					this.setProperty("mail_Sendername", mail_Sendername.toString());
				
			}
			
			if(mail_SMTP_Host != null){
				
					this.setProperty("mail_SMTP_Host", mail_SMTP_Host.toString());
				
			}
			
			if(mail_SMTP_Port != null){
				
					this.setProperty("mail_SMTP_Port", mail_SMTP_Port.toString());
				
			}
			
			if(mail_Subject != null){
				
					this.setProperty("mail_Subject", mail_Subject.toString());
				
			}
			
			if(mail_To != null){
				
					this.setProperty("mail_To", mail_To.toString());
				
			}
			
			if(mail_User != null){
				
					this.setProperty("mail_User", mail_User.toString());
				
			}
			
			if(COND_HCL_FORMMEDICAS != null){
				
					this.setProperty("COND_HCL_FORMMEDICAS", COND_HCL_FORMMEDICAS.toString());
				
			}
			
			if(COND_MOVIMIENTOS != null){
				
					this.setProperty("COND_MOVIMIENTOS", COND_MOVIMIENTOS.toString());
				
			}
			
			if(COND_PENDIENTES != null){
				
					this.setProperty("COND_PENDIENTES", COND_PENDIENTES.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String db_origen_AdditionalParams;
public String getDb_origen_AdditionalParams(){
	return this.db_origen_AdditionalParams;
}
public String db_origen_Login;
public String getDb_origen_Login(){
	return this.db_origen_Login;
}
public java.lang.String db_origen_Password;
public java.lang.String getDb_origen_Password(){
	return this.db_origen_Password;
}
public String db_origen_Port;
public String getDb_origen_Port(){
	return this.db_origen_Port;
}
public String db_origen_Schema;
public String getDb_origen_Schema(){
	return this.db_origen_Schema;
}
public String db_origen_Server;
public String getDb_origen_Server(){
	return this.db_origen_Server;
}
public String db_origen_ServiceName;
public String getDb_origen_ServiceName(){
	return this.db_origen_ServiceName;
}
public String db_destino_AdditionalParams;
public String getDb_destino_AdditionalParams(){
	return this.db_destino_AdditionalParams;
}
public String db_destino_Login;
public String getDb_destino_Login(){
	return this.db_destino_Login;
}
public String db_destino_Password;
public String getDb_destino_Password(){
	return this.db_destino_Password;
}
public String db_destino_Port;
public String getDb_destino_Port(){
	return this.db_destino_Port;
}
public String db_destino_Schema;
public String getDb_destino_Schema(){
	return this.db_destino_Schema;
}
public String db_destino_Server;
public String getDb_destino_Server(){
	return this.db_destino_Server;
}
public String db_destino_ServiceName;
public String getDb_destino_ServiceName(){
	return this.db_destino_ServiceName;
}
public String db_destino_Sid;
public String getDb_destino_Sid(){
	return this.db_destino_Sid;
}
public Boolean ACTUALIZACION_TOTAL;
public Boolean getACTUALIZACION_TOTAL(){
	return this.ACTUALIZACION_TOTAL;
}
public String BODEGA;
public String getBODEGA(){
	return this.BODEGA;
}
public String ERROR;
public String getERROR(){
	return this.ERROR;
}
public String ESTADO;
public String getESTADO(){
	return this.ESTADO;
}
public String ESTADO_EXEC;
public String getESTADO_EXEC(){
	return this.ESTADO_EXEC;
}
public String FANTERIOR;
public String getFANTERIOR(){
	return this.FANTERIOR;
}
public String FECHA_EJECUCION;
public String getFECHA_EJECUCION(){
	return this.FECHA_EJECUCION;
}
public String FECHA_TERMINACION;
public String getFECHA_TERMINACION(){
	return this.FECHA_TERMINACION;
}
public String HORA_FINAL;
public String getHORA_FINAL(){
	return this.HORA_FINAL;
}
public String HORA_INICIO;
public String getHORA_INICIO(){
	return this.HORA_INICIO;
}
public Integer ID_SOLICITUD;
public Integer getID_SOLICITUD(){
	return this.ID_SOLICITUD;
}
public Integer LAST_DAYS;
public Integer getLAST_DAYS(){
	return this.LAST_DAYS;
}
public String LOGS_ERROR;
public String getLOGS_ERROR(){
	return this.LOGS_ERROR;
}
public String LOGS_EXECUTION;
public String getLOGS_EXECUTION(){
	return this.LOGS_EXECUTION;
}
public String ORIGEN;
public String getORIGEN(){
	return this.ORIGEN;
}
public String mail_Message;
public String getMail_Message(){
	return this.mail_Message;
}
public java.lang.String mail_Password;
public java.lang.String getMail_Password(){
	return this.mail_Password;
}
public String mail_Sendername;
public String getMail_Sendername(){
	return this.mail_Sendername;
}
public String mail_SMTP_Host;
public String getMail_SMTP_Host(){
	return this.mail_SMTP_Host;
}
public String mail_SMTP_Port;
public String getMail_SMTP_Port(){
	return this.mail_SMTP_Port;
}
public String mail_Subject;
public String getMail_Subject(){
	return this.mail_Subject;
}
public String mail_To;
public String getMail_To(){
	return this.mail_To;
}
public String mail_User;
public String getMail_User(){
	return this.mail_User;
}
public String COND_HCL_FORMMEDICAS;
public String getCOND_HCL_FORMMEDICAS(){
	return this.COND_HCL_FORMMEDICAS;
}
public String COND_MOVIMIENTOS;
public String getCOND_MOVIMIENTOS(){
	return this.COND_MOVIMIENTOS;
}
public String COND_PENDIENTES;
public String getCOND_PENDIENTES(){
	return this.COND_PENDIENTES;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "3.9";
	private final String jobName = "Medicamentos";
	private final String projectName = "REP_MEDICAMENTOS_F5";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				Medicamentos.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(Medicamentos.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleClose_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDie_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_40_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_40_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_40_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_31_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_31_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_31_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_30_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_30_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_58_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_58_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_58_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_38_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_57_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDie_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_50_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_44_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_51_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_52_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_41_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_45_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_42_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_34_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_35_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_53_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_57_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row80_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError1", 0, "error");
						}
					
					errorCode = null;
					tDie_1Process(globalMap);
					if (!"failure".equals(status)) {
						status = "end";
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tOracleConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError2", 0, "error");
						}
					
					errorCode = null;
					tDie_2Process(globalMap);
					if (!"failure".equals(status)) {
						status = "end";
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tDie_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_40_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_31_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_30_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_58_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_38_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_29_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_57_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	









public static class row47Struct implements routines.system.IPersistableRow<row47Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row47Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row46Struct implements routines.system.IPersistableRow<row46Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row46Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row46Struct row46 = new row46Struct();
row46Struct row47 = row46;





	
	/**
	 * [tRunJob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_1", false);
		start_Hash.put("tRunJob_1", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row47");
					}
				
		int tos_count_tRunJob_1 = 0;
		
class DealChildJobLibrary_tRunJob_1 {

	public String replaceJarPathsFromCrcMap(String originalClassPathLine) throws java.lang.Exception {
		String classPathLine = "";
		String crcMapPath = new java.io.File("../crcMap").getCanonicalPath();
		if (isNeedAddLibsPath( crcMapPath)) {
			java.util.Map<String, String> crcMap = null;
			java.io.ObjectInputStream ois = new java.io.ObjectInputStream(new java.io.FileInputStream(crcMapPath)) {
				@Override
				public Class<?> resolveClass(java.io.ObjectStreamClass desc) throws java.io.IOException, ClassNotFoundException {
					if(!"java.util.HashMap".equals(desc.getName())) {
						throw new java.io.InvalidClassException("Unauthorized deserialization attempt : " + desc.getName());
					}
					return super.resolveClass(desc);
				}
			};
			crcMap = (java.util.Map<String, String>) ois.readObject();
			ois.close();
			classPathLine = addLibsPath(originalClassPathLine, crcMap);
		} else {
			classPathLine = originalClassPathLine;
		}
		return classPathLine;
	}
	
	private boolean isNeedAddLibsPath(String crcMapPath) {
		if (!(new java.io.File(crcMapPath).exists())) {// when not use cache
			return false;
		}
		return true;
	}
	
	
	private String addLibsPath(String line, java.util.Map<String, String> crcMap) {
		for (java.util.Map.Entry<String, String> entry : crcMap.entrySet()) {
			line = adaptLibPaths(line, entry);
		}
		return line;
	}
	
	private String adaptLibPaths(String line, java.util.Map.Entry<String, String> entry) {
		String jarName = entry.getValue();
		String crc = entry.getKey();
		String libStringFinder = "../lib/" + jarName;
		if (line.contains(libStringFinder)) {
			line = line.replace(libStringFinder, "../../../cache/lib/" + crc + "/" + jarName);
		} else if (line.contains(":$ROOT_PATH/" + jarName + ":")) {
			line = line.replace(":$ROOT_PATH/" + jarName + ":", ":$ROOT_PATH/../../../cache/lib/" + crc + "/" + jarName + ":");
		} else if (line.contains(";" + jarName + ";")) {
			line = line.replace(";" + jarName + ";", ";../../../cache/lib/" + crc + "/" + jarName + ";");
		}
		return line;
	}
	
}
	DealChildJobLibrary_tRunJob_1 dealChildJobLibrary_tRunJob_1 = new DealChildJobLibrary_tRunJob_1();

	class JVMArgumentHelper_tRunJob_1 {
		
		
		
		private void addClasspath(java.util.List<String> target_argument_list, String job_origin_classpath) {
			
			String extra_classpath = null;
			String path_separator = System.getProperty("path.separator");
			if (path_separator != null && path_separator.length() > 1) {
				throw new RuntimeException("path separator should be single character");
			}
			
			if(extra_classpath!=null && !extra_classpath.isEmpty()) {
				if(extra_classpath.endsWith(path_separator)) {
					target_argument_list.add(extra_classpath+job_origin_classpath);
				} else if(extra_classpath.contains(path_separator)) {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				} else if(extra_classpath.endsWith(":")) {
					target_argument_list.add(extra_classpath.replace(":", path_separator)+job_origin_classpath);
				} else if(extra_classpath.endsWith(";")) {
					target_argument_list.add(extra_classpath.replace(";", path_separator)+job_origin_classpath);
				} else if(extra_classpath.contains(":")) {
					target_argument_list.add(concatStr(extra_classpath.replace(":", path_separator), path_separator, job_origin_classpath));
				} else if(extra_classpath.contains(";")) {
					target_argument_list.add(concatStr(extra_classpath.replace(";", path_separator), path_separator, job_origin_classpath));
				} else {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				}
				return;
			}
			
			target_argument_list.add(job_origin_classpath);
		}
		
		private String concatStr(String s1, String s2, String s3) {
			java.lang.StringBuilder strB = new java.lang.StringBuilder();
			strB.append(s1).append(s2).append(s3);
			return strB.toString();
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child) {
			addArgumentsTo(target_argument_list, argument_from_child, false);
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child, boolean isCP) {
			if(isCP) {
				addClasspath(target_argument_list, argument_from_child);
				return;
			}
		
			
			
			
			target_argument_list.add(argument_from_child);
			
		}
		
		
	}
	
	JVMArgumentHelper_tRunJob_1 jvm_argument_helper_tRunJob_1 = new JVMArgumentHelper_tRunJob_1();
	
	String audit_jar_path_tRunJob_1 = System.getProperty("classpath.extended");
	

 



/**
 * [tRunJob_1 begin ] stop
 */



	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row46");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(context.LOGS_ERROR)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("moment");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("root_pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("father_pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("project");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("job");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("context");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("priority");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("type");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("origin");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("message");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("code");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";
	
	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row46.type = lcm.getType();
		row46.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row46.priority = lcm.getPriority();
		row46.message = lcm.getMessage();
		row46.code = lcm.getCode();
		
		row46.moment = java.util.Calendar.getInstance().getTime();
	
    	row46.pid = pid;
		row46.root_pid = rootPid;
		row46.father_pid = fatherPid;
	
    	row46.project = projectName;
    	row46.job = jobName;
    	row46.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row46"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(row46.moment != null) {
                        sb_tFileOutputDelimited_1.append(
                            FormatterUtils.format_Date(row46.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row46.pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            row46.pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row46.root_pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            row46.root_pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row46.father_pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            row46.father_pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row46.project != null) {
                        sb_tFileOutputDelimited_1.append(
                            row46.project
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row46.job != null) {
                        sb_tFileOutputDelimited_1.append(
                            row46.job
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row46.context != null) {
                        sb_tFileOutputDelimited_1.append(
                            row46.context
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row46.priority != null) {
                        sb_tFileOutputDelimited_1.append(
                            row46.priority
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row46.type != null) {
                        sb_tFileOutputDelimited_1.append(
                            row46.type
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row46.origin != null) {
                        sb_tFileOutputDelimited_1.append(
                            row46.origin
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row46.message != null) {
                        sb_tFileOutputDelimited_1.append(
                            row46.message
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row46.code != null) {
                        sb_tFileOutputDelimited_1.append(
                            row46.code
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());




 
     row47 = row46;


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */

	
	/**
	 * [tRunJob_1 main ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row47"
						
						);
					}
					
	java.util.List<String> paraList_tRunJob_1 = new java.util.ArrayList<String>();
	
			
			String osName_tRunJob_1 = System.getProperty("os.name");
			if (osName_tRunJob_1 != null && osName_tRunJob_1.toLowerCase(java.util.Locale.US).startsWith("win")){
				
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
              					String classpath_tRunJob_1_5 = ".;../lib/routines.jar;../lib/log4j-slf4j-impl-2.17.1.jar;../lib/log4j-api-2.17.1.jar;../lib/log4j-core-2.17.1.jar;../lib/activation-1.1.jar;../lib/jakarta.mail-1.6.7.jar;../lib/xercesImpl-2.12.2.jar;../lib/xml-apis-1.4.01.jar;../lib/slf4j-api-1.7.34.jar;../lib/crypto-utils-7.1.16.jar;../lib/TalendSAX.jar;../lib/jboss-marshalling-2.0.12.Final.jar;../lib/dom4j-2.1.3.jar;mail_1_3.jar;";
              					
              					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
	        					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5), true);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "rep_medicamentos_f5.mail_1_3.Mail");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "%*");
		      				
			} else {
	      		
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
		      					String classpath_tRunJob_1_5 = ".:$ROOT_PATH:$ROOT_PATH/../lib/routines.jar:$ROOT_PATH/../lib/log4j-slf4j-impl-2.17.1.jar:$ROOT_PATH/../lib/log4j-api-2.17.1.jar:$ROOT_PATH/../lib/log4j-core-2.17.1.jar:$ROOT_PATH/../lib/activation-1.1.jar:$ROOT_PATH/../lib/jakarta.mail-1.6.7.jar:$ROOT_PATH/../lib/xercesImpl-2.12.2.jar:$ROOT_PATH/../lib/xml-apis-1.4.01.jar:$ROOT_PATH/../lib/slf4j-api-1.7.34.jar:$ROOT_PATH/../lib/crypto-utils-7.1.16.jar:$ROOT_PATH/../lib/TalendSAX.jar:$ROOT_PATH/../lib/jboss-marshalling-2.0.12.Final.jar:$ROOT_PATH/../lib/dom4j-2.1.3.jar:$ROOT_PATH/mail_1_3.jar:";
		      					
		      					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5).replace("$ROOT_PATH",System.getProperty("user.dir")), true);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "rep_medicamentos_f5.mail_1_3.Mail");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "$@");
		      				
			}

			
			
	  	
		if(enableLogStash){
			paraList_tRunJob_1.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_1.add("--stat_port=" + null);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_1.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_1 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_1 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_1".equals(tRunJobName_tRunJob_1) && childResumePath_tRunJob_1 != null){
		paraList_tRunJob_1.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_1.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_1");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_1 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_1 = null;

	
		obj_tRunJob_1 = row47.moment;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param moment=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param moment=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param moment=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("moment", obj_tRunJob_1);
	
		obj_tRunJob_1 = row47.project;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param project=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param project=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param project=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("project", obj_tRunJob_1);
	
		obj_tRunJob_1 = row47.job;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param job=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param job=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param job=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("job", obj_tRunJob_1);
	
		obj_tRunJob_1 = row47.context;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param context=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param context=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param context=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("context", obj_tRunJob_1);
	
		obj_tRunJob_1 = row47.origin;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param origin=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param origin=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param origin=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("origin", obj_tRunJob_1);
	
		obj_tRunJob_1 = row47.message;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param message=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param message=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param message=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("message", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_origen_Server;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param server_origen=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param server_origen=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param server_origen=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("server_origen", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_origen_Login;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param user_origen=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param user_origen=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param user_origen=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("user_origen", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_destino_Server;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param server_destino=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param server_destino=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param server_destino=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("server_destino", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_destino_Login;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param user_destino=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param user_destino=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param user_destino=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("user_destino", obj_tRunJob_1);
	
	
				class ConsoleHelper_tRunJob_1 {
					private Thread getNormalThread(Process process) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getInputStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											System.out.println(line);
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}

					private Thread getErrorThread(Process process, StringBuffer sb) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getErrorStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											sb.append(line)
													.append("\n");
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}
				}
				ConsoleHelper_tRunJob_1 consoleHelper_tRunJob_1 = new ConsoleHelper_tRunJob_1();

		Runtime runtime_tRunJob_1 = Runtime.getRuntime();
		Process ps_tRunJob_1 = null;
		
		//0 indicates normal termination
        int result_tRunJob_1;
        StringBuffer errorMsg_tRunJob_1 = new StringBuffer();
        try {
            ps_tRunJob_1 = runtime_tRunJob_1.exec((String[])paraList_tRunJob_1.toArray(new String[paraList_tRunJob_1.size()]));

            Thread normal_tRunJob_1 = consoleHelper_tRunJob_1.getNormalThread(ps_tRunJob_1);
            normal_tRunJob_1.start();

            Thread error_tRunJob_1 = consoleHelper_tRunJob_1.getErrorThread(ps_tRunJob_1, errorMsg_tRunJob_1);
            error_tRunJob_1.start();

            result_tRunJob_1 = ps_tRunJob_1.waitFor();
            normal_tRunJob_1.join();
            error_tRunJob_1.join();
        } catch (ThreadDeath tde) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",tde.getMessage());
            ps_tRunJob_1.destroy();
            throw tde;
        }

		globalMap.put("tRunJob_1_CHILD_RETURN_CODE",result_tRunJob_1);
		if(result_tRunJob_1 != 0){
   			globalMap.put("tRunJob_1_CHILD_EXCEPTION_STACKTRACE",errorMsg_tRunJob_1.toString());
			  
	    		throw new RuntimeException("Child job returns " + result_tRunJob_1 + ". It doesn't terminate normally.\n" + errorMsg_tRunJob_1.toString());
			
  		}

		

 


	tos_count_tRunJob_1++;

/**
 * [tRunJob_1 main ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_begin ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_end ] stop
 */



	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	
	}
} catch (Exception e_tLogCatcher_1) {
globalMap.put("tLogCatcher_1_ERROR_MESSAGE",e_tLogCatcher_1.getMessage());
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk10", 0, "ok");
				}
				tJava_4Process(globalMap);



/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row46");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */

	
	/**
	 * [tRunJob_1 end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row47");
			  	}
			  	
 

ok_Hash.put("tRunJob_1", true);
end_Hash.put("tRunJob_1", System.currentTimeMillis());




/**
 * [tRunJob_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */

	
	/**
	 * [tRunJob_1 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
	
 



/**
 * [tRunJob_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.ESTADO_EXEC = "Interrumpido";
 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());




/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk7", 0, "ok");
				}
				tJava_2Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


context.FECHA_TERMINACION = TalendDate.getDate("DD/MM/YYYY");
context.HORA_FINAL = TalendDate.getDate("HH:mm:ss");
context.ESTADO = "Success";
System.out.println("FECHA_TERMINACION: "+context.FECHA_TERMINACION);
System.out.println("HORA_FINAL: "+context.HORA_FINAL);
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk8", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class row48Struct implements routines.system.IPersistableRow<row48Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public String FECHA_EJECUCION;

				public String getFECHA_EJECUCION () {
					return this.FECHA_EJECUCION;
				}

				public Boolean FECHA_EJECUCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_EJECUCIONIsKey(){
				    return false;
				}
				public Integer FECHA_EJECUCIONLength(){
				    return null;
				}
				public Integer FECHA_EJECUCIONPrecision(){
				    return null;
				}
				public String FECHA_EJECUCIONDefault(){
				
					return null;
				
				}
				public String FECHA_EJECUCIONComment(){
				
				    return "";
				
				}
				public String FECHA_EJECUCIONPattern(){
				
					return "";
				
				}
				public String FECHA_EJECUCIONOriginalDbColumnName(){
				
					return "FECHA_EJECUCION";
				
				}

				
			    public String HORA_INICIO;

				public String getHORA_INICIO () {
					return this.HORA_INICIO;
				}

				public Boolean HORA_INICIOIsNullable(){
				    return true;
				}
				public Boolean HORA_INICIOIsKey(){
				    return false;
				}
				public Integer HORA_INICIOLength(){
				    return null;
				}
				public Integer HORA_INICIOPrecision(){
				    return null;
				}
				public String HORA_INICIODefault(){
				
					return null;
				
				}
				public String HORA_INICIOComment(){
				
				    return "";
				
				}
				public String HORA_INICIOPattern(){
				
					return "";
				
				}
				public String HORA_INICIOOriginalDbColumnName(){
				
					return "HORA_INICIO";
				
				}

				
			    public String FECHA_TERMINACION;

				public String getFECHA_TERMINACION () {
					return this.FECHA_TERMINACION;
				}

				public Boolean FECHA_TERMINACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_TERMINACIONIsKey(){
				    return false;
				}
				public Integer FECHA_TERMINACIONLength(){
				    return null;
				}
				public Integer FECHA_TERMINACIONPrecision(){
				    return null;
				}
				public String FECHA_TERMINACIONDefault(){
				
					return null;
				
				}
				public String FECHA_TERMINACIONComment(){
				
				    return "";
				
				}
				public String FECHA_TERMINACIONPattern(){
				
					return "";
				
				}
				public String FECHA_TERMINACIONOriginalDbColumnName(){
				
					return "FECHA_TERMINACION";
				
				}

				
			    public String HORA_FINAL;

				public String getHORA_FINAL () {
					return this.HORA_FINAL;
				}

				public Boolean HORA_FINALIsNullable(){
				    return true;
				}
				public Boolean HORA_FINALIsKey(){
				    return false;
				}
				public Integer HORA_FINALLength(){
				    return null;
				}
				public Integer HORA_FINALPrecision(){
				    return null;
				}
				public String HORA_FINALDefault(){
				
					return null;
				
				}
				public String HORA_FINALComment(){
				
				    return "";
				
				}
				public String HORA_FINALPattern(){
				
					return "";
				
				}
				public String HORA_FINALOriginalDbColumnName(){
				
					return "HORA_FINAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return null;
				}
				public Integer ESTADOPrecision(){
				    return null;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String JOBS;

				public String getJOBS () {
					return this.JOBS;
				}

				public Boolean JOBSIsNullable(){
				    return true;
				}
				public Boolean JOBSIsKey(){
				    return false;
				}
				public Integer JOBSLength(){
				    return null;
				}
				public Integer JOBSPrecision(){
				    return null;
				}
				public String JOBSDefault(){
				
					return null;
				
				}
				public String JOBSComment(){
				
				    return "";
				
				}
				public String JOBSPattern(){
				
					return "";
				
				}
				public String JOBSOriginalDbColumnName(){
				
					return "JOBS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.FECHA_TERMINACION = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.FECHA_TERMINACION = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.FECHA_TERMINACION,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.FECHA_TERMINACION,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FECHA_EJECUCION="+FECHA_EJECUCION);
		sb.append(",HORA_INICIO="+HORA_INICIO);
		sb.append(",FECHA_TERMINACION="+FECHA_TERMINACION);
		sb.append(",HORA_FINAL="+HORA_FINAL);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",JOBS="+JOBS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row48Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row48Struct row48 = new row48Struct();




	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row48");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.LOGS_EXECUTION)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
        if(filetFileOutputDelimited_2.exists()){
            isFileGenerated_tFileOutputDelimited_2 = false;
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
                                    if(filetFileOutputDelimited_2.length()==0){
                                        outtFileOutputDelimited_2.write("FECHA_EJECUCION");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("HORA_INICIO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("FECHA_TERMINACION");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("HORA_FINAL");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("ESTADO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("JOBS");
                                        outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row48.FECHA_EJECUCION = context.FECHA_EJECUCION;
    	            	        	            	
    	            		row48.HORA_INICIO = context.HORA_INICIO;
    	            	        	            	
    	            		row48.FECHA_TERMINACION = context.FECHA_TERMINACION;
    	            	        	            	
    	            		row48.HORA_FINAL = context.HORA_FINAL;
    	            	        	            	
    	            		row48.ESTADO = context.ESTADO;
    	            	        	            	
    	            		row48.JOBS = "Medicamentos";
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row48"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(row48.FECHA_EJECUCION != null) {
                        sb_tFileOutputDelimited_2.append(
                            row48.FECHA_EJECUCION
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row48.HORA_INICIO != null) {
                        sb_tFileOutputDelimited_2.append(
                            row48.HORA_INICIO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row48.FECHA_TERMINACION != null) {
                        sb_tFileOutputDelimited_2.append(
                            row48.FECHA_TERMINACION
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row48.HORA_FINAL != null) {
                        sb_tFileOutputDelimited_2.append(
                            row48.HORA_FINAL
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row48.ESTADO != null) {
                        sb_tFileOutputDelimited_2.append(
                            row48.ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row48.JOBS != null) {
                        sb_tFileOutputDelimited_2.append(
                            row48.JOBS
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());




 


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row48");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk56", 0, "ok");
				}
				tOracleClose_2Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk55", 0, "ok");
				}
				tOracleClose_1Process(globalMap);



/**
 * [tFileOutputDelimited_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleClose_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_2", false);
		start_Hash.put("tOracleClose_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleClose_2";
	
	
		int tos_count_tOracleClose_2 = 0;
		

 



/**
 * [tOracleClose_2 begin ] stop
 */
	
	/**
	 * [tOracleClose_2 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_2";
	
	

	java.sql.Connection conn_tOracleClose_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
	
	if(conn_tOracleClose_2 != null && !conn_tOracleClose_2.isClosed())
	{
		
			conn_tOracleClose_2.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_2"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_2++;

/**
 * [tOracleClose_2 main ] stop
 */
	
	/**
	 * [tOracleClose_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_2";
	
	

 



/**
 * [tOracleClose_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_2";
	
	

 



/**
 * [tOracleClose_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_2 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_2";
	
	

 

ok_Hash.put("tOracleClose_2", true);
end_Hash.put("tOracleClose_2", System.currentTimeMillis());




/**
 * [tOracleClose_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_2";
	
	

 



/**
 * [tOracleClose_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_2_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_1", false);
		start_Hash.put("tOracleClose_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleClose_1";
	
	
		int tos_count_tOracleClose_1 = 0;
		

 



/**
 * [tOracleClose_1 begin ] stop
 */
	
	/**
	 * [tOracleClose_1 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

	java.sql.Connection conn_tOracleClose_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
	
	if(conn_tOracleClose_1 != null && !conn_tOracleClose_1.isClosed())
	{
		
			conn_tOracleClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_1"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_1++;

/**
 * [tOracleClose_1 main ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_1 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 

ok_Hash.put("tOracleClose_1", true);
end_Hash.put("tOracleClose_1", System.currentTimeMillis());




/**
 * [tOracleClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk11", 0, "ok");
				}
				tFileInputXML_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public static class row75Struct implements routines.system.IPersistableRow<row75Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return true;
				}
				public Integer HostLength(){
				    return 13;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return true;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return true;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 16;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 8;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 12;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 12;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				
			    public String SMTPHost;

				public String getSMTPHost () {
					return this.SMTPHost;
				}

				public Boolean SMTPHostIsNullable(){
				    return true;
				}
				public Boolean SMTPHostIsKey(){
				    return false;
				}
				public Integer SMTPHostLength(){
				    return 14;
				}
				public Integer SMTPHostPrecision(){
				    return 0;
				}
				public String SMTPHostDefault(){
				
					return null;
				
				}
				public String SMTPHostComment(){
				
				    return "";
				
				}
				public String SMTPHostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPHostOriginalDbColumnName(){
				
					return "SMTPHost";
				
				}

				
			    public String SMTPPort;

				public String getSMTPPort () {
					return this.SMTPPort;
				}

				public Boolean SMTPPortIsNullable(){
				    return true;
				}
				public Boolean SMTPPortIsKey(){
				    return false;
				}
				public Integer SMTPPortLength(){
				    return 3;
				}
				public Integer SMTPPortPrecision(){
				    return 0;
				}
				public String SMTPPortDefault(){
				
					return null;
				
				}
				public String SMTPPortComment(){
				
				    return "";
				
				}
				public String SMTPPortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPPortOriginalDbColumnName(){
				
					return "SMTPPort";
				
				}

				
			    public String UsernameMail;

				public String getUsernameMail () {
					return this.UsernameMail;
				}

				public Boolean UsernameMailIsNullable(){
				    return true;
				}
				public Boolean UsernameMailIsKey(){
				    return false;
				}
				public Integer UsernameMailLength(){
				    return 34;
				}
				public Integer UsernameMailPrecision(){
				    return 0;
				}
				public String UsernameMailDefault(){
				
					return null;
				
				}
				public String UsernameMailComment(){
				
				    return "";
				
				}
				public String UsernameMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UsernameMailOriginalDbColumnName(){
				
					return "UsernameMail";
				
				}

				
			    public String PasswordMail;

				public String getPasswordMail () {
					return this.PasswordMail;
				}

				public Boolean PasswordMailIsNullable(){
				    return true;
				}
				public Boolean PasswordMailIsKey(){
				    return false;
				}
				public Integer PasswordMailLength(){
				    return 13;
				}
				public Integer PasswordMailPrecision(){
				    return 0;
				}
				public String PasswordMailDefault(){
				
					return null;
				
				}
				public String PasswordMailComment(){
				
				    return "";
				
				}
				public String PasswordMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordMailOriginalDbColumnName(){
				
					return "PasswordMail";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Host == null) ? 0 : this.Host.hashCode());
					
						result = prime * result + ((this.Port == null) ? 0 : this.Port.hashCode());
					
						result = prime * result + ((this.Sid == null) ? 0 : this.Sid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row75Struct other = (row75Struct) obj;
		
						if (this.Host == null) {
							if (other.Host != null)
								return false;
						
						} else if (!this.Host.equals(other.Host))
						
							return false;
					
						if (this.Port == null) {
							if (other.Port != null)
								return false;
						
						} else if (!this.Port.equals(other.Port))
						
							return false;
					
						if (this.Sid == null) {
							if (other.Sid != null)
								return false;
						
						} else if (!this.Sid.equals(other.Sid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row75Struct other) {

		other.Host = this.Host;
	            other.Port = this.Port;
	            other.Sid = this.Sid;
	            other.ServiceName = this.ServiceName;
	            other.Schema = this.Schema;
	            other.User = this.User;
	            other.Password = this.Password;
	            other.SMTPHost = this.SMTPHost;
	            other.SMTPPort = this.SMTPPort;
	            other.UsernameMail = this.UsernameMail;
	            other.PasswordMail = this.PasswordMail;
	            
	}

	public void copyKeysDataTo(row75Struct other) {

		other.Host = this.Host;
	            	other.Port = this.Port;
	            	other.Sid = this.Sid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
		sb.append(",SMTPHost="+SMTPHost);
		sb.append(",SMTPPort="+SMTPPort);
		sb.append(",UsernameMail="+UsernameMail);
		sb.append(",PasswordMail="+PasswordMail);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row75Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Host, other.Host);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Port, other.Port);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Sid, other.Sid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row75Struct row75 = new row75Struct();




	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row75");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputXML_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_1", false);
		start_Hash.put("tFileInputXML_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_1";
	
	
		int tos_count_tFileInputXML_1 = 0;
		

	

int nb_line_tFileInputXML_1 = 0;

	String os_tFileInputXML_1 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_1=false;
	if(os_tFileInputXML_1.indexOf("windows") > -1 || os_tFileInputXML_1.indexOf("nt") > -1){
		isWindows_tFileInputXML_1=true;
	}
class XML_API_tFileInputXML_1{
	public boolean isDefNull(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0] != null && node[1]!=null && ("true").equals(node[1])){
        	return true;
        }
        return false;
    }

    public boolean isMissing(String[] node) throws javax.xml.transform.TransformerException {
        return node[0] == null ? true : false;
    }

    public boolean isEmpty(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0]!=null ){
        	return node[0].length() == 0;
        }
        return false;
    }
}
XML_API_tFileInputXML_1 xml_api_tFileInputXML_1 = new XML_API_tFileInputXML_1();

String[] queryPaths_tFileInputXML_1 = new String[]{	
	"Host"		
	,"Host"+"/@xsi:nil"	
	,"Port"		
	,"Port"+"/@xsi:nil"	
	,"Sid"		
	,"Sid"+"/@xsi:nil"	
	,"ServiceName"		
	,"ServiceName"+"/@xsi:nil"	
	,"Schema"		
	,"Schema"+"/@xsi:nil"	
	,"User"		
	,"User"+"/@xsi:nil"	
	,"Password"		
	,"Password"+"/@xsi:nil"	
	,"SMTPHost"		
	,"SMTPHost"+"/@xsi:nil"	
	,"SMTPPort"		
	,"SMTPPort"+"/@xsi:nil"	
	,"UsernameMail"		
	,"UsernameMail"+"/@xsi:nil"	
	,"PasswordMail"		
	,"PasswordMail"+"/@xsi:nil"
};

boolean[] asXMLs_tFileInputXML_1 = new boolean[]{	
	false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false
};

String str_tFileInputXML_1 = "";
String[] node_tFileInputXML_1 = null;
org.talend.xml.sax.SAXLooper looper_tFileInputXML_1 = new org.talend.xml.sax.SAXLooper("/connectionStrings",queryPaths_tFileInputXML_1,asXMLs_tFileInputXML_1);
looper_tFileInputXML_1.setEncoding("UTF-8");
Object filename_tFileInputXML_1 = null;
try {
	filename_tFileInputXML_1 = context.ORIGEN;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	throw(e);
	
}
if(filename_tFileInputXML_1 != null && filename_tFileInputXML_1 instanceof String && filename_tFileInputXML_1.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_1){
		filename_tFileInputXML_1 = filename_tFileInputXML_1.toString().replaceFirst("//","/");
	}
}
if(filename_tFileInputXML_1 instanceof java.io.InputStream){
	looper_tFileInputXML_1.parse((java.io.InputStream)filename_tFileInputXML_1);
}else{
	looper_tFileInputXML_1.parse(String.valueOf(filename_tFileInputXML_1));
}
java.util.Iterator<java.util.Map<String, String>> it_tFileInputXML_1  = looper_tFileInputXML_1.iterator();
while (it_tFileInputXML_1.hasNext()) {
	java.util.Map<String, String> row_tFileInputXML_1 = it_tFileInputXML_1.next();
	if (nb_line_tFileInputXML_1>=50) {
	
			looper_tFileInputXML_1.stopRead();
	
		break;
	}
		nb_line_tFileInputXML_1++;
		
	row75 = null;			
	boolean whetherReject_tFileInputXML_1 = false;
	row75 = new row75Struct();
	try{
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Host");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Host"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.Host =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.Host ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.Host =null;
									}else{
		row75.Host = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Port");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Port"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.Port =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.Port ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.Port =null;
									}else{
		row75.Port = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Sid");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Sid"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.Sid =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.Sid ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.Sid =null;
									}else{
		row75.Sid = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("ServiceName");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("ServiceName"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.ServiceName =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.ServiceName ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.ServiceName =null;
									}else{
		row75.ServiceName = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Schema");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Schema"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.Schema =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.Schema ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.Schema =null;
									}else{
		row75.Schema = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("User");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("User"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.User =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.User ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.User =null;
									}else{
		row75.User = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Password");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Password"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.Password =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.Password ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.Password =null;
									}else{
		row75.Password = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("SMTPHost");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("SMTPHost"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.SMTPHost =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.SMTPHost ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.SMTPHost =null;
									}else{
		row75.SMTPHost = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("SMTPPort");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("SMTPPort"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.SMTPPort =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.SMTPPort ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.SMTPPort =null;
									}else{
		row75.SMTPPort = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("UsernameMail");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("UsernameMail"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.UsernameMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.UsernameMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.UsernameMail =null;
									}else{
		row75.UsernameMail = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("PasswordMail");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("PasswordMail"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.PasswordMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.PasswordMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.PasswordMail =null;
									}else{
		row75.PasswordMail = str_tFileInputXML_1;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_1 = true;
            throw(e);
    }
			
			

 



/**
 * [tFileInputXML_1 begin ] stop
 */
	
	/**
	 * [tFileInputXML_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 


	tos_count_tFileInputXML_1++;

/**
 * [tFileInputXML_1 main ] stop
 */
	
	/**
	 * [tFileInputXML_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_begin ] stop
 */
// Start of branch "row75"
if(row75 != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row75"
						
						);
					}
					

    context.db_origen_Server = row75.Host;
context.db_origen_Port = row75.Port;
//context.db_origen_Sid = row75.Sid;
context.db_origen_Login = row75.User;
context.db_origen_Password = row75.Password;
context.db_origen_Schema = row75.Schema;
context.db_origen_ServiceName = row75.ServiceName;


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.HORA_INICIO = TalendDate.getDate("HH:mm:ss");
System.out.println("INICIO ETL Medicamentos");
System.out.println("FECHA_EJECUCION: "+context.FECHA_EJECUCION );
System.out.println("HORA_INICIO:"+ context.HORA_INICIO);
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "row75"




	
	/**
	 * [tFileInputXML_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	


	}
	try {
		looper_tFileInputXML_1.handleTaskResponse();
	} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
		if(!(e.getCause() instanceof org.talend.xml.sax.exception.EnoughDataException))
	
		throw(e);
	
	}
	globalMap.put("tFileInputXML_1_NB_LINE",nb_line_tFileInputXML_1);

	

 

ok_Hash.put("tFileInputXML_1", true);
end_Hash.put("tFileInputXML_1", System.currentTimeMillis());




/**
 * [tFileInputXML_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row75");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tFileInputXML_2Process(globalMap);



/**
 * [tJavaRow_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 1);
	}
	


public static class row77Struct implements routines.system.IPersistableRow<row77Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return true;
				}
				public Integer HostLength(){
				    return 13;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return true;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return true;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 16;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 12;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 12;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 12;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Host == null) ? 0 : this.Host.hashCode());
					
						result = prime * result + ((this.Port == null) ? 0 : this.Port.hashCode());
					
						result = prime * result + ((this.Sid == null) ? 0 : this.Sid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row77Struct other = (row77Struct) obj;
		
						if (this.Host == null) {
							if (other.Host != null)
								return false;
						
						} else if (!this.Host.equals(other.Host))
						
							return false;
					
						if (this.Port == null) {
							if (other.Port != null)
								return false;
						
						} else if (!this.Port.equals(other.Port))
						
							return false;
					
						if (this.Sid == null) {
							if (other.Sid != null)
								return false;
						
						} else if (!this.Sid.equals(other.Sid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row77Struct other) {

		other.Host = this.Host;
	            other.Port = this.Port;
	            other.Sid = this.Sid;
	            other.ServiceName = this.ServiceName;
	            other.Schema = this.Schema;
	            other.User = this.User;
	            other.Password = this.Password;
	            
	}

	public void copyKeysDataTo(row77Struct other) {

		other.Host = this.Host;
	            	other.Port = this.Port;
	            	other.Sid = this.Sid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row77Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Host, other.Host);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Port, other.Port);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Sid, other.Sid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row77Struct row77 = new row77Struct();




	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row77");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tFileInputXML_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_2", false);
		start_Hash.put("tFileInputXML_2", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_2";
	
	
		int tos_count_tFileInputXML_2 = 0;
		

	

int nb_line_tFileInputXML_2 = 0;

	String os_tFileInputXML_2 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_2=false;
	if(os_tFileInputXML_2.indexOf("windows") > -1 || os_tFileInputXML_2.indexOf("nt") > -1){
		isWindows_tFileInputXML_2=true;
	}
class XML_API_tFileInputXML_2{
	public boolean isDefNull(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0] != null && node[1]!=null && ("true").equals(node[1])){
        	return true;
        }
        return false;
    }

    public boolean isMissing(String[] node) throws javax.xml.transform.TransformerException {
        return node[0] == null ? true : false;
    }

    public boolean isEmpty(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0]!=null ){
        	return node[0].length() == 0;
        }
        return false;
    }
}
XML_API_tFileInputXML_2 xml_api_tFileInputXML_2 = new XML_API_tFileInputXML_2();

String[] queryPaths_tFileInputXML_2 = new String[]{	
	"Host"		
	,"Host"+"/@xsi:nil"	
	,"Port"		
	,"Port"+"/@xsi:nil"	
	,"Sid"		
	,"Sid"+"/@xsi:nil"	
	,"ServiceName"		
	,"ServiceName"+"/@xsi:nil"	
	,"Schema"		
	,"Schema"+"/@xsi:nil"	
	,"User"		
	,"User"+"/@xsi:nil"	
	,"Password"		
	,"Password"+"/@xsi:nil"
};

boolean[] asXMLs_tFileInputXML_2 = new boolean[]{	
	false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false
};

String str_tFileInputXML_2 = "";
String[] node_tFileInputXML_2 = null;
org.talend.xml.sax.SAXLooper looper_tFileInputXML_2 = new org.talend.xml.sax.SAXLooper("/connectionStrings",queryPaths_tFileInputXML_2,asXMLs_tFileInputXML_2);
looper_tFileInputXML_2.setEncoding("UTF-8");
Object filename_tFileInputXML_2 = null;
try {
	filename_tFileInputXML_2 = context.BODEGA;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
	
	throw(e);
	
}
if(filename_tFileInputXML_2 != null && filename_tFileInputXML_2 instanceof String && filename_tFileInputXML_2.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_2){
		filename_tFileInputXML_2 = filename_tFileInputXML_2.toString().replaceFirst("//","/");
	}
}
if(filename_tFileInputXML_2 instanceof java.io.InputStream){
	looper_tFileInputXML_2.parse((java.io.InputStream)filename_tFileInputXML_2);
}else{
	looper_tFileInputXML_2.parse(String.valueOf(filename_tFileInputXML_2));
}
java.util.Iterator<java.util.Map<String, String>> it_tFileInputXML_2  = looper_tFileInputXML_2.iterator();
while (it_tFileInputXML_2.hasNext()) {
	java.util.Map<String, String> row_tFileInputXML_2 = it_tFileInputXML_2.next();
	if (nb_line_tFileInputXML_2>=50) {
	
			looper_tFileInputXML_2.stopRead();
	
		break;
	}
		nb_line_tFileInputXML_2++;
		
	row77 = null;			
	boolean whetherReject_tFileInputXML_2 = false;
	row77 = new row77Struct();
	try{
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Host");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Host"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.Host =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.Host ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.Host =null;
									}else{
		row77.Host = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Port");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Port"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.Port =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.Port ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.Port =null;
									}else{
		row77.Port = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Sid");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Sid"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.Sid =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.Sid ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.Sid =null;
									}else{
		row77.Sid = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("ServiceName");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("ServiceName"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.ServiceName =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.ServiceName ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.ServiceName =null;
									}else{
		row77.ServiceName = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Schema");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Schema"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.Schema =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.Schema ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.Schema =null;
									}else{
		row77.Schema = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("User");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("User"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.User =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.User ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.User =null;
									}else{
		row77.User = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Password");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Password"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.Password =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.Password ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.Password =null;
									}else{
		row77.Password = str_tFileInputXML_2;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_2 = true;
            throw(e);
    }
			
			

 



/**
 * [tFileInputXML_2 begin ] stop
 */
	
	/**
	 * [tFileInputXML_2 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 


	tos_count_tFileInputXML_2++;

/**
 * [tFileInputXML_2 main ] stop
 */
	
	/**
	 * [tFileInputXML_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 process_data_begin ] stop
 */
// Start of branch "row77"
if(row77 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row77"
						
						);
					}
					

    context.db_destino_Server = row77.Host;
context.db_destino_Port = row77.Port;
context.db_destino_Sid = row77.Sid;
context.db_destino_Login = row77.User;
context.db_destino_Password = row77.Password;
context.db_destino_Schema = row77.Schema;
context.db_destino_ServiceName = row77.ServiceName;

    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "row77"




	
	/**
	 * [tFileInputXML_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_2 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	


	}
	try {
		looper_tFileInputXML_2.handleTaskResponse();
	} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
		if(!(e.getCause() instanceof org.talend.xml.sax.exception.EnoughDataException))
	
		throw(e);
	
	}
	globalMap.put("tFileInputXML_2_NB_LINE",nb_line_tFileInputXML_2);

	

 

ok_Hash.put("tFileInputXML_2", true);
end_Hash.put("tFileInputXML_2", System.currentTimeMillis());




/**
 * [tFileInputXML_2 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row77");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tOracleConnection_1Process(globalMap);



/**
 * [tJavaRow_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_2 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_2_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_1", false);
		start_Hash.put("tOracleConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_1";
	
	
		int tos_count_tOracleConnection_1 = 0;
		
	

	
        String url_tOracleConnection_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_1", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_1 = context.db_origen_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_1 = context.db_origen_Password; 
		String dbPwd_tOracleConnection_1 = decryptedPassword_tOracleConnection_1;
	
	
	java.sql.Connection conn_tOracleConnection_1 = null;
	
		
			String driverClass_tOracleConnection_1 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_1 = java.lang.Class.forName(driverClass_tOracleConnection_1);
			globalMap.put("driverClass_tOracleConnection_1", driverClass_tOracleConnection_1);
		
			java.util.Properties atnParamsPrope_tOracleConnection_1 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_1.put("user",dbUser_tOracleConnection_1);
			    atnParamsPrope_tOracleConnection_1.put("password",dbPwd_tOracleConnection_1);
			if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                atnParamsPrope_tOracleConnection_1.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_1 = java.sql.DriverManager.getConnection(url_tOracleConnection_1, atnParamsPrope_tOracleConnection_1);

		globalMap.put("conn_tOracleConnection_1", conn_tOracleConnection_1);
	if (null != conn_tOracleConnection_1) {
		
			conn_tOracleConnection_1.setAutoCommit(true);
	}
        globalMap.put("host_" + "tOracleConnection_1",context.db_origen_Server);
        globalMap.put("port_" + "tOracleConnection_1",context.db_origen_Port);
        globalMap.put("dbname_" + "tOracleConnection_1",context.db_origen_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_1", context.db_origen_Schema);
	globalMap.put("username_" + "tOracleConnection_1",context.db_origen_Login);
	globalMap.put("password_" + "tOracleConnection_1",dbPwd_tOracleConnection_1);

 



/**
 * [tOracleConnection_1 begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 


	tos_count_tOracleConnection_1++;

/**
 * [tOracleConnection_1 main ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_1 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 

ok_Hash.put("tOracleConnection_1", true);
end_Hash.put("tOracleConnection_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk4", 0, "ok");
				}
				tOracleConnection_2Process(globalMap);



/**
 * [tOracleConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_2", false);
		start_Hash.put("tOracleConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_2";
	
	
		int tos_count_tOracleConnection_2 = 0;
		
	

	
        String url_tOracleConnection_2 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_2", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_2 = context.db_destino_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_2 = context.db_destino_Password; 
		String dbPwd_tOracleConnection_2 = decryptedPassword_tOracleConnection_2;
	
	
	java.sql.Connection conn_tOracleConnection_2 = null;
	
		
			String driverClass_tOracleConnection_2 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_2 = java.lang.Class.forName(driverClass_tOracleConnection_2);
			globalMap.put("driverClass_tOracleConnection_2", driverClass_tOracleConnection_2);
		
			java.util.Properties atnParamsPrope_tOracleConnection_2 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_2.put("user",dbUser_tOracleConnection_2);
			    atnParamsPrope_tOracleConnection_2.put("password",dbPwd_tOracleConnection_2);
			if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                atnParamsPrope_tOracleConnection_2.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_2 = java.sql.DriverManager.getConnection(url_tOracleConnection_2, atnParamsPrope_tOracleConnection_2);

		globalMap.put("conn_tOracleConnection_2", conn_tOracleConnection_2);
	if (null != conn_tOracleConnection_2) {
		
			conn_tOracleConnection_2.setAutoCommit(true);
	}
        globalMap.put("host_" + "tOracleConnection_2",context.db_destino_Server);
        globalMap.put("port_" + "tOracleConnection_2",context.db_destino_Port);
        globalMap.put("dbname_" + "tOracleConnection_2",context.db_destino_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_2", context.db_destino_Schema);
	globalMap.put("username_" + "tOracleConnection_2",context.db_destino_Login);
	globalMap.put("password_" + "tOracleConnection_2",dbPwd_tOracleConnection_2);

 



/**
 * [tOracleConnection_2 begin ] stop
 */
	
	/**
	 * [tOracleConnection_2 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 


	tos_count_tOracleConnection_2++;

/**
 * [tOracleConnection_2 main ] stop
 */
	
	/**
	 * [tOracleConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 



/**
 * [tOracleConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 



/**
 * [tOracleConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_2 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 

ok_Hash.put("tOracleConnection_2", true);
end_Hash.put("tOracleConnection_2", System.currentTimeMillis());




/**
 * [tOracleConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 



/**
 * [tOracleConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tDie_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_2", false);
		start_Hash.put("tDie_2", System.currentTimeMillis());
		
	
	currentComponent="tDie_2";
	
	
		int tos_count_tDie_2 = 0;
		

 



/**
 * [tDie_2 begin ] stop
 */
	
	/**
	 * [tDie_2 main ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

	try {
				tLogCatcher_1.addMessage("tDie", "tDie_2", 6, "Error conexión BODEGA", 5);
				tLogCatcher_1Process(globalMap);
				
	globalMap.put("tDie_2_DIE_PRIORITY", 6);
	System.err.println("Error conexión BODEGA");
	
	globalMap.put("tDie_2_DIE_MESSAGE", "Error conexión BODEGA");
	globalMap.put("tDie_2_DIE_MESSAGES", "Error conexión BODEGA");
	
	} catch (Exception | Error e_tDie_2) {
	    globalMap.put("tDie_2_ERROR_MESSAGE",e_tDie_2.getMessage());
		logIgnoredError(String.format("tDie_2 - tDie failed to log message due to internal error: %s", e_tDie_2), e_tDie_2);
	}
	
	currentComponent = "tDie_2";
	status = "failure";
        errorCode = new Integer(5);
        globalMap.put("tDie_2_DIE_CODE", errorCode);        

    
	if(true){	
		TDieException e_tDie_2 = new TDieException();

		

		throw e_tDie_2;
	}

 


	tos_count_tDie_2++;

/**
 * [tDie_2 main ] stop
 */
	
	/**
	 * [tDie_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_begin ] stop
 */
	
	/**
	 * [tDie_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_end ] stop
 */
	
	/**
	 * [tDie_2 end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 

ok_Hash.put("tDie_2", true);
end_Hash.put("tDie_2", System.currentTimeMillis());




/**
 * [tDie_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_2 finally ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


if(context.FANTERIOR.equals(null) || context.FANTERIOR.equals("") || context.LAST_DAYS > 0)
{
	context.FANTERIOR=TalendDate.formatDate("dd/MM/YYYY",TalendDate.addDate(TalendDate.getCurrentDate(),-context.LAST_DAYS,"DD"));
}

System.out.println("FANTERIOR: "+context.FANTERIOR);


if(context.ACTUALIZACION_TOTAL == false){
	
	context.COND_MOVIMIENTOS = " WHERE Mov.Fmovimiento >= TO_DATE ('"+context.FANTERIOR+"', 'DD/MM/YYYY') OR Mov.Ftransaccion  >= 	TO_DATE('"+context.FANTERIOR+"','DD/MM/YYYY')";
	
	context.COND_HCL_FORMMEDICAS = " WHERE dformmedin.fmodificacion >= TO_DATE ('"+context.FANTERIOR+"', 'DD/MM/YYYY')";
	
	context.COND_PENDIENTES = " WHERE pend.FECHA >= TO_DATE ('"+context.FANTERIOR+"', 'DD/MM/YYYY') OR PEND.FMODIFICACION  >= 	TO_DATE('"+context.FANTERIOR+"','DD/MM/YYYY')";
	
} else {
context.COND_MOVIMIENTOS = " ";
context.COND_HCL_FORMMEDICAS = " ";
context.COND_PENDIENTES = " ";

}

/*System.out.println("context.COND_MOVIMIENTOS: "+context.COND_MOVIMIENTOS);
System.out.println("context.COND_HCL_FORMMEDICAS: "+context.COND_HCL_FORMMEDICAS);
System.out.println("context.COND_PENDIENTES: "+context.COND_PENDIENTES);*/

 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tOracleInput_40Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE_COMERCIAL;

				public String getNOMBRE_COMERCIAL () {
					return this.NOMBRE_COMERCIAL;
				}

				public Boolean NOMBRE_COMERCIALIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIALIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIALLength(){
				    return 150;
				}
				public Integer NOMBRE_COMERCIALPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIALDefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIALComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIALPattern(){
				
					return "";
				
				}
				public String NOMBRE_COMERCIALOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL";
				
				}

				
			    public String CODIGO_CUM;

				public String getCODIGO_CUM () {
					return this.CODIGO_CUM;
				}

				public Boolean CODIGO_CUMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CUMIsKey(){
				    return false;
				}
				public Integer CODIGO_CUMLength(){
				    return 91;
				}
				public Integer CODIGO_CUMPrecision(){
				    return 0;
				}
				public String CODIGO_CUMDefault(){
				
					return null;
				
				}
				public String CODIGO_CUMComment(){
				
				    return "";
				
				}
				public String CODIGO_CUMPattern(){
				
					return "";
				
				}
				public String CODIGO_CUMOriginalDbColumnName(){
				
					return "CODIGO_CUM";
				
				}

				
			    public String REGISTRO_INVIMA;

				public String getREGISTRO_INVIMA () {
					return this.REGISTRO_INVIMA;
				}

				public Boolean REGISTRO_INVIMAIsNullable(){
				    return true;
				}
				public Boolean REGISTRO_INVIMAIsKey(){
				    return false;
				}
				public Integer REGISTRO_INVIMALength(){
				    return 50;
				}
				public Integer REGISTRO_INVIMAPrecision(){
				    return 0;
				}
				public String REGISTRO_INVIMADefault(){
				
					return null;
				
				}
				public String REGISTRO_INVIMAComment(){
				
				    return "";
				
				}
				public String REGISTRO_INVIMAPattern(){
				
					return "";
				
				}
				public String REGISTRO_INVIMAOriginalDbColumnName(){
				
					return "REGISTRO_INVIMA";
				
				}

				
			    public String LABORATORIO;

				public String getLABORATORIO () {
					return this.LABORATORIO;
				}

				public Boolean LABORATORIOIsNullable(){
				    return true;
				}
				public Boolean LABORATORIOIsKey(){
				    return false;
				}
				public Integer LABORATORIOLength(){
				    return 500;
				}
				public Integer LABORATORIOPrecision(){
				    return 0;
				}
				public String LABORATORIODefault(){
				
					return null;
				
				}
				public String LABORATORIOComment(){
				
				    return "";
				
				}
				public String LABORATORIOPattern(){
				
					return "";
				
				}
				public String LABORATORIOOriginalDbColumnName(){
				
					return "LABORATORIO";
				
				}

				
			    public String PRESENTACION_COMERCIAL;

				public String getPRESENTACION_COMERCIAL () {
					return this.PRESENTACION_COMERCIAL;
				}

				public Boolean PRESENTACION_COMERCIALIsNullable(){
				    return true;
				}
				public Boolean PRESENTACION_COMERCIALIsKey(){
				    return false;
				}
				public Integer PRESENTACION_COMERCIALLength(){
				    return 500;
				}
				public Integer PRESENTACION_COMERCIALPrecision(){
				    return 0;
				}
				public String PRESENTACION_COMERCIALDefault(){
				
					return null;
				
				}
				public String PRESENTACION_COMERCIALComment(){
				
				    return "";
				
				}
				public String PRESENTACION_COMERCIALPattern(){
				
					return "";
				
				}
				public String PRESENTACION_COMERCIALOriginalDbColumnName(){
				
					return "PRESENTACION_COMERCIAL";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row9Struct other = (row9Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row9Struct other) {

		other.ID = this.ID;
	            other.NOMBRE_COMERCIAL = this.NOMBRE_COMERCIAL;
	            other.CODIGO_CUM = this.CODIGO_CUM;
	            other.REGISTRO_INVIMA = this.REGISTRO_INVIMA;
	            other.LABORATORIO = this.LABORATORIO;
	            other.PRESENTACION_COMERCIAL = this.PRESENTACION_COMERCIAL;
	            
	}

	public void copyKeysDataTo(row9Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_COMERCIAL = readString(dis);
					
					this.CODIGO_CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.LABORATORIO = readString(dis);
					
					this.PRESENTACION_COMERCIAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_COMERCIAL = readString(dis);
					
					this.CODIGO_CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.LABORATORIO = readString(dis);
					
					this.PRESENTACION_COMERCIAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL,dos);
					
					// String
				
						writeString(this.CODIGO_CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.LABORATORIO,dos);
					
					// String
				
						writeString(this.PRESENTACION_COMERCIAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL,dos);
					
					// String
				
						writeString(this.CODIGO_CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.LABORATORIO,dos);
					
					// String
				
						writeString(this.PRESENTACION_COMERCIAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE_COMERCIAL="+NOMBRE_COMERCIAL);
		sb.append(",CODIGO_CUM="+CODIGO_CUM);
		sb.append(",REGISTRO_INVIMA="+REGISTRO_INVIMA);
		sb.append(",LABORATORIO="+LABORATORIO);
		sb.append(",PRESENTACION_COMERCIAL="+PRESENTACION_COMERCIAL);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_40Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_40_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tOracleOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_4", false);
		start_Hash.put("tOracleOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tOracleOutput_4 = 0;
		






        int updateKeyCount_tOracleOutput_4 = 1;
        if(updateKeyCount_tOracleOutput_4 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_4 == 6 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_4 = 0;
    int nb_line_update_tOracleOutput_4 = 0;
    int nb_line_inserted_tOracleOutput_4 = 0;
    int nb_line_deleted_tOracleOutput_4 = 0;
    int nb_line_rejected_tOracleOutput_4 = 0;

    int tmp_batchUpdateCount_tOracleOutput_4 = 0;

    int deletedCount_tOracleOutput_4=0;
    int updatedCount_tOracleOutput_4=0;
    int insertedCount_tOracleOutput_4=0;
    int rowsToCommitCount_tOracleOutput_4=0;
    int rejectedCount_tOracleOutput_4=0;

    boolean whetherReject_tOracleOutput_4 = false;

    java.sql.Connection conn_tOracleOutput_4 = null;

    //optional table
    String dbschema_tOracleOutput_4 = null;
    String tableName_tOracleOutput_4 = null;
        dbschema_tOracleOutput_4 = (String)globalMap.get("dbschema_tOracleConnection_2");
		
        conn_tOracleOutput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
        int count_tOracleOutput_4=0;

        if(dbschema_tOracleOutput_4 == null || dbschema_tOracleOutput_4.trim().length() == 0) {
            tableName_tOracleOutput_4 = ("BMED_PRODUCTOS");
        } else {
            tableName_tOracleOutput_4 = dbschema_tOracleOutput_4 + "." + ("BMED_PRODUCTOS");
        }
                String update_tOracleOutput_4 = "UPDATE " + tableName_tOracleOutput_4 + " SET NOMBRE_COMERCIAL = ?,CODIGO_CUM = ?,REGISTRO_INVIMA = ?,LABORATORIO = ?,PRESENTACION_COMERCIAL = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_4 = conn_tOracleOutput_4.prepareStatement(update_tOracleOutput_4);
                resourceMap.put("pstmtUpdate_tOracleOutput_4", pstmtUpdate_tOracleOutput_4);
                String insert_tOracleOutput_4 = "INSERT INTO " + tableName_tOracleOutput_4 + " (ID,NOMBRE_COMERCIAL,CODIGO_CUM,REGISTRO_INVIMA,LABORATORIO,PRESENTACION_COMERCIAL) VALUES (?,?,?,?,?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_4 = conn_tOracleOutput_4.prepareStatement(insert_tOracleOutput_4);
                resourceMap.put("pstmtInsert_tOracleOutput_4", pstmtInsert_tOracleOutput_4);





 



/**
 * [tOracleOutput_4 begin ] stop
 */



	
	/**
	 * [tOracleInput_40 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_40", false);
		start_Hash.put("tOracleInput_40", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_40";
	
	
		int tos_count_tOracleInput_40 = 0;
		
	


	
		    int nb_line_tOracleInput_40 = 0;
		    java.sql.Connection conn_tOracleInput_40 = null;
				conn_tOracleInput_40 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_40 = false;
				boolean isConnectionWrapped_tOracleInput_40 = !(conn_tOracleInput_40 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_40.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_40 = null;
                if (isConnectionWrapped_tOracleInput_40) {
					unwrappedOraConn_tOracleInput_40 = conn_tOracleInput_40.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_40 != null) {
                        isTimeZoneNull_tOracleInput_40 = (unwrappedOraConn_tOracleInput_40.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_40 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_40).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_40) {
					java.sql.Statement stmtGetTZ_tOracleInput_40 = conn_tOracleInput_40.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_40 = stmtGetTZ_tOracleInput_40.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_40 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_40.next()) {
						sessionTimezone_tOracleInput_40 = rsGetTZ_tOracleInput_40.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_40 && unwrappedOraConn_tOracleInput_40 != null) {
                        unwrappedOraConn_tOracleInput_40.setSessionTimeZone(sessionTimezone_tOracleInput_40);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_40).setSessionTimeZone(sessionTimezone_tOracleInput_40);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_40 = conn_tOracleInput_40.createStatement();

		    String dbquery_tOracleInput_40 = "SELECT \n    prod.id AS ID\n  , prod.comercial as NOMBRE_COMERCIAL\n  , nvl(dprod.expedientecum ||'-'|| dprod.consecuti"
+"vocum, ' ') as CODIGO_CUM\n  , nvl(dprod.invima, ' ') as REGISTRO_INVIMA\n  , nvl(fabri.nombre, ' ') as LABORATORIO\n  ,"
+" DPROD.DESCPRESENTACION AS PRESENTACION_COMERCIAL\nFROM med_productos prod\nLEFT JOIN med_dproductos dprod ON dprod.PROD"
+"UCTOS_ID = prod.ID\nLEFT JOIN gen_proveedores fabri ON fabri.ID = prod.FABRICANTE\n";
		    

		    globalMap.put("tOracleInput_40_QUERY",dbquery_tOracleInput_40);

		    java.sql.ResultSet rs_tOracleInput_40 = null;

		    try {
		    	rs_tOracleInput_40 = stmt_tOracleInput_40.executeQuery(dbquery_tOracleInput_40);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_40 = rs_tOracleInput_40.getMetaData();
		    	int colQtyInRs_tOracleInput_40 = rsmd_tOracleInput_40.getColumnCount();

		    String tmpContent_tOracleInput_40 = null;
		    
		    
		    while (rs_tOracleInput_40.next()) {
		        nb_line_tOracleInput_40++;
		        
							if(colQtyInRs_tOracleInput_40 < 1) {
								row9.ID = null;
							} else {
		                          
					if(rs_tOracleInput_40.getObject(1) != null) {
						row9.ID = rs_tOracleInput_40.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_40 < 2) {
								row9.NOMBRE_COMERCIAL = null;
							} else {
	                         		
        	row9.NOMBRE_COMERCIAL = routines.system.JDBCUtil.getString(rs_tOracleInput_40, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_40 < 3) {
								row9.CODIGO_CUM = null;
							} else {
	                         		
        	row9.CODIGO_CUM = routines.system.JDBCUtil.getString(rs_tOracleInput_40, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_40 < 4) {
								row9.REGISTRO_INVIMA = null;
							} else {
	                         		
        	row9.REGISTRO_INVIMA = routines.system.JDBCUtil.getString(rs_tOracleInput_40, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_40 < 5) {
								row9.LABORATORIO = null;
							} else {
	                         		
        	row9.LABORATORIO = routines.system.JDBCUtil.getString(rs_tOracleInput_40, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_40 < 6) {
								row9.PRESENTACION_COMERCIAL = null;
							} else {
	                         		
        	row9.PRESENTACION_COMERCIAL = routines.system.JDBCUtil.getString(rs_tOracleInput_40, 6, false);
		                    }
					




 



/**
 * [tOracleInput_40 begin ] stop
 */
	
	/**
	 * [tOracleInput_40 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 


	tos_count_tOracleInput_40++;

/**
 * [tOracleInput_40 main ] stop
 */
	
	/**
	 * [tOracleInput_40 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					



        whetherReject_tOracleOutput_4 = false;
            int updateFlag_tOracleOutput_4 = 0;
                    if(row9.NOMBRE_COMERCIAL == null) {
pstmtUpdate_tOracleOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_4.setString(1, row9.NOMBRE_COMERCIAL);
}

                    if(row9.CODIGO_CUM == null) {
pstmtUpdate_tOracleOutput_4.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_4.setString(2, row9.CODIGO_CUM);
}

                    if(row9.REGISTRO_INVIMA == null) {
pstmtUpdate_tOracleOutput_4.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_4.setString(3, row9.REGISTRO_INVIMA);
}

                    if(row9.LABORATORIO == null) {
pstmtUpdate_tOracleOutput_4.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_4.setString(4, row9.LABORATORIO);
}

                    if(row9.PRESENTACION_COMERCIAL == null) {
pstmtUpdate_tOracleOutput_4.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_4.setString(5, row9.PRESENTACION_COMERCIAL);
}


                    pstmtUpdate_tOracleOutput_4.setBigDecimal(6 + count_tOracleOutput_4, row9.ID);


            try {
                updateFlag_tOracleOutput_4 = pstmtUpdate_tOracleOutput_4.executeUpdate();
                updatedCount_tOracleOutput_4 = updatedCount_tOracleOutput_4+updateFlag_tOracleOutput_4;
                rowsToCommitCount_tOracleOutput_4 += updateFlag_tOracleOutput_4;
                if(updateFlag_tOracleOutput_4 == 0) {
                            pstmtInsert_tOracleOutput_4.setBigDecimal(1, row9.ID);

                            if(row9.NOMBRE_COMERCIAL == null) {
pstmtInsert_tOracleOutput_4.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_4.setString(2, row9.NOMBRE_COMERCIAL);
}

                            if(row9.CODIGO_CUM == null) {
pstmtInsert_tOracleOutput_4.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_4.setString(3, row9.CODIGO_CUM);
}

                            if(row9.REGISTRO_INVIMA == null) {
pstmtInsert_tOracleOutput_4.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_4.setString(4, row9.REGISTRO_INVIMA);
}

                            if(row9.LABORATORIO == null) {
pstmtInsert_tOracleOutput_4.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_4.setString(5, row9.LABORATORIO);
}

                            if(row9.PRESENTACION_COMERCIAL == null) {
pstmtInsert_tOracleOutput_4.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_4.setString(6, row9.PRESENTACION_COMERCIAL);
}

                    int processedCount_tOracleOutput_4 = pstmtInsert_tOracleOutput_4.executeUpdate();
                    insertedCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                    rowsToCommitCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                    nb_line_tOracleOutput_4++;
                }else{
                    nb_line_tOracleOutput_4++;
                }
            } catch(java.lang.Exception e_tOracleOutput_4) {
globalMap.put("tOracleOutput_4_ERROR_MESSAGE",e_tOracleOutput_4.getMessage());
                whetherReject_tOracleOutput_4 = true;
                    nb_line_tOracleOutput_4++;
                        System.err.print(e_tOracleOutput_4.getMessage());
            }

 


	tos_count_tOracleOutput_4++;

/**
 * [tOracleOutput_4 main ] stop
 */
	
	/**
	 * [tOracleOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_40 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_40 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

}
}finally{
	if (rs_tOracleInput_40 != null) {
		rs_tOracleInput_40.close();
	}
	if (stmt_tOracleInput_40 != null) {
		stmt_tOracleInput_40.close();
	}
}

globalMap.put("tOracleInput_40_NB_LINE",nb_line_tOracleInput_40);
 

ok_Hash.put("tOracleInput_40", true);
end_Hash.put("tOracleInput_40", System.currentTimeMillis());




/**
 * [tOracleInput_40 end ] stop
 */

	
	/**
	 * [tOracleOutput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_4 != null){
            pstmtUpdate_tOracleOutput_4.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_4");
        }
        if(pstmtInsert_tOracleOutput_4 != null){
            pstmtInsert_tOracleOutput_4.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_4");
        }
    resourceMap.put("statementClosed_tOracleOutput_4", true);

	
	nb_line_deleted_tOracleOutput_4=nb_line_deleted_tOracleOutput_4+ deletedCount_tOracleOutput_4;
	nb_line_update_tOracleOutput_4=nb_line_update_tOracleOutput_4 + updatedCount_tOracleOutput_4;
	nb_line_inserted_tOracleOutput_4=nb_line_inserted_tOracleOutput_4 + insertedCount_tOracleOutput_4;
	nb_line_rejected_tOracleOutput_4=nb_line_rejected_tOracleOutput_4 + rejectedCount_tOracleOutput_4;
	
        globalMap.put("tOracleOutput_4_NB_LINE",nb_line_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_UPDATED",nb_line_update_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_4);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_4", true);
end_Hash.put("tOracleOutput_4", System.currentTimeMillis());




/**
 * [tOracleOutput_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_40:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tOracleInput_31Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_40 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 finally ] stop
 */

	
	/**
	 * [tOracleOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_4") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_4 = null;
                if ((pstmtUpdateToClose_tOracleOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_4")) != null) {
                    pstmtUpdateToClose_tOracleOutput_4.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_4 = null;
                if ((pstmtInsertToClose_tOracleOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_4")) != null) {
                    pstmtInsertToClose_tOracleOutput_4.close();
                }
    }
 



/**
 * [tOracleOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_40_SUBPROCESS_STATE", 1);
	}
	


public static class row68Struct implements routines.system.IPersistableRow<row68Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 350;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 50;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 200;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String CODIGO_ATC;

				public String getCODIGO_ATC () {
					return this.CODIGO_ATC;
				}

				public Boolean CODIGO_ATCIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ATCIsKey(){
				    return false;
				}
				public Integer CODIGO_ATCLength(){
				    return 20;
				}
				public Integer CODIGO_ATCPrecision(){
				    return 0;
				}
				public String CODIGO_ATCDefault(){
				
					return null;
				
				}
				public String CODIGO_ATCComment(){
				
				    return "";
				
				}
				public String CODIGO_ATCPattern(){
				
					return "";
				
				}
				public String CODIGO_ATCOriginalDbColumnName(){
				
					return "CODIGO_ATC";
				
				}

				
			    public String REQUIERE_CADENA_FRIO;

				public String getREQUIERE_CADENA_FRIO () {
					return this.REQUIERE_CADENA_FRIO;
				}

				public Boolean REQUIERE_CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean REQUIERE_CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer REQUIERE_CADENA_FRIOLength(){
				    return 2;
				}
				public Integer REQUIERE_CADENA_FRIOPrecision(){
				    return 0;
				}
				public String REQUIERE_CADENA_FRIODefault(){
				
					return null;
				
				}
				public String REQUIERE_CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String REQUIERE_CADENA_FRIOPattern(){
				
					return "";
				
				}
				public String REQUIERE_CADENA_FRIOOriginalDbColumnName(){
				
					return "REQUIERE_CADENA_FRIO";
				
				}

				
			    public String CATEGORIA_FARMACOLOGICA;

				public String getCATEGORIA_FARMACOLOGICA () {
					return this.CATEGORIA_FARMACOLOGICA;
				}

				public Boolean CATEGORIA_FARMACOLOGICAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIA_FARMACOLOGICAIsKey(){
				    return false;
				}
				public Integer CATEGORIA_FARMACOLOGICALength(){
				    return 100;
				}
				public Integer CATEGORIA_FARMACOLOGICAPrecision(){
				    return 0;
				}
				public String CATEGORIA_FARMACOLOGICADefault(){
				
					return null;
				
				}
				public String CATEGORIA_FARMACOLOGICAComment(){
				
				    return "";
				
				}
				public String CATEGORIA_FARMACOLOGICAPattern(){
				
					return "";
				
				}
				public String CATEGORIA_FARMACOLOGICAOriginalDbColumnName(){
				
					return "CATEGORIA_FARMACOLOGICA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row68Struct other = (row68Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row68Struct other) {

		other.ID = this.ID;
	            other.NOMBRE_GENERICO = this.NOMBRE_GENERICO;
	            other.CONCENTRACION = this.CONCENTRACION;
	            other.VIA_ADMINISTRACION = this.VIA_ADMINISTRACION;
	            other.CODIGO_ATC = this.CODIGO_ATC;
	            other.REQUIERE_CADENA_FRIO = this.REQUIERE_CADENA_FRIO;
	            other.CATEGORIA_FARMACOLOGICA = this.CATEGORIA_FARMACOLOGICA;
	            
	}

	public void copyKeysDataTo(row68Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.CODIGO_ATC = readString(dis);
					
					this.REQUIERE_CADENA_FRIO = readString(dis);
					
					this.CATEGORIA_FARMACOLOGICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.CODIGO_ATC = readString(dis);
					
					this.REQUIERE_CADENA_FRIO = readString(dis);
					
					this.CATEGORIA_FARMACOLOGICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.CODIGO_ATC,dos);
					
					// String
				
						writeString(this.REQUIERE_CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CATEGORIA_FARMACOLOGICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.CODIGO_ATC,dos);
					
					// String
				
						writeString(this.REQUIERE_CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CATEGORIA_FARMACOLOGICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",CODIGO_ATC="+CODIGO_ATC);
		sb.append(",REQUIERE_CADENA_FRIO="+REQUIERE_CADENA_FRIO);
		sb.append(",CATEGORIA_FARMACOLOGICA="+CATEGORIA_FARMACOLOGICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row68Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_31Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_31_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row68Struct row68 = new row68Struct();




	
	/**
	 * [tOracleOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_5", false);
		start_Hash.put("tOracleOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row68");
					}
				
		int tos_count_tOracleOutput_5 = 0;
		






        int updateKeyCount_tOracleOutput_5 = 1;
        if(updateKeyCount_tOracleOutput_5 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_5 == 7 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_5 = 0;
    int nb_line_update_tOracleOutput_5 = 0;
    int nb_line_inserted_tOracleOutput_5 = 0;
    int nb_line_deleted_tOracleOutput_5 = 0;
    int nb_line_rejected_tOracleOutput_5 = 0;

    int tmp_batchUpdateCount_tOracleOutput_5 = 0;

    int deletedCount_tOracleOutput_5=0;
    int updatedCount_tOracleOutput_5=0;
    int insertedCount_tOracleOutput_5=0;
    int rowsToCommitCount_tOracleOutput_5=0;
    int rejectedCount_tOracleOutput_5=0;

    boolean whetherReject_tOracleOutput_5 = false;

    java.sql.Connection conn_tOracleOutput_5 = null;

    //optional table
    String dbschema_tOracleOutput_5 = null;
    String tableName_tOracleOutput_5 = null;
        dbschema_tOracleOutput_5 = (String)globalMap.get("dbschema_tOracleConnection_2");
		
        conn_tOracleOutput_5 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
        int count_tOracleOutput_5=0;

        if(dbschema_tOracleOutput_5 == null || dbschema_tOracleOutput_5.trim().length() == 0) {
            tableName_tOracleOutput_5 = ("BMED_GENERICO");
        } else {
            tableName_tOracleOutput_5 = dbschema_tOracleOutput_5 + "." + ("BMED_GENERICO");
        }
                String update_tOracleOutput_5 = "UPDATE " + tableName_tOracleOutput_5 + " SET NOMBRE_GENERICO = ?,CONCENTRACION = ?,VIA_ADMINISTRACION = ?,CODIGO_ATC = ?,REQUIERE_CADENA_FRIO = ?,CATEGORIA_FARMACOLOGICA = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_5 = conn_tOracleOutput_5.prepareStatement(update_tOracleOutput_5);
                resourceMap.put("pstmtUpdate_tOracleOutput_5", pstmtUpdate_tOracleOutput_5);
                String insert_tOracleOutput_5 = "INSERT INTO " + tableName_tOracleOutput_5 + " (ID,NOMBRE_GENERICO,CONCENTRACION,VIA_ADMINISTRACION,CODIGO_ATC,REQUIERE_CADENA_FRIO,CATEGORIA_FARMACOLOGICA) VALUES (?,?,?,?,?,?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_5 = conn_tOracleOutput_5.prepareStatement(insert_tOracleOutput_5);
                resourceMap.put("pstmtInsert_tOracleOutput_5", pstmtInsert_tOracleOutput_5);





 



/**
 * [tOracleOutput_5 begin ] stop
 */



	
	/**
	 * [tOracleInput_31 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_31", false);
		start_Hash.put("tOracleInput_31", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_31";
	
	
		int tos_count_tOracleInput_31 = 0;
		
	


	
		    int nb_line_tOracleInput_31 = 0;
		    java.sql.Connection conn_tOracleInput_31 = null;
				conn_tOracleInput_31 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_31 = false;
				boolean isConnectionWrapped_tOracleInput_31 = !(conn_tOracleInput_31 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_31.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_31 = null;
                if (isConnectionWrapped_tOracleInput_31) {
					unwrappedOraConn_tOracleInput_31 = conn_tOracleInput_31.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_31 != null) {
                        isTimeZoneNull_tOracleInput_31 = (unwrappedOraConn_tOracleInput_31.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_31 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_31).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_31) {
					java.sql.Statement stmtGetTZ_tOracleInput_31 = conn_tOracleInput_31.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_31 = stmtGetTZ_tOracleInput_31.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_31 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_31.next()) {
						sessionTimezone_tOracleInput_31 = rsGetTZ_tOracleInput_31.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_31 && unwrappedOraConn_tOracleInput_31 != null) {
                        unwrappedOraConn_tOracleInput_31.setSessionTimeZone(sessionTimezone_tOracleInput_31);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_31).setSessionTimeZone(sessionTimezone_tOracleInput_31);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_31 = conn_tOracleInput_31.createStatement();

		    String dbquery_tOracleInput_31 = " SELECT \n     gene.id AS ID\n   , gene.descripcion AS NOMBRE_GENERICO\n   , gene.concentracion AS CONCENTRACION\n   , "
+"nvl(tviadmin.nombre, ' ') AS VIA_ADMINISTRACION\n   , nvl(gene.codatc, ' ') AS CODIGO_ATC\n   , nvl(gene.cadenafrio, ' '"
+") AS REQUIERE_CADENA_FRIO\n   , CAT.NOMBRE AS CATEGORIA_FARMACOLOGICA\nFROM  med_genericos gene\nLEFT JOIN med_tviadmin "
+"tviadmin ON tviadmin.id = gene.tviadmin_id \nLEFT JOIN MED_CATFARMACOLOGICAS CAT  ON CAT.ID = GENE.CATFARMACOLOGICAS_ID";
		    

		    globalMap.put("tOracleInput_31_QUERY",dbquery_tOracleInput_31);

		    java.sql.ResultSet rs_tOracleInput_31 = null;

		    try {
		    	rs_tOracleInput_31 = stmt_tOracleInput_31.executeQuery(dbquery_tOracleInput_31);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_31 = rs_tOracleInput_31.getMetaData();
		    	int colQtyInRs_tOracleInput_31 = rsmd_tOracleInput_31.getColumnCount();

		    String tmpContent_tOracleInput_31 = null;
		    
		    
		    while (rs_tOracleInput_31.next()) {
		        nb_line_tOracleInput_31++;
		        
							if(colQtyInRs_tOracleInput_31 < 1) {
								row68.ID = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(1) != null) {
						row68.ID = rs_tOracleInput_31.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 2) {
								row68.NOMBRE_GENERICO = null;
							} else {
	                         		
        	row68.NOMBRE_GENERICO = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 3) {
								row68.CONCENTRACION = null;
							} else {
	                         		
        	row68.CONCENTRACION = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 4) {
								row68.VIA_ADMINISTRACION = null;
							} else {
	                         		
        	row68.VIA_ADMINISTRACION = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 5) {
								row68.CODIGO_ATC = null;
							} else {
	                         		
        	row68.CODIGO_ATC = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 6) {
								row68.REQUIERE_CADENA_FRIO = null;
							} else {
	                         		
        	row68.REQUIERE_CADENA_FRIO = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 7) {
								row68.CATEGORIA_FARMACOLOGICA = null;
							} else {
	                         		
        	row68.CATEGORIA_FARMACOLOGICA = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 7, false);
		                    }
					




 



/**
 * [tOracleInput_31 begin ] stop
 */
	
	/**
	 * [tOracleInput_31 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 


	tos_count_tOracleInput_31++;

/**
 * [tOracleInput_31 main ] stop
 */
	
	/**
	 * [tOracleInput_31 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row68"
						
						);
					}
					



        whetherReject_tOracleOutput_5 = false;
            int updateFlag_tOracleOutput_5 = 0;
                    if(row68.NOMBRE_GENERICO == null) {
pstmtUpdate_tOracleOutput_5.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_5.setString(1, row68.NOMBRE_GENERICO);
}

                    if(row68.CONCENTRACION == null) {
pstmtUpdate_tOracleOutput_5.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_5.setString(2, row68.CONCENTRACION);
}

                    if(row68.VIA_ADMINISTRACION == null) {
pstmtUpdate_tOracleOutput_5.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_5.setString(3, row68.VIA_ADMINISTRACION);
}

                    if(row68.CODIGO_ATC == null) {
pstmtUpdate_tOracleOutput_5.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_5.setString(4, row68.CODIGO_ATC);
}

                    if(row68.REQUIERE_CADENA_FRIO == null) {
pstmtUpdate_tOracleOutput_5.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_5.setString(5, row68.REQUIERE_CADENA_FRIO);
}

                    if(row68.CATEGORIA_FARMACOLOGICA == null) {
pstmtUpdate_tOracleOutput_5.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_5.setString(6, row68.CATEGORIA_FARMACOLOGICA);
}


                    pstmtUpdate_tOracleOutput_5.setBigDecimal(7 + count_tOracleOutput_5, row68.ID);


            try {
                updateFlag_tOracleOutput_5 = pstmtUpdate_tOracleOutput_5.executeUpdate();
                updatedCount_tOracleOutput_5 = updatedCount_tOracleOutput_5+updateFlag_tOracleOutput_5;
                rowsToCommitCount_tOracleOutput_5 += updateFlag_tOracleOutput_5;
                if(updateFlag_tOracleOutput_5 == 0) {
                            pstmtInsert_tOracleOutput_5.setBigDecimal(1, row68.ID);

                            if(row68.NOMBRE_GENERICO == null) {
pstmtInsert_tOracleOutput_5.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_5.setString(2, row68.NOMBRE_GENERICO);
}

                            if(row68.CONCENTRACION == null) {
pstmtInsert_tOracleOutput_5.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_5.setString(3, row68.CONCENTRACION);
}

                            if(row68.VIA_ADMINISTRACION == null) {
pstmtInsert_tOracleOutput_5.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_5.setString(4, row68.VIA_ADMINISTRACION);
}

                            if(row68.CODIGO_ATC == null) {
pstmtInsert_tOracleOutput_5.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_5.setString(5, row68.CODIGO_ATC);
}

                            if(row68.REQUIERE_CADENA_FRIO == null) {
pstmtInsert_tOracleOutput_5.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_5.setString(6, row68.REQUIERE_CADENA_FRIO);
}

                            if(row68.CATEGORIA_FARMACOLOGICA == null) {
pstmtInsert_tOracleOutput_5.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_5.setString(7, row68.CATEGORIA_FARMACOLOGICA);
}

                    int processedCount_tOracleOutput_5 = pstmtInsert_tOracleOutput_5.executeUpdate();
                    insertedCount_tOracleOutput_5 += processedCount_tOracleOutput_5;
                    rowsToCommitCount_tOracleOutput_5 += processedCount_tOracleOutput_5;
                    nb_line_tOracleOutput_5++;
                }else{
                    nb_line_tOracleOutput_5++;
                }
            } catch(java.lang.Exception e_tOracleOutput_5) {
globalMap.put("tOracleOutput_5_ERROR_MESSAGE",e_tOracleOutput_5.getMessage());
                whetherReject_tOracleOutput_5 = true;
                    nb_line_tOracleOutput_5++;
                        System.err.print(e_tOracleOutput_5.getMessage());
            }

 


	tos_count_tOracleOutput_5++;

/**
 * [tOracleOutput_5 main ] stop
 */
	
	/**
	 * [tOracleOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	

 



/**
 * [tOracleOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	

 



/**
 * [tOracleOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_31 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_31 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

}
}finally{
	if (rs_tOracleInput_31 != null) {
		rs_tOracleInput_31.close();
	}
	if (stmt_tOracleInput_31 != null) {
		stmt_tOracleInput_31.close();
	}
}

globalMap.put("tOracleInput_31_NB_LINE",nb_line_tOracleInput_31);
 

ok_Hash.put("tOracleInput_31", true);
end_Hash.put("tOracleInput_31", System.currentTimeMillis());




/**
 * [tOracleInput_31 end ] stop
 */

	
	/**
	 * [tOracleOutput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_5 != null){
            pstmtUpdate_tOracleOutput_5.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_5");
        }
        if(pstmtInsert_tOracleOutput_5 != null){
            pstmtInsert_tOracleOutput_5.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_5");
        }
    resourceMap.put("statementClosed_tOracleOutput_5", true);

	
	nb_line_deleted_tOracleOutput_5=nb_line_deleted_tOracleOutput_5+ deletedCount_tOracleOutput_5;
	nb_line_update_tOracleOutput_5=nb_line_update_tOracleOutput_5 + updatedCount_tOracleOutput_5;
	nb_line_inserted_tOracleOutput_5=nb_line_inserted_tOracleOutput_5 + insertedCount_tOracleOutput_5;
	nb_line_rejected_tOracleOutput_5=nb_line_rejected_tOracleOutput_5 + rejectedCount_tOracleOutput_5;
	
        globalMap.put("tOracleOutput_5_NB_LINE",nb_line_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_UPDATED",nb_line_update_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_5);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row68");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_5", true);
end_Hash.put("tOracleOutput_5", System.currentTimeMillis());




/**
 * [tOracleOutput_5 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_31:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tOracleInput_30Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_31 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 finally ] stop
 */

	
	/**
	 * [tOracleOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_5") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_5 = null;
                if ((pstmtUpdateToClose_tOracleOutput_5 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_5")) != null) {
                    pstmtUpdateToClose_tOracleOutput_5.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_5 = null;
                if ((pstmtInsertToClose_tOracleOutput_5 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_5")) != null) {
                    pstmtInsertToClose_tOracleOutput_5.close();
                }
    }
 



/**
 * [tOracleOutput_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_31_SUBPROCESS_STATE", 1);
	}
	


public static class row78Struct implements routines.system.IPersistableRow<row78Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return null;
				}
				public String INVENTARIOS_IDDefault(){
				
					return "";
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public BigDecimal INV_PRODUCTOS_ID;

				public BigDecimal getINV_PRODUCTOS_ID () {
					return this.INV_PRODUCTOS_ID;
				}

				public Boolean INV_PRODUCTOS_IDIsNullable(){
				    return false;
				}
				public Boolean INV_PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer INV_PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer INV_PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String INV_PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String INV_PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String INV_PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String INV_PRODUCTOS_IDOriginalDbColumnName(){
				
					return "INV_PRODUCTOS_ID";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 25;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public java.util.Date FECHA_VENCIMIENTO;

				public java.util.Date getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public BigDecimal INV_DCONTRATOS_ID;

				public BigDecimal getINV_DCONTRATOS_ID () {
					return this.INV_DCONTRATOS_ID;
				}

				public Boolean INV_DCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean INV_DCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer INV_DCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer INV_DCONTRATOS_IDPrecision(){
				    return null;
				}
				public String INV_DCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String INV_DCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String INV_DCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String INV_DCONTRATOS_IDOriginalDbColumnName(){
				
					return "INV_DCONTRATOS_ID";
				
				}

				
			    public String CODIGOBARRAS;

				public String getCODIGOBARRAS () {
					return this.CODIGOBARRAS;
				}

				public Boolean CODIGOBARRASIsNullable(){
				    return false;
				}
				public Boolean CODIGOBARRASIsKey(){
				    return false;
				}
				public Integer CODIGOBARRASLength(){
				    return 500;
				}
				public Integer CODIGOBARRASPrecision(){
				    return 0;
				}
				public String CODIGOBARRASDefault(){
				
					return null;
				
				}
				public String CODIGOBARRASComment(){
				
				    return "";
				
				}
				public String CODIGOBARRASPattern(){
				
					return "";
				
				}
				public String CODIGOBARRASOriginalDbColumnName(){
				
					return "CODIGOBARRAS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.INV_PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
						this.INV_DCONTRATOS_ID = (BigDecimal) dis.readObject();
					
					this.CODIGOBARRAS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.INV_PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
						this.INV_DCONTRATOS_ID = (BigDecimal) dis.readObject();
					
					this.CODIGOBARRAS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.INV_PRODUCTOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.INV_DCONTRATOS_ID);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INV_PRODUCTOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INV_DCONTRATOS_ID);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",INV_PRODUCTOS_ID="+String.valueOf(INV_PRODUCTOS_ID));
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+String.valueOf(FECHA_VENCIMIENTO));
		sb.append(",INV_DCONTRATOS_ID="+String.valueOf(INV_DCONTRATOS_ID));
		sb.append(",CODIGOBARRAS="+CODIGOBARRAS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row78Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_30Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_30_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row78Struct row78 = new row78Struct();




	
	/**
	 * [tHashOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_13", false);
		start_Hash.put("tHashOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row78");
					}
				
		int tos_count_tHashOutput_13 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row78Struct> tHashFile_tHashOutput_13 = null;
		String hashKey_tHashOutput_13 = "tHashFile_Medicamentos_" + pid + "_tHashOutput_13";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_13)){
			    if(mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13) == null){
	      		    mf_tHashOutput_13.getResourceMap().put(hashKey_tHashOutput_13, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row78Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }else{
			    	tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }
			}
        int nb_line_tHashOutput_13 = 0;

 



/**
 * [tHashOutput_13 begin ] stop
 */



	
	/**
	 * [tOracleInput_30 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_30", false);
		start_Hash.put("tOracleInput_30", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_30";
	
	
		int tos_count_tOracleInput_30 = 0;
		
	


	
		    int nb_line_tOracleInput_30 = 0;
		    java.sql.Connection conn_tOracleInput_30 = null;
				conn_tOracleInput_30 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_30 = false;
				boolean isConnectionWrapped_tOracleInput_30 = !(conn_tOracleInput_30 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_30.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_30 = null;
                if (isConnectionWrapped_tOracleInput_30) {
					unwrappedOraConn_tOracleInput_30 = conn_tOracleInput_30.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_30 != null) {
                        isTimeZoneNull_tOracleInput_30 = (unwrappedOraConn_tOracleInput_30.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_30 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_30).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_30) {
					java.sql.Statement stmtGetTZ_tOracleInput_30 = conn_tOracleInput_30.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_30 = stmtGetTZ_tOracleInput_30.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_30 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_30.next()) {
						sessionTimezone_tOracleInput_30 = rsGetTZ_tOracleInput_30.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_30 && unwrappedOraConn_tOracleInput_30 != null) {
                        unwrappedOraConn_tOracleInput_30.setSessionTimeZone(sessionTimezone_tOracleInput_30);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_30).setSessionTimeZone(sessionTimezone_tOracleInput_30);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_30 = conn_tOracleInput_30.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_30.setFetchSize(1000);


		    String dbquery_tOracleInput_30 = "SELECT \n    INV.ID AS INVENTARIOS_ID\n  , INV.PRODUCTOS_ID AS INV_productos_id\n  , INV.LOTE as LOTE\n  , INV.FVENCIMI"
+"ENTO AS FECHA_VENCIMIENTO\n  , INV.DCONTRATOS_ID AS INV_DCONTRATOS_ID  \n  , CB.CODIGOBARRAS\nFROM MED_INVENTARIOS INV\n"
+"INNER JOIN MED_CODBARRASPRODUCTOS CB  ON CB.ID = INV.CODBARRASPRODUCTOS_ID \n                                      AND C"
+"B.PRODUCTOS_ID = INV.PRODUCTOS_ID ";
		    

		    globalMap.put("tOracleInput_30_QUERY",dbquery_tOracleInput_30);

		    java.sql.ResultSet rs_tOracleInput_30 = null;

		    try {
		    	rs_tOracleInput_30 = stmt_tOracleInput_30.executeQuery(dbquery_tOracleInput_30);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_30 = rs_tOracleInput_30.getMetaData();
		    	int colQtyInRs_tOracleInput_30 = rsmd_tOracleInput_30.getColumnCount();

		    String tmpContent_tOracleInput_30 = null;
		    
		    
		    while (rs_tOracleInput_30.next()) {
		        nb_line_tOracleInput_30++;
		        
							if(colQtyInRs_tOracleInput_30 < 1) {
								row78.INVENTARIOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(1) != null) {
						row78.INVENTARIOS_ID = rs_tOracleInput_30.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 2) {
								row78.INV_PRODUCTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(2) != null) {
						row78.INV_PRODUCTOS_ID = rs_tOracleInput_30.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 3) {
								row78.LOTE = null;
							} else {
	                         		
        	row78.LOTE = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 4) {
								row78.FECHA_VENCIMIENTO = null;
							} else {
										
			row78.FECHA_VENCIMIENTO = routines.system.JDBCUtil.getDate(rs_tOracleInput_30, 4);
		                    }
							if(colQtyInRs_tOracleInput_30 < 5) {
								row78.INV_DCONTRATOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(5) != null) {
						row78.INV_DCONTRATOS_ID = rs_tOracleInput_30.getBigDecimal(5);
					} else {
				
						row78.INV_DCONTRATOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 6) {
								row78.CODIGOBARRAS = null;
							} else {
	                         		
        	row78.CODIGOBARRAS = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 6, false);
		                    }
					




 



/**
 * [tOracleInput_30 begin ] stop
 */
	
	/**
	 * [tOracleInput_30 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 


	tos_count_tOracleInput_30++;

/**
 * [tOracleInput_30 main ] stop
 */
	
	/**
	 * [tOracleInput_30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_13 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row78"
						
						);
					}
					



    
		row78Struct oneRow_tHashOutput_13 = new row78Struct();
				
					oneRow_tHashOutput_13.INVENTARIOS_ID = row78.INVENTARIOS_ID;
					oneRow_tHashOutput_13.INV_PRODUCTOS_ID = row78.INV_PRODUCTOS_ID;
					oneRow_tHashOutput_13.LOTE = row78.LOTE;
					oneRow_tHashOutput_13.FECHA_VENCIMIENTO = row78.FECHA_VENCIMIENTO;
					oneRow_tHashOutput_13.INV_DCONTRATOS_ID = row78.INV_DCONTRATOS_ID;
					oneRow_tHashOutput_13.CODIGOBARRAS = row78.CODIGOBARRAS;
		
        tHashFile_tHashOutput_13.put(oneRow_tHashOutput_13);
        nb_line_tHashOutput_13 ++;

 


	tos_count_tHashOutput_13++;

/**
 * [tHashOutput_13 main ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_30 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_30 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

}
}finally{
	if (rs_tOracleInput_30 != null) {
		rs_tOracleInput_30.close();
	}
	if (stmt_tOracleInput_30 != null) {
		stmt_tOracleInput_30.close();
	}
}

globalMap.put("tOracleInput_30_NB_LINE",nb_line_tOracleInput_30);
 

ok_Hash.put("tOracleInput_30", true);
end_Hash.put("tOracleInput_30", System.currentTimeMillis());




/**
 * [tOracleInput_30 end ] stop
 */

	
	/**
	 * [tHashOutput_13 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
globalMap.put("tHashOutput_13_NB_LINE", nb_line_tHashOutput_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row78");
			  	}
			  	
 

ok_Hash.put("tHashOutput_13", true);
end_Hash.put("tHashOutput_13", System.currentTimeMillis());




/**
 * [tHashOutput_13 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_30:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tOracleInput_58Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_30 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 finally ] stop
 */

	
	/**
	 * [tHashOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_30_SUBPROCESS_STATE", 1);
	}
	


public static class row139Struct implements routines.system.IPersistableRow<row139Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal DMOVIMIENTOS_ID;

				public BigDecimal getDMOVIMIENTOS_ID () {
					return this.DMOVIMIENTOS_ID;
				}

				public Boolean DMOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean DMOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer DMOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer DMOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String DMOVIMIENTOS_IDDefault(){
				
					return "";
				
				}
				public String DMOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String DMOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String DMOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "DMOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal CANTIDAD_DISPENSADA;

				public BigDecimal getCANTIDAD_DISPENSADA () {
					return this.CANTIDAD_DISPENSADA;
				}

				public Boolean CANTIDAD_DISPENSADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_DISPENSADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_DISPENSADALength(){
				    return 0;
				}
				public Integer CANTIDAD_DISPENSADAPrecision(){
				    return null;
				}
				public String CANTIDAD_DISPENSADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_DISPENSADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_DISPENSADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_DISPENSADAOriginalDbColumnName(){
				
					return "CANTIDAD_DISPENSADA";
				
				}

				
			    public BigDecimal VALOR_UNITARIO_ITEM;

				public BigDecimal getVALOR_UNITARIO_ITEM () {
					return this.VALOR_UNITARIO_ITEM;
				}

				public Boolean VALOR_UNITARIO_ITEMIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIO_ITEMIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIO_ITEMLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIO_ITEMPrecision(){
				    return null;
				}
				public String VALOR_UNITARIO_ITEMDefault(){
				
					return "";
				
				}
				public String VALOR_UNITARIO_ITEMComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIO_ITEMPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIO_ITEMOriginalDbColumnName(){
				
					return "VALOR_UNITARIO_ITEM";
				
				}

				
			    public BigDecimal PORCENTAJE_IVA;

				public BigDecimal getPORCENTAJE_IVA () {
					return this.PORCENTAJE_IVA;
				}

				public Boolean PORCENTAJE_IVAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_IVAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_IVALength(){
				    return 0;
				}
				public Integer PORCENTAJE_IVAPrecision(){
				    return 0;
				}
				public String PORCENTAJE_IVADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_IVAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_IVAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_IVAOriginalDbColumnName(){
				
					return "PORCENTAJE_IVA";
				
				}

				
			    public BigDecimal VALOR_IVA_UNITARIO;

				public BigDecimal getVALOR_IVA_UNITARIO () {
					return this.VALOR_IVA_UNITARIO;
				}

				public Boolean VALOR_IVA_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_IVA_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_IVA_UNITARIODefault(){
				
					return "";
				
				}
				public String VALOR_IVA_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_IVA_UNITARIO";
				
				}

				
			    public BigDecimal VALOR_INTERMEDIACION;

				public BigDecimal getVALOR_INTERMEDIACION () {
					return this.VALOR_INTERMEDIACION;
				}

				public Boolean VALOR_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_INTERMEDIACIONPrecision(){
				    return null;
				}
				public String VALOR_INTERMEDIACIONDefault(){
				
					return "";
				
				}
				public String VALOR_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_INTERMEDIACION";
				
				}

				
			    public BigDecimal PORCENTAJE_INTERMEDIACION;

				public BigDecimal getPORCENTAJE_INTERMEDIACION () {
					return this.PORCENTAJE_INTERMEDIACION;
				}

				public Boolean PORCENTAJE_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer PORCENTAJE_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String PORCENTAJE_INTERMEDIACIONDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONOriginalDbColumnName(){
				
					return "PORCENTAJE_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_IVA_INTERMEDIACION;

				public BigDecimal getVALOR_IVA_INTERMEDIACION () {
					return this.VALOR_IVA_INTERMEDIACION;
				}

				public Boolean VALOR_IVA_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_IVA_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_IVA_INTERMEDIACIONDefault(){
				
					return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_IVA_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_TOTAL_MEDICAMENTO;

				public BigDecimal getVALOR_TOTAL_MEDICAMENTO () {
					return this.VALOR_TOTAL_MEDICAMENTO;
				}

				public Boolean VALOR_TOTAL_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_MEDICAMENTODefault(){
				
					return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOOriginalDbColumnName(){
				
					return "VALOR_TOTAL_MEDICAMENTO";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INTERMEDIACION;

				public BigDecimal getVALOR_TOTAL_INTERMEDIACION () {
					return this.VALOR_TOTAL_INTERMEDIACION;
				}

				public Boolean VALOR_TOTAL_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_INTERMEDIACIONDefault(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INTERMEDIACION";
				
				}

				
			    public BigDecimal TOTAL_TRANSACCION_COMPLETA;

				public BigDecimal getTOTAL_TRANSACCION_COMPLETA () {
					return this.TOTAL_TRANSACCION_COMPLETA;
				}

				public Boolean TOTAL_TRANSACCION_COMPLETAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_TRANSACCION_COMPLETAIsKey(){
				    return false;
				}
				public Integer TOTAL_TRANSACCION_COMPLETALength(){
				    return 0;
				}
				public Integer TOTAL_TRANSACCION_COMPLETAPrecision(){
				    return 0;
				}
				public String TOTAL_TRANSACCION_COMPLETADefault(){
				
					return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAComment(){
				
				    return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAPattern(){
				
					return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAOriginalDbColumnName(){
				
					return "TOTAL_TRANSACCION_COMPLETA";
				
				}

				
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return null;
				}
				public String INVENTARIOS_IDDefault(){
				
					return "";
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return null;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public java.util.Date FECHA_DISPENSACION;

				public java.util.Date getFECHA_DISPENSACION () {
					return this.FECHA_DISPENSACION;
				}

				public Boolean FECHA_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer FECHA_DISPENSACIONLength(){
				    return 0;
				}
				public Integer FECHA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String FECHA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String FECHA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String FECHA_DISPENSACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_DISPENSACIONOriginalDbColumnName(){
				
					return "FECHA_DISPENSACION";
				
				}

				
			    public String HORA_DISPENSACION;

				public String getHORA_DISPENSACION () {
					return this.HORA_DISPENSACION;
				}

				public Boolean HORA_DISPENSACIONIsNullable(){
				    return true;
				}
				public Boolean HORA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer HORA_DISPENSACIONLength(){
				    return 8;
				}
				public Integer HORA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String HORA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String HORA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String HORA_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String HORA_DISPENSACIONOriginalDbColumnName(){
				
					return "HORA_DISPENSACION";
				
				}

				
			    public BigDecimal VALOR_SUBTOTAL_FORMULA;

				public BigDecimal getVALOR_SUBTOTAL_FORMULA () {
					return this.VALOR_SUBTOTAL_FORMULA;
				}

				public Boolean VALOR_SUBTOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_SUBTOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_SUBTOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_SUBTOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_SUBTOTAL_FORMULADefault(){
				
					return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_SUBTOTAL_FORMULA";
				
				}

				
			    public BigDecimal VALOR_IVA_FORMULA;

				public BigDecimal getVALOR_IVA_FORMULA () {
					return this.VALOR_IVA_FORMULA;
				}

				public Boolean VALOR_IVA_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_IVA_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_IVA_FORMULADefault(){
				
					return "";
				
				}
				public String VALOR_IVA_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_FORMULAOriginalDbColumnName(){
				
					return "VALOR_IVA_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_FORMULA;

				public BigDecimal getVALOR_TOTAL_FORMULA () {
					return this.VALOR_TOTAL_FORMULA;
				}

				public Boolean VALOR_TOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_FORMULADefault(){
				
					return "";
				
				}
				public String VALOR_TOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_FORMULA";
				
				}

				
			    public BigDecimal SUBTOTAL_INT_FORMULA;

				public BigDecimal getSUBTOTAL_INT_FORMULA () {
					return this.SUBTOTAL_INT_FORMULA;
				}

				public Boolean SUBTOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean SUBTOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer SUBTOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer SUBTOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String SUBTOTAL_INT_FORMULADefault(){
				
					return "";
				
				}
				public String SUBTOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String SUBTOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String SUBTOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "SUBTOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_IVA_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_IVA_INT_FORMULA () {
					return this.VALOR_TOTAL_IVA_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_IVA_INT_FORMULADefault(){
				
					return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_IVA_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_INT_FORMULA () {
					return this.VALOR_TOTAL_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INT_FORMULADefault(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_FINAL_FORMULA;

				public BigDecimal getVALOR_FINAL_FORMULA () {
					return this.VALOR_FINAL_FORMULA;
				}

				public Boolean VALOR_FINAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_FINAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_FINAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_FINAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_FINAL_FORMULADefault(){
				
					return "";
				
				}
				public String VALOR_FINAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_FINAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_FINAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_FINAL_FORMULA";
				
				}

				
			    public BigDecimal UORG_DISPENSA_ID;

				public BigDecimal getUORG_DISPENSA_ID () {
					return this.UORG_DISPENSA_ID;
				}

				public Boolean UORG_DISPENSA_IDIsNullable(){
				    return true;
				}
				public Boolean UORG_DISPENSA_IDIsKey(){
				    return false;
				}
				public Integer UORG_DISPENSA_IDLength(){
				    return 0;
				}
				public Integer UORG_DISPENSA_IDPrecision(){
				    return null;
				}
				public String UORG_DISPENSA_IDDefault(){
				
					return "";
				
				}
				public String UORG_DISPENSA_IDComment(){
				
				    return "";
				
				}
				public String UORG_DISPENSA_IDPattern(){
				
					return "";
				
				}
				public String UORG_DISPENSA_IDOriginalDbColumnName(){
				
					return "UORG_DISPENSA_ID";
				
				}

				
			    public String BODEGA;

				public String getBODEGA () {
					return this.BODEGA;
				}

				public Boolean BODEGAIsNullable(){
				    return true;
				}
				public Boolean BODEGAIsKey(){
				    return false;
				}
				public Integer BODEGALength(){
				    return 150;
				}
				public Integer BODEGAPrecision(){
				    return 0;
				}
				public String BODEGADefault(){
				
					return null;
				
				}
				public String BODEGAComment(){
				
				    return "";
				
				}
				public String BODEGAPattern(){
				
					return "";
				
				}
				public String BODEGAOriginalDbColumnName(){
				
					return "BODEGA";
				
				}

				
			    public java.util.Date FMOVIMIENTO;

				public java.util.Date getFMOVIMIENTO () {
					return this.FMOVIMIENTO;
				}

				public Boolean FMOVIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FMOVIMIENTOIsKey(){
				    return false;
				}
				public Integer FMOVIMIENTOLength(){
				    return 0;
				}
				public Integer FMOVIMIENTOPrecision(){
				    return 0;
				}
				public String FMOVIMIENTODefault(){
				
					return null;
				
				}
				public String FMOVIMIENTOComment(){
				
				    return "";
				
				}
				public String FMOVIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMOVIMIENTOOriginalDbColumnName(){
				
					return "FMOVIMIENTO";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DMOVIMIENTOS_ID="+String.valueOf(DMOVIMIENTOS_ID));
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",CANTIDAD_DISPENSADA="+String.valueOf(CANTIDAD_DISPENSADA));
		sb.append(",VALOR_UNITARIO_ITEM="+String.valueOf(VALOR_UNITARIO_ITEM));
		sb.append(",PORCENTAJE_IVA="+String.valueOf(PORCENTAJE_IVA));
		sb.append(",VALOR_IVA_UNITARIO="+String.valueOf(VALOR_IVA_UNITARIO));
		sb.append(",VALOR_INTERMEDIACION="+String.valueOf(VALOR_INTERMEDIACION));
		sb.append(",PORCENTAJE_INTERMEDIACION="+String.valueOf(PORCENTAJE_INTERMEDIACION));
		sb.append(",VALOR_IVA_INTERMEDIACION="+String.valueOf(VALOR_IVA_INTERMEDIACION));
		sb.append(",VALOR_TOTAL_MEDICAMENTO="+String.valueOf(VALOR_TOTAL_MEDICAMENTO));
		sb.append(",VALOR_TOTAL_INTERMEDIACION="+String.valueOf(VALOR_TOTAL_INTERMEDIACION));
		sb.append(",TOTAL_TRANSACCION_COMPLETA="+String.valueOf(TOTAL_TRANSACCION_COMPLETA));
		sb.append(",INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FECHA_DISPENSACION="+String.valueOf(FECHA_DISPENSACION));
		sb.append(",HORA_DISPENSACION="+HORA_DISPENSACION);
		sb.append(",VALOR_SUBTOTAL_FORMULA="+String.valueOf(VALOR_SUBTOTAL_FORMULA));
		sb.append(",VALOR_IVA_FORMULA="+String.valueOf(VALOR_IVA_FORMULA));
		sb.append(",VALOR_TOTAL_FORMULA="+String.valueOf(VALOR_TOTAL_FORMULA));
		sb.append(",SUBTOTAL_INT_FORMULA="+String.valueOf(SUBTOTAL_INT_FORMULA));
		sb.append(",VALOR_TOTAL_IVA_INT_FORMULA="+String.valueOf(VALOR_TOTAL_IVA_INT_FORMULA));
		sb.append(",VALOR_TOTAL_INT_FORMULA="+String.valueOf(VALOR_TOTAL_INT_FORMULA));
		sb.append(",VALOR_FINAL_FORMULA="+String.valueOf(VALOR_FINAL_FORMULA));
		sb.append(",UORG_DISPENSA_ID="+String.valueOf(UORG_DISPENSA_ID));
		sb.append(",BODEGA="+BODEGA);
		sb.append(",FMOVIMIENTO="+String.valueOf(FMOVIMIENTO));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row139Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_58Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_58_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row139Struct row139 = new row139Struct();




	
	/**
	 * [tHashOutput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_15", false);
		start_Hash.put("tHashOutput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row139");
					}
				
		int tos_count_tHashOutput_15 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row139Struct> tHashFile_tHashOutput_15 = null;
		String hashKey_tHashOutput_15 = "tHashFile_Medicamentos_" + pid + "_tHashOutput_15";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_15)){
			    if(mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15) == null){
	      		    mf_tHashOutput_15.getResourceMap().put(hashKey_tHashOutput_15, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row139Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_15 = mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15);
			    }else{
			    	tHashFile_tHashOutput_15 = mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15);
			    }
			}
        int nb_line_tHashOutput_15 = 0;

 



/**
 * [tHashOutput_15 begin ] stop
 */



	
	/**
	 * [tOracleInput_58 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_58", false);
		start_Hash.put("tOracleInput_58", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_58";
	
	
		int tos_count_tOracleInput_58 = 0;
		
	


	
		    int nb_line_tOracleInput_58 = 0;
		    java.sql.Connection conn_tOracleInput_58 = null;
				conn_tOracleInput_58 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_58 = false;
				boolean isConnectionWrapped_tOracleInput_58 = !(conn_tOracleInput_58 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_58.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_58 = null;
                if (isConnectionWrapped_tOracleInput_58) {
					unwrappedOraConn_tOracleInput_58 = conn_tOracleInput_58.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_58 != null) {
                        isTimeZoneNull_tOracleInput_58 = (unwrappedOraConn_tOracleInput_58.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_58 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_58).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_58) {
					java.sql.Statement stmtGetTZ_tOracleInput_58 = conn_tOracleInput_58.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_58 = stmtGetTZ_tOracleInput_58.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_58 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_58.next()) {
						sessionTimezone_tOracleInput_58 = rsGetTZ_tOracleInput_58.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_58 && unwrappedOraConn_tOracleInput_58 != null) {
                        unwrappedOraConn_tOracleInput_58.setSessionTimeZone(sessionTimezone_tOracleInput_58);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_58).setSessionTimeZone(sessionTimezone_tOracleInput_58);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_58 = conn_tOracleInput_58.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_58.setFetchSize(10000);


		    String dbquery_tOracleInput_58 = "SELECT \n  dmov.id  AS DMOVIMIENTOS_ID ,\n  mov.ID   AS MOVIMIENTOS_ID,\n  dmov.cantidad  AS CANTIDAD_DISPENSADA ,\n  d"
+"mov.VUNITARIO AS VALOR_UNITARIO_ITEM ,\n  CASE NVL(dmov.VUNITARIO,0)\n    WHEN 0\n    THEN 0\n    ELSE (NVL(dmov.VUNITAR"
+"IOIVA,0)/dmov.VUNITARIO)*100\n  END                  AS PORCENTAJE_IVA ,\n  dmov.VUNITARIOIVA    AS VALOR_IVA_UNITARIO ,"
+"\n  dmov.VINTERMEDIACION AS VALOR_INTERMEDIACION ,\n  CASE NVL(dmov.VINTERMEDIACION,0)\n    WHEN 0\n    THEN 0\n    ELSE"
+" ((dmov.subtotalint/dmov.subtotal)*100)\n  END AS PORCENTAJE_INTERMEDIACION ,\n  CASE NVL(dmov.CANTIDAD,0)\n    WHEN 0\n"
+"    THEN 0\n    ELSE dmov.TOTALIVAINT/dmov.CANTIDAD\n  END                          AS VALOR_IVA_INTERMEDIACION ,\n  dmo"
+"v.SUBTOTAL+dmov.VTOTALIVA AS VALOR_TOTAL_MEDICAMENTO ,\n  dmov.TOTALINTE               AS VALOR_TOTAL_INTERMEDIACION ,\n"
+"  dmov.SUBTOTAL+dmov.VTOTALIVA+dmov.TOTALINTE  AS TOTAL_TRANSACCION_COMPLETA ,\n  dmov.inventarios_id          AS INVENT"
+"ARIOS_ID ,\n  dmov.hdcontratos_id,\n  dmov.dformmedinsumos_id AS DFORMULA_ID,\n  mov.fmovimiento                        "
+"                                  AS FECHA_DISPENSACION ,\n  TO_CHAR(mov.fmovimiento, 'hh24:mi:ss')                     "
+"              AS HORA_DISPENSACION ,\n  NVL(mov.subtotal,0)                                                      AS VALO"
+"R_SUBTOTAL_FORMULA ,\n  NVL(mov.vtotaliva,0)                                                     AS VALOR_IVA_FORMULA ,"
+"\n  NVL(mov.vtotal,0)                                                        AS VALOR_TOTAL_FORMULA ,\n  NVL(mov.subtotal"
+"int,0)                                                   AS SUBTOTAL_INT_FORMULA ,\n  NVL(mov.totalivaint,0)            "
+"                                       AS VALOR_TOTAL_IVA_INT_FORMULA ,\n  NVL(mov.subtotalint,0) + NVL(mov.totalivaint,"
+"0)                          AS VALOR_TOTAL_INT_FORMULA ,\n  mov.vtotal             +(NVL(mov.totalivaint,0) +NVL(mov.sub"
+"totalint,0)) AS VALOR_FINAL_FORMULA ,\n  bod.uorg_id                            AS UORG_DISPENSA_ID,\n  bod.nombre      "
+"                       AS BODEGA,\n  TO_DATE(mov.fmovimiento, 'dd/mm/yyyy') AS FMOVIMIENTO ,\n  mov.usuarios_id         "
+"               AS USUARIOS_ID\nFROM MED_DMOVIMIENTOS dmov  \n  INNER JOIN MED_MOVIMIENTOS mov ON dmov.movimientos_id = m"
+"ov.id \n  INNER JOIN MED_TMOVIMIENTOS tmov ON tmov.id = mov.tmovimientos_id AND (tmov.sigla = 'DH' OR tmov.sigla   = 'DA"
+"')\n  LEFT JOIN MED_BODEGAS bod on bod.id = mov.bodegas_id" + context.COND_MOVIMIENTOS;
		    

		    globalMap.put("tOracleInput_58_QUERY",dbquery_tOracleInput_58);

		    java.sql.ResultSet rs_tOracleInput_58 = null;

		    try {
		    	rs_tOracleInput_58 = stmt_tOracleInput_58.executeQuery(dbquery_tOracleInput_58);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_58 = rs_tOracleInput_58.getMetaData();
		    	int colQtyInRs_tOracleInput_58 = rsmd_tOracleInput_58.getColumnCount();

		    String tmpContent_tOracleInput_58 = null;
		    
		    
		    while (rs_tOracleInput_58.next()) {
		        nb_line_tOracleInput_58++;
		        
							if(colQtyInRs_tOracleInput_58 < 1) {
								row139.DMOVIMIENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(1) != null) {
						row139.DMOVIMIENTOS_ID = rs_tOracleInput_58.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 2) {
								row139.MOVIMIENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(2) != null) {
						row139.MOVIMIENTOS_ID = rs_tOracleInput_58.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 3) {
								row139.CANTIDAD_DISPENSADA = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(3) != null) {
						row139.CANTIDAD_DISPENSADA = rs_tOracleInput_58.getBigDecimal(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 4) {
								row139.VALOR_UNITARIO_ITEM = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(4) != null) {
						row139.VALOR_UNITARIO_ITEM = rs_tOracleInput_58.getBigDecimal(4);
					} else {
				
						row139.VALOR_UNITARIO_ITEM = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 5) {
								row139.PORCENTAJE_IVA = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(5) != null) {
						row139.PORCENTAJE_IVA = rs_tOracleInput_58.getBigDecimal(5);
					} else {
				
						row139.PORCENTAJE_IVA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 6) {
								row139.VALOR_IVA_UNITARIO = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(6) != null) {
						row139.VALOR_IVA_UNITARIO = rs_tOracleInput_58.getBigDecimal(6);
					} else {
				
						row139.VALOR_IVA_UNITARIO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 7) {
								row139.VALOR_INTERMEDIACION = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(7) != null) {
						row139.VALOR_INTERMEDIACION = rs_tOracleInput_58.getBigDecimal(7);
					} else {
				
						row139.VALOR_INTERMEDIACION = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 8) {
								row139.PORCENTAJE_INTERMEDIACION = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(8) != null) {
						row139.PORCENTAJE_INTERMEDIACION = rs_tOracleInput_58.getBigDecimal(8);
					} else {
				
						row139.PORCENTAJE_INTERMEDIACION = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 9) {
								row139.VALOR_IVA_INTERMEDIACION = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(9) != null) {
						row139.VALOR_IVA_INTERMEDIACION = rs_tOracleInput_58.getBigDecimal(9);
					} else {
				
						row139.VALOR_IVA_INTERMEDIACION = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 10) {
								row139.VALOR_TOTAL_MEDICAMENTO = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(10) != null) {
						row139.VALOR_TOTAL_MEDICAMENTO = rs_tOracleInput_58.getBigDecimal(10);
					} else {
				
						row139.VALOR_TOTAL_MEDICAMENTO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 11) {
								row139.VALOR_TOTAL_INTERMEDIACION = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(11) != null) {
						row139.VALOR_TOTAL_INTERMEDIACION = rs_tOracleInput_58.getBigDecimal(11);
					} else {
				
						row139.VALOR_TOTAL_INTERMEDIACION = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 12) {
								row139.TOTAL_TRANSACCION_COMPLETA = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(12) != null) {
						row139.TOTAL_TRANSACCION_COMPLETA = rs_tOracleInput_58.getBigDecimal(12);
					} else {
				
						row139.TOTAL_TRANSACCION_COMPLETA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 13) {
								row139.INVENTARIOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(13) != null) {
						row139.INVENTARIOS_ID = rs_tOracleInput_58.getBigDecimal(13);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 14) {
								row139.HDCONTRATOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(14) != null) {
						row139.HDCONTRATOS_ID = rs_tOracleInput_58.getBigDecimal(14);
					} else {
				
						row139.HDCONTRATOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 15) {
								row139.DFORMULA_ID = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(15) != null) {
						row139.DFORMULA_ID = rs_tOracleInput_58.getBigDecimal(15);
					} else {
				
						row139.DFORMULA_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 16) {
								row139.FECHA_DISPENSACION = null;
							} else {
										
			row139.FECHA_DISPENSACION = routines.system.JDBCUtil.getDate(rs_tOracleInput_58, 16);
		                    }
							if(colQtyInRs_tOracleInput_58 < 17) {
								row139.HORA_DISPENSACION = null;
							} else {
	                         		
        	row139.HORA_DISPENSACION = routines.system.JDBCUtil.getString(rs_tOracleInput_58, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_58 < 18) {
								row139.VALOR_SUBTOTAL_FORMULA = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(18) != null) {
						row139.VALOR_SUBTOTAL_FORMULA = rs_tOracleInput_58.getBigDecimal(18);
					} else {
				
						row139.VALOR_SUBTOTAL_FORMULA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 19) {
								row139.VALOR_IVA_FORMULA = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(19) != null) {
						row139.VALOR_IVA_FORMULA = rs_tOracleInput_58.getBigDecimal(19);
					} else {
				
						row139.VALOR_IVA_FORMULA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 20) {
								row139.VALOR_TOTAL_FORMULA = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(20) != null) {
						row139.VALOR_TOTAL_FORMULA = rs_tOracleInput_58.getBigDecimal(20);
					} else {
				
						row139.VALOR_TOTAL_FORMULA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 21) {
								row139.SUBTOTAL_INT_FORMULA = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(21) != null) {
						row139.SUBTOTAL_INT_FORMULA = rs_tOracleInput_58.getBigDecimal(21);
					} else {
				
						row139.SUBTOTAL_INT_FORMULA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 22) {
								row139.VALOR_TOTAL_IVA_INT_FORMULA = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(22) != null) {
						row139.VALOR_TOTAL_IVA_INT_FORMULA = rs_tOracleInput_58.getBigDecimal(22);
					} else {
				
						row139.VALOR_TOTAL_IVA_INT_FORMULA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 23) {
								row139.VALOR_TOTAL_INT_FORMULA = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(23) != null) {
						row139.VALOR_TOTAL_INT_FORMULA = rs_tOracleInput_58.getBigDecimal(23);
					} else {
				
						row139.VALOR_TOTAL_INT_FORMULA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 24) {
								row139.VALOR_FINAL_FORMULA = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(24) != null) {
						row139.VALOR_FINAL_FORMULA = rs_tOracleInput_58.getBigDecimal(24);
					} else {
				
						row139.VALOR_FINAL_FORMULA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 25) {
								row139.UORG_DISPENSA_ID = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(25) != null) {
						row139.UORG_DISPENSA_ID = rs_tOracleInput_58.getBigDecimal(25);
					} else {
				
						row139.UORG_DISPENSA_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_58 < 26) {
								row139.BODEGA = null;
							} else {
	                         		
        	row139.BODEGA = routines.system.JDBCUtil.getString(rs_tOracleInput_58, 26, false);
		                    }
							if(colQtyInRs_tOracleInput_58 < 27) {
								row139.FMOVIMIENTO = null;
							} else {
										
			row139.FMOVIMIENTO = routines.system.JDBCUtil.getDate(rs_tOracleInput_58, 27);
		                    }
							if(colQtyInRs_tOracleInput_58 < 28) {
								row139.USUARIOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(28) != null) {
						row139.USUARIOS_ID = rs_tOracleInput_58.getBigDecimal(28);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_58 begin ] stop
 */
	
	/**
	 * [tOracleInput_58 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_58";
	
	

 


	tos_count_tOracleInput_58++;

/**
 * [tOracleInput_58 main ] stop
 */
	
	/**
	 * [tOracleInput_58 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_58";
	
	

 



/**
 * [tOracleInput_58 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_15 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row139"
						
						);
					}
					



    
		row139Struct oneRow_tHashOutput_15 = new row139Struct();
				
					oneRow_tHashOutput_15.DMOVIMIENTOS_ID = row139.DMOVIMIENTOS_ID;
					oneRow_tHashOutput_15.MOVIMIENTOS_ID = row139.MOVIMIENTOS_ID;
					oneRow_tHashOutput_15.CANTIDAD_DISPENSADA = row139.CANTIDAD_DISPENSADA;
					oneRow_tHashOutput_15.VALOR_UNITARIO_ITEM = row139.VALOR_UNITARIO_ITEM;
					oneRow_tHashOutput_15.PORCENTAJE_IVA = row139.PORCENTAJE_IVA;
					oneRow_tHashOutput_15.VALOR_IVA_UNITARIO = row139.VALOR_IVA_UNITARIO;
					oneRow_tHashOutput_15.VALOR_INTERMEDIACION = row139.VALOR_INTERMEDIACION;
					oneRow_tHashOutput_15.PORCENTAJE_INTERMEDIACION = row139.PORCENTAJE_INTERMEDIACION;
					oneRow_tHashOutput_15.VALOR_IVA_INTERMEDIACION = row139.VALOR_IVA_INTERMEDIACION;
					oneRow_tHashOutput_15.VALOR_TOTAL_MEDICAMENTO = row139.VALOR_TOTAL_MEDICAMENTO;
					oneRow_tHashOutput_15.VALOR_TOTAL_INTERMEDIACION = row139.VALOR_TOTAL_INTERMEDIACION;
					oneRow_tHashOutput_15.TOTAL_TRANSACCION_COMPLETA = row139.TOTAL_TRANSACCION_COMPLETA;
					oneRow_tHashOutput_15.INVENTARIOS_ID = row139.INVENTARIOS_ID;
					oneRow_tHashOutput_15.HDCONTRATOS_ID = row139.HDCONTRATOS_ID;
					oneRow_tHashOutput_15.DFORMULA_ID = row139.DFORMULA_ID;
					oneRow_tHashOutput_15.FECHA_DISPENSACION = row139.FECHA_DISPENSACION;
					oneRow_tHashOutput_15.HORA_DISPENSACION = row139.HORA_DISPENSACION;
					oneRow_tHashOutput_15.VALOR_SUBTOTAL_FORMULA = row139.VALOR_SUBTOTAL_FORMULA;
					oneRow_tHashOutput_15.VALOR_IVA_FORMULA = row139.VALOR_IVA_FORMULA;
					oneRow_tHashOutput_15.VALOR_TOTAL_FORMULA = row139.VALOR_TOTAL_FORMULA;
					oneRow_tHashOutput_15.SUBTOTAL_INT_FORMULA = row139.SUBTOTAL_INT_FORMULA;
					oneRow_tHashOutput_15.VALOR_TOTAL_IVA_INT_FORMULA = row139.VALOR_TOTAL_IVA_INT_FORMULA;
					oneRow_tHashOutput_15.VALOR_TOTAL_INT_FORMULA = row139.VALOR_TOTAL_INT_FORMULA;
					oneRow_tHashOutput_15.VALOR_FINAL_FORMULA = row139.VALOR_FINAL_FORMULA;
					oneRow_tHashOutput_15.UORG_DISPENSA_ID = row139.UORG_DISPENSA_ID;
					oneRow_tHashOutput_15.BODEGA = row139.BODEGA;
					oneRow_tHashOutput_15.FMOVIMIENTO = row139.FMOVIMIENTO;
					oneRow_tHashOutput_15.USUARIOS_ID = row139.USUARIOS_ID;
		
        tHashFile_tHashOutput_15.put(oneRow_tHashOutput_15);
        nb_line_tHashOutput_15 ++;

 


	tos_count_tHashOutput_15++;

/**
 * [tHashOutput_15 main ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_58 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_58";
	
	

 



/**
 * [tOracleInput_58 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_58 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_58";
	
	

}
}finally{
	if (rs_tOracleInput_58 != null) {
		rs_tOracleInput_58.close();
	}
	if (stmt_tOracleInput_58 != null) {
		stmt_tOracleInput_58.close();
	}
}

globalMap.put("tOracleInput_58_NB_LINE",nb_line_tOracleInput_58);
 

ok_Hash.put("tOracleInput_58", true);
end_Hash.put("tOracleInput_58", System.currentTimeMillis());




/**
 * [tOracleInput_58 end ] stop
 */

	
	/**
	 * [tHashOutput_15 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
globalMap.put("tHashOutput_15_NB_LINE", nb_line_tHashOutput_15);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row139");
			  	}
			  	
 

ok_Hash.put("tHashOutput_15", true);
end_Hash.put("tHashOutput_15", System.currentTimeMillis());




/**
 * [tHashOutput_15 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_58:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tOracleInput_38Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_58 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_58";
	
	

 



/**
 * [tOracleInput_58 finally ] stop
 */

	
	/**
	 * [tHashOutput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_58_SUBPROCESS_STATE", 1);
	}
	


public static class out1Struct implements routines.system.IPersistableRow<out1Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FORMULA;

				public String getFORMULA () {
					return this.FORMULA;
				}

				public Boolean FORMULAIsNullable(){
				    return true;
				}
				public Boolean FORMULAIsKey(){
				    return false;
				}
				public Integer FORMULALength(){
				    return 20;
				}
				public Integer FORMULAPrecision(){
				    return 0;
				}
				public String FORMULADefault(){
				
					return null;
				
				}
				public String FORMULAComment(){
				
				    return "C\u00F3digo";
				
				}
				public String FORMULAPattern(){
				
					return "";
				
				}
				public String FORMULAOriginalDbColumnName(){
				
					return "FORMULA";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return null;
				
				}
				public String PERSONAS_IDComment(){
				
				    return "AFILIADO";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHA_FORMULACION;

				public java.util.Date getFECHA_FORMULACION () {
					return this.FECHA_FORMULACION;
				}

				public Boolean FECHA_FORMULACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_FORMULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FORMULACIONLength(){
				    return 7;
				}
				public Integer FECHA_FORMULACIONPrecision(){
				    return 0;
				}
				public String FECHA_FORMULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FORMULACIONComment(){
				
				    return "Fecha de formulaci\u00F3n";
				
				}
				public String FECHA_FORMULACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_FORMULACIONOriginalDbColumnName(){
				
					return "FECHA_FORMULACION";
				
				}

				
			    public String POSOLOGIA;

				public String getPOSOLOGIA () {
					return this.POSOLOGIA;
				}

				public Boolean POSOLOGIAIsNullable(){
				    return true;
				}
				public Boolean POSOLOGIAIsKey(){
				    return false;
				}
				public Integer POSOLOGIALength(){
				    return 100;
				}
				public Integer POSOLOGIAPrecision(){
				    return 0;
				}
				public String POSOLOGIADefault(){
				
					return null;
				
				}
				public String POSOLOGIAComment(){
				
				    return "";
				
				}
				public String POSOLOGIAPattern(){
				
					return "";
				
				}
				public String POSOLOGIAOriginalDbColumnName(){
				
					return "POSOLOGIA";
				
				}

				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}

				public Boolean FRECUENCIAIsNullable(){
				    return true;
				}
				public Boolean FRECUENCIAIsKey(){
				    return false;
				}
				public Integer FRECUENCIALength(){
				    return 200;
				}
				public Integer FRECUENCIAPrecision(){
				    return 0;
				}
				public String FRECUENCIADefault(){
				
					return null;
				
				}
				public String FRECUENCIAComment(){
				
				    return "";
				
				}
				public String FRECUENCIAPattern(){
				
					return "";
				
				}
				public String FRECUENCIAOriginalDbColumnName(){
				
					return "FRECUENCIA";
				
				}

				
			    public BigDecimal CANTIDAD_SOLICITADA;

				public BigDecimal getCANTIDAD_SOLICITADA () {
					return this.CANTIDAD_SOLICITADA;
				}

				public Boolean CANTIDAD_SOLICITADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_SOLICITADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_SOLICITADALength(){
				    return 38;
				}
				public Integer CANTIDAD_SOLICITADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_SOLICITADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_SOLICITADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_SOLICITADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAOriginalDbColumnName(){
				
					return "CANTIDAD_SOLICITADA";
				
				}

				
			    public String ESTADO_FORMULA;

				public String getESTADO_FORMULA () {
					return this.ESTADO_FORMULA;
				}

				public Boolean ESTADO_FORMULAIsNullable(){
				    return true;
				}
				public Boolean ESTADO_FORMULAIsKey(){
				    return false;
				}
				public Integer ESTADO_FORMULALength(){
				    return 200;
				}
				public Integer ESTADO_FORMULAPrecision(){
				    return 0;
				}
				public String ESTADO_FORMULADefault(){
				
					return null;
				
				}
				public String ESTADO_FORMULAComment(){
				
				    return "";
				
				}
				public String ESTADO_FORMULAPattern(){
				
					return "";
				
				}
				public String ESTADO_FORMULAOriginalDbColumnName(){
				
					return "ESTADO_FORMULA";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return true;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return null;
				
				}
				public String DFORMULA_IDComment(){
				
				    return "PK - Llave Primaria";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public BigDecimal FORMEDINS_ID;

				public BigDecimal getFORMEDINS_ID () {
					return this.FORMEDINS_ID;
				}

				public Boolean FORMEDINS_IDIsNullable(){
				    return true;
				}
				public Boolean FORMEDINS_IDIsKey(){
				    return false;
				}
				public Integer FORMEDINS_IDLength(){
				    return 0;
				}
				public Integer FORMEDINS_IDPrecision(){
				    return null;
				}
				public String FORMEDINS_IDDefault(){
				
					return null;
				
				}
				public String FORMEDINS_IDComment(){
				
				    return "";
				
				}
				public String FORMEDINS_IDPattern(){
				
					return "";
				
				}
				public String FORMEDINS_IDOriginalDbColumnName(){
				
					return "FORMEDINS_ID";
				
				}

				
			    public String TIPO_DISPENSACION;

				public String getTIPO_DISPENSACION () {
					return this.TIPO_DISPENSACION;
				}

				public Boolean TIPO_DISPENSACIONIsNullable(){
				    return true;
				}
				public Boolean TIPO_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer TIPO_DISPENSACIONLength(){
				    return 100;
				}
				public Integer TIPO_DISPENSACIONPrecision(){
				    return 0;
				}
				public String TIPO_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String TIPO_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String TIPO_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String TIPO_DISPENSACIONOriginalDbColumnName(){
				
					return "TIPO_DISPENSACION";
				
				}

				
			    public BigDecimal PROCESOSASISTENCIALES_ID;

				public BigDecimal getPROCESOSASISTENCIALES_ID () {
					return this.PROCESOSASISTENCIALES_ID;
				}

				public Boolean PROCESOSASISTENCIALES_IDIsNullable(){
				    return true;
				}
				public Boolean PROCESOSASISTENCIALES_IDIsKey(){
				    return false;
				}
				public Integer PROCESOSASISTENCIALES_IDLength(){
				    return 0;
				}
				public Integer PROCESOSASISTENCIALES_IDPrecision(){
				    return null;
				}
				public String PROCESOSASISTENCIALES_IDDefault(){
				
					return null;
				
				}
				public String PROCESOSASISTENCIALES_IDComment(){
				
				    return "";
				
				}
				public String PROCESOSASISTENCIALES_IDPattern(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDOriginalDbColumnName(){
				
					return "PROCESOSASISTENCIALES_ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return true;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return null;
				}
				public String UORG_IDDefault(){
				
					return null;
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "PERSONA_ID QUE CORRESPONDE AL MEDICO";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public String ESPECIALIDAD_MEDICO;

				public String getESPECIALIDAD_MEDICO () {
					return this.ESPECIALIDAD_MEDICO;
				}

				public Boolean ESPECIALIDAD_MEDICOIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer ESPECIALIDAD_MEDICOLength(){
				    return 200;
				}
				public Integer ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String ESPECIALIDAD_MEDICOComment(){
				
				    return "Nombre de la especialidad";
				
				}
				public String ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "ESPECIALIDAD_MEDICO";
				
				}

				
			    public String CODIGO_ESPECIALIDAD_MEDICO;

				public String getCODIGO_ESPECIALIDAD_MEDICO () {
					return this.CODIGO_ESPECIALIDAD_MEDICO;
				}

				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOLength(){
				    return 20;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String CODIGO_ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOComment(){
				
				    return "Sigla de la especialidad";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "CODIGO_ESPECIALIDAD_MEDICO";
				
				}

				
			    public String AREA_ATENCION;

				public String getAREA_ATENCION () {
					return this.AREA_ATENCION;
				}

				public Boolean AREA_ATENCIONIsNullable(){
				    return true;
				}
				public Boolean AREA_ATENCIONIsKey(){
				    return false;
				}
				public Integer AREA_ATENCIONLength(){
				    return 200;
				}
				public Integer AREA_ATENCIONPrecision(){
				    return 0;
				}
				public String AREA_ATENCIONDefault(){
				
					return null;
				
				}
				public String AREA_ATENCIONComment(){
				
				    return "Nombre \u00E1rea atenci\u00F3n";
				
				}
				public String AREA_ATENCIONPattern(){
				
					return "";
				
				}
				public String AREA_ATENCIONOriginalDbColumnName(){
				
					return "AREA_ATENCION";
				
				}

				
			    public String SERVICIO_ATENCION;

				public String getSERVICIO_ATENCION () {
					return this.SERVICIO_ATENCION;
				}

				public Boolean SERVICIO_ATENCIONIsNullable(){
				    return true;
				}
				public Boolean SERVICIO_ATENCIONIsKey(){
				    return false;
				}
				public Integer SERVICIO_ATENCIONLength(){
				    return 50;
				}
				public Integer SERVICIO_ATENCIONPrecision(){
				    return 0;
				}
				public String SERVICIO_ATENCIONDefault(){
				
					return null;
				
				}
				public String SERVICIO_ATENCIONComment(){
				
				    return "Nombre del Servicio";
				
				}
				public String SERVICIO_ATENCIONPattern(){
				
					return "";
				
				}
				public String SERVICIO_ATENCIONOriginalDbColumnName(){
				
					return "SERVICIO_ATENCION";
				
				}

				
			    public String CAUSA_EXTERNA;

				public String getCAUSA_EXTERNA () {
					return this.CAUSA_EXTERNA;
				}

				public Boolean CAUSA_EXTERNAIsNullable(){
				    return true;
				}
				public Boolean CAUSA_EXTERNAIsKey(){
				    return false;
				}
				public Integer CAUSA_EXTERNALength(){
				    return 50;
				}
				public Integer CAUSA_EXTERNAPrecision(){
				    return 0;
				}
				public String CAUSA_EXTERNADefault(){
				
					return null;
				
				}
				public String CAUSA_EXTERNAComment(){
				
				    return "Nombre del tipo de origen";
				
				}
				public String CAUSA_EXTERNAPattern(){
				
					return "";
				
				}
				public String CAUSA_EXTERNAOriginalDbColumnName(){
				
					return "CAUSA_EXTERNA";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return null;
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return null;
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "HCL_FORMMEDINSUMOS";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal GENERICO_ID;

				public BigDecimal getGENERICO_ID () {
					return this.GENERICO_ID;
				}

				public Boolean GENERICO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_IDPrecision(){
				    return null;
				}
				public String GENERICO_IDDefault(){
				
					return null;
				
				}
				public String GENERICO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_IDOriginalDbColumnName(){
				
					return "GENERICO_ID";
				
				}

				
			    public BigDecimal GENERICO_INSUMO_ID;

				public BigDecimal getGENERICO_INSUMO_ID () {
					return this.GENERICO_INSUMO_ID;
				}

				public Boolean GENERICO_INSUMO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_INSUMO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_INSUMO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_INSUMO_IDPrecision(){
				    return null;
				}
				public String GENERICO_INSUMO_IDDefault(){
				
					return null;
				
				}
				public String GENERICO_INSUMO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_INSUMO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDOriginalDbColumnName(){
				
					return "GENERICO_INSUMO_ID";
				
				}

				
			    public BigDecimal CIE10_ID;

				public BigDecimal getCIE10_ID () {
					return this.CIE10_ID;
				}

				public Boolean CIE10_IDIsNullable(){
				    return true;
				}
				public Boolean CIE10_IDIsKey(){
				    return false;
				}
				public Integer CIE10_IDLength(){
				    return 0;
				}
				public Integer CIE10_IDPrecision(){
				    return null;
				}
				public String CIE10_IDDefault(){
				
					return null;
				
				}
				public String CIE10_IDComment(){
				
				    return "C\u00F3digo y descripci\u00F3n del diagn\u00F3stico";
				
				}
				public String CIE10_IDPattern(){
				
					return "";
				
				}
				public String CIE10_IDOriginalDbColumnName(){
				
					return "CIE10_ID";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 15;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NIVEL_ATENCION;

				public String getNIVEL_ATENCION () {
					return this.NIVEL_ATENCION;
				}

				public Boolean NIVEL_ATENCIONIsNullable(){
				    return true;
				}
				public Boolean NIVEL_ATENCIONIsKey(){
				    return false;
				}
				public Integer NIVEL_ATENCIONLength(){
				    return 50;
				}
				public Integer NIVEL_ATENCIONPrecision(){
				    return 0;
				}
				public String NIVEL_ATENCIONDefault(){
				
					return null;
				
				}
				public String NIVEL_ATENCIONComment(){
				
				    return "";
				
				}
				public String NIVEL_ATENCIONPattern(){
				
					return "";
				
				}
				public String NIVEL_ATENCIONOriginalDbColumnName(){
				
					return "NIVEL_ATENCION";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return false;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 100;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "Nombre de la forma farmaceutica";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String NIVELES_USO;

				public String getNIVELES_USO () {
					return this.NIVELES_USO;
				}

				public Boolean NIVELES_USOIsNullable(){
				    return true;
				}
				public Boolean NIVELES_USOIsKey(){
				    return false;
				}
				public Integer NIVELES_USOLength(){
				    return 4000;
				}
				public Integer NIVELES_USOPrecision(){
				    return 0;
				}
				public String NIVELES_USODefault(){
				
					return null;
				
				}
				public String NIVELES_USOComment(){
				
				    return "";
				
				}
				public String NIVELES_USOPattern(){
				
					return "";
				
				}
				public String NIVELES_USOOriginalDbColumnName(){
				
					return "NIVELES_USO";
				
				}

				
			    public String PRINCIPIO_ACTIVO;

				public String getPRINCIPIO_ACTIVO () {
					return this.PRINCIPIO_ACTIVO;
				}

				public Boolean PRINCIPIO_ACTIVOIsNullable(){
				    return true;
				}
				public Boolean PRINCIPIO_ACTIVOIsKey(){
				    return false;
				}
				public Integer PRINCIPIO_ACTIVOLength(){
				    return 200;
				}
				public Integer PRINCIPIO_ACTIVOPrecision(){
				    return 0;
				}
				public String PRINCIPIO_ACTIVODefault(){
				
					return null;
				
				}
				public String PRINCIPIO_ACTIVOComment(){
				
				    return "";
				
				}
				public String PRINCIPIO_ACTIVOPattern(){
				
					return "";
				
				}
				public String PRINCIPIO_ACTIVOOriginalDbColumnName(){
				
					return "PRINCIPIO_ACTIVO";
				
				}

				
			    public String TIPO_DIAGNOSTICO;

				public String getTIPO_DIAGNOSTICO () {
					return this.TIPO_DIAGNOSTICO;
				}

				public Boolean TIPO_DIAGNOSTICOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DIAGNOSTICOIsKey(){
				    return false;
				}
				public Integer TIPO_DIAGNOSTICOLength(){
				    return null;
				}
				public Integer TIPO_DIAGNOSTICOPrecision(){
				    return null;
				}
				public String TIPO_DIAGNOSTICODefault(){
				
					return null;
				
				}
				public String TIPO_DIAGNOSTICOComment(){
				
				    return "";
				
				}
				public String TIPO_DIAGNOSTICOPattern(){
				
					return "";
				
				}
				public String TIPO_DIAGNOSTICOOriginalDbColumnName(){
				
					return "TIPO_DIAGNOSTICO";
				
				}

				
			    public BigDecimal CANTENTREGADA;

				public BigDecimal getCANTENTREGADA () {
					return this.CANTENTREGADA;
				}

				public Boolean CANTENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTENTREGADALength(){
				    return null;
				}
				public Integer CANTENTREGADAPrecision(){
				    return null;
				}
				public String CANTENTREGADADefault(){
				
					return null;
				
				}
				public String CANTENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTENTREGADAOriginalDbColumnName(){
				
					return "CANTENTREGADA";
				
				}

				
			    public java.util.Date FECHA_VALORACION;

				public java.util.Date getFECHA_VALORACION () {
					return this.FECHA_VALORACION;
				}

				public Boolean FECHA_VALORACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VALORACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VALORACIONLength(){
				    return null;
				}
				public Integer FECHA_VALORACIONPrecision(){
				    return null;
				}
				public String FECHA_VALORACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VALORACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VALORACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VALORACIONOriginalDbColumnName(){
				
					return "FECHA_VALORACION";
				
				}

				
			    public String FINALIDAD_CONSULTA;

				public String getFINALIDAD_CONSULTA () {
					return this.FINALIDAD_CONSULTA;
				}

				public Boolean FINALIDAD_CONSULTAIsNullable(){
				    return true;
				}
				public Boolean FINALIDAD_CONSULTAIsKey(){
				    return false;
				}
				public Integer FINALIDAD_CONSULTALength(){
				    return 0;
				}
				public Integer FINALIDAD_CONSULTAPrecision(){
				    return 0;
				}
				public String FINALIDAD_CONSULTADefault(){
				
					return null;
				
				}
				public String FINALIDAD_CONSULTAComment(){
				
				    return "";
				
				}
				public String FINALIDAD_CONSULTAPattern(){
				
					return "";
				
				}
				public String FINALIDAD_CONSULTAOriginalDbColumnName(){
				
					return "FINALIDAD_CONSULTA";
				
				}

				
			    public BigDecimal DIAG_RELACIONADO1;

				public BigDecimal getDIAG_RELACIONADO1 () {
					return this.DIAG_RELACIONADO1;
				}

				public Boolean DIAG_RELACIONADO1IsNullable(){
				    return true;
				}
				public Boolean DIAG_RELACIONADO1IsKey(){
				    return false;
				}
				public Integer DIAG_RELACIONADO1Length(){
				    return 10;
				}
				public Integer DIAG_RELACIONADO1Precision(){
				    return 0;
				}
				public String DIAG_RELACIONADO1Default(){
				
					return null;
				
				}
				public String DIAG_RELACIONADO1Comment(){
				
				    return "";
				
				}
				public String DIAG_RELACIONADO1Pattern(){
				
					return "";
				
				}
				public String DIAG_RELACIONADO1OriginalDbColumnName(){
				
					return "DIAG_RELACIONADO1";
				
				}

				
			    public BigDecimal DIAG_RELACIONADO2;

				public BigDecimal getDIAG_RELACIONADO2 () {
					return this.DIAG_RELACIONADO2;
				}

				public Boolean DIAG_RELACIONADO2IsNullable(){
				    return true;
				}
				public Boolean DIAG_RELACIONADO2IsKey(){
				    return false;
				}
				public Integer DIAG_RELACIONADO2Length(){
				    return 10;
				}
				public Integer DIAG_RELACIONADO2Precision(){
				    return 0;
				}
				public String DIAG_RELACIONADO2Default(){
				
					return null;
				
				}
				public String DIAG_RELACIONADO2Comment(){
				
				    return "";
				
				}
				public String DIAG_RELACIONADO2Pattern(){
				
					return "";
				
				}
				public String DIAG_RELACIONADO2OriginalDbColumnName(){
				
					return "DIAG_RELACIONADO2";
				
				}

				
			    public BigDecimal DIAG_RELACIONADO3;

				public BigDecimal getDIAG_RELACIONADO3 () {
					return this.DIAG_RELACIONADO3;
				}

				public Boolean DIAG_RELACIONADO3IsNullable(){
				    return true;
				}
				public Boolean DIAG_RELACIONADO3IsKey(){
				    return false;
				}
				public Integer DIAG_RELACIONADO3Length(){
				    return 10;
				}
				public Integer DIAG_RELACIONADO3Precision(){
				    return 0;
				}
				public String DIAG_RELACIONADO3Default(){
				
					return null;
				
				}
				public String DIAG_RELACIONADO3Comment(){
				
				    return "";
				
				}
				public String DIAG_RELACIONADO3Pattern(){
				
					return "";
				
				}
				public String DIAG_RELACIONADO3OriginalDbColumnName(){
				
					return "DIAG_RELACIONADO3";
				
				}

				
			    public BigDecimal ESPECIALIDAD_MEDICO_ID;

				public BigDecimal getESPECIALIDAD_MEDICO_ID () {
					return this.ESPECIALIDAD_MEDICO_ID;
				}

				public Boolean ESPECIALIDAD_MEDICO_IDIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDAD_MEDICO_IDIsKey(){
				    return false;
				}
				public Integer ESPECIALIDAD_MEDICO_IDLength(){
				    return 0;
				}
				public Integer ESPECIALIDAD_MEDICO_IDPrecision(){
				    return 0;
				}
				public String ESPECIALIDAD_MEDICO_IDDefault(){
				
					return null;
				
				}
				public String ESPECIALIDAD_MEDICO_IDComment(){
				
				    return "";
				
				}
				public String ESPECIALIDAD_MEDICO_IDPattern(){
				
					return "";
				
				}
				public String ESPECIALIDAD_MEDICO_IDOriginalDbColumnName(){
				
					return "ESPECIALIDAD_MEDICO_ID";
				
				}

				
			    public BigDecimal SERVICIO_ATENCION_ID;

				public BigDecimal getSERVICIO_ATENCION_ID () {
					return this.SERVICIO_ATENCION_ID;
				}

				public Boolean SERVICIO_ATENCION_IDIsNullable(){
				    return true;
				}
				public Boolean SERVICIO_ATENCION_IDIsKey(){
				    return false;
				}
				public Integer SERVICIO_ATENCION_IDLength(){
				    return 0;
				}
				public Integer SERVICIO_ATENCION_IDPrecision(){
				    return 0;
				}
				public String SERVICIO_ATENCION_IDDefault(){
				
					return null;
				
				}
				public String SERVICIO_ATENCION_IDComment(){
				
				    return "";
				
				}
				public String SERVICIO_ATENCION_IDPattern(){
				
					return "";
				
				}
				public String SERVICIO_ATENCION_IDOriginalDbColumnName(){
				
					return "SERVICIO_ATENCION_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.DFORMULA_ID == null) ? 0 : this.DFORMULA_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final out1Struct other = (out1Struct) obj;
		
						if (this.DFORMULA_ID == null) {
							if (other.DFORMULA_ID != null)
								return false;
						
						} else if (!this.DFORMULA_ID.equals(other.DFORMULA_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(out1Struct other) {

		other.FORMULA = this.FORMULA;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            other.FECHA_FORMULACION = this.FECHA_FORMULACION;
	            other.POSOLOGIA = this.POSOLOGIA;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CANTIDAD_SOLICITADA = this.CANTIDAD_SOLICITADA;
	            other.ESTADO_FORMULA = this.ESTADO_FORMULA;
	            other.DFORMULA_ID = this.DFORMULA_ID;
	            other.FORMEDINS_ID = this.FORMEDINS_ID;
	            other.TIPO_DISPENSACION = this.TIPO_DISPENSACION;
	            other.PROCESOSASISTENCIALES_ID = this.PROCESOSASISTENCIALES_ID;
	            other.UORG_ID = this.UORG_ID;
	            other.USUARIOS_ID = this.USUARIOS_ID;
	            other.ESPECIALIDAD_MEDICO = this.ESPECIALIDAD_MEDICO;
	            other.CODIGO_ESPECIALIDAD_MEDICO = this.CODIGO_ESPECIALIDAD_MEDICO;
	            other.AREA_ATENCION = this.AREA_ATENCION;
	            other.SERVICIO_ATENCION = this.SERVICIO_ATENCION;
	            other.CAUSA_EXTERNA = this.CAUSA_EXTERNA;
	            other.PRODUCTOS_ID = this.PRODUCTOS_ID;
	            other.FORMASFARMACEUTICAS_ID = this.FORMASFARMACEUTICAS_ID;
	            other.GENERICO_ID = this.GENERICO_ID;
	            other.GENERICO_INSUMO_ID = this.GENERICO_INSUMO_ID;
	            other.CIE10_ID = this.CIE10_ID;
	            other.CODIGO_SSMP = this.CODIGO_SSMP;
	            other.NIVEL_ATENCION = this.NIVEL_ATENCION;
	            other.FORMA_FARMACEUTICA = this.FORMA_FARMACEUTICA;
	            other.NIVELES_USO = this.NIVELES_USO;
	            other.PRINCIPIO_ACTIVO = this.PRINCIPIO_ACTIVO;
	            other.TIPO_DIAGNOSTICO = this.TIPO_DIAGNOSTICO;
	            other.CANTENTREGADA = this.CANTENTREGADA;
	            other.FECHA_VALORACION = this.FECHA_VALORACION;
	            other.FINALIDAD_CONSULTA = this.FINALIDAD_CONSULTA;
	            other.DIAG_RELACIONADO1 = this.DIAG_RELACIONADO1;
	            other.DIAG_RELACIONADO2 = this.DIAG_RELACIONADO2;
	            other.DIAG_RELACIONADO3 = this.DIAG_RELACIONADO3;
	            other.ESPECIALIDAD_MEDICO_ID = this.ESPECIALIDAD_MEDICO_ID;
	            other.SERVICIO_ATENCION_ID = this.SERVICIO_ATENCION_ID;
	            
	}

	public void copyKeysDataTo(out1Struct other) {

		other.DFORMULA_ID = this.DFORMULA_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
					this.TIPO_DISPENSACION = readString(dis);
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.AREA_ATENCION = readString(dis);
					
					this.SERVICIO_ATENCION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NIVEL_ATENCION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.NIVELES_USO = readString(dis);
					
					this.PRINCIPIO_ACTIVO = readString(dis);
					
					this.TIPO_DIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
					this.FINALIDAD_CONSULTA = readString(dis);
					
						this.DIAG_RELACIONADO1 = (BigDecimal) dis.readObject();
					
						this.DIAG_RELACIONADO2 = (BigDecimal) dis.readObject();
					
						this.DIAG_RELACIONADO3 = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDAD_MEDICO_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIO_ATENCION_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
					this.TIPO_DISPENSACION = readString(dis);
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.AREA_ATENCION = readString(dis);
					
					this.SERVICIO_ATENCION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NIVEL_ATENCION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.NIVELES_USO = readString(dis);
					
					this.PRINCIPIO_ACTIVO = readString(dis);
					
					this.TIPO_DIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
					this.FINALIDAD_CONSULTA = readString(dis);
					
						this.DIAG_RELACIONADO1 = (BigDecimal) dis.readObject();
					
						this.DIAG_RELACIONADO2 = (BigDecimal) dis.readObject();
					
						this.DIAG_RELACIONADO3 = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDAD_MEDICO_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIO_ATENCION_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMEDINS_ID);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.AREA_ATENCION,dos);
					
					// String
				
						writeString(this.SERVICIO_ATENCION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NIVEL_ATENCION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.NIVELES_USO,dos);
					
					// String
				
						writeString(this.PRINCIPIO_ACTIVO,dos);
					
					// String
				
						writeString(this.TIPO_DIAGNOSTICO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// String
				
						writeString(this.FINALIDAD_CONSULTA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAG_RELACIONADO1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAG_RELACIONADO2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAG_RELACIONADO3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESPECIALIDAD_MEDICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SERVICIO_ATENCION_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMEDINS_ID);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.AREA_ATENCION,dos);
					
					// String
				
						writeString(this.SERVICIO_ATENCION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NIVEL_ATENCION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.NIVELES_USO,dos);
					
					// String
				
						writeString(this.PRINCIPIO_ACTIVO,dos);
					
					// String
				
						writeString(this.TIPO_DIAGNOSTICO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// String
				
						writeString(this.FINALIDAD_CONSULTA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAG_RELACIONADO1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAG_RELACIONADO2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAG_RELACIONADO3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESPECIALIDAD_MEDICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SERVICIO_ATENCION_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMULA="+FORMULA);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHA_FORMULACION="+String.valueOf(FECHA_FORMULACION));
		sb.append(",POSOLOGIA="+POSOLOGIA);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CANTIDAD_SOLICITADA="+String.valueOf(CANTIDAD_SOLICITADA));
		sb.append(",ESTADO_FORMULA="+ESTADO_FORMULA);
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FORMEDINS_ID="+String.valueOf(FORMEDINS_ID));
		sb.append(",TIPO_DISPENSACION="+TIPO_DISPENSACION);
		sb.append(",PROCESOSASISTENCIALES_ID="+String.valueOf(PROCESOSASISTENCIALES_ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",ESPECIALIDAD_MEDICO="+ESPECIALIDAD_MEDICO);
		sb.append(",CODIGO_ESPECIALIDAD_MEDICO="+CODIGO_ESPECIALIDAD_MEDICO);
		sb.append(",AREA_ATENCION="+AREA_ATENCION);
		sb.append(",SERVICIO_ATENCION="+SERVICIO_ATENCION);
		sb.append(",CAUSA_EXTERNA="+CAUSA_EXTERNA);
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",GENERICO_ID="+String.valueOf(GENERICO_ID));
		sb.append(",GENERICO_INSUMO_ID="+String.valueOf(GENERICO_INSUMO_ID));
		sb.append(",CIE10_ID="+String.valueOf(CIE10_ID));
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NIVEL_ATENCION="+NIVEL_ATENCION);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",NIVELES_USO="+NIVELES_USO);
		sb.append(",PRINCIPIO_ACTIVO="+PRINCIPIO_ACTIVO);
		sb.append(",TIPO_DIAGNOSTICO="+TIPO_DIAGNOSTICO);
		sb.append(",CANTENTREGADA="+String.valueOf(CANTENTREGADA));
		sb.append(",FECHA_VALORACION="+String.valueOf(FECHA_VALORACION));
		sb.append(",FINALIDAD_CONSULTA="+FINALIDAD_CONSULTA);
		sb.append(",DIAG_RELACIONADO1="+String.valueOf(DIAG_RELACIONADO1));
		sb.append(",DIAG_RELACIONADO2="+String.valueOf(DIAG_RELACIONADO2));
		sb.append(",DIAG_RELACIONADO3="+String.valueOf(DIAG_RELACIONADO3));
		sb.append(",ESPECIALIDAD_MEDICO_ID="+String.valueOf(ESPECIALIDAD_MEDICO_ID));
		sb.append(",SERVICIO_ATENCION_ID="+String.valueOf(SERVICIO_ATENCION_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.DFORMULA_ID, other.DFORMULA_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out11Struct implements routines.system.IPersistableRow<out11Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal FORMULA_ID;

				public BigDecimal getFORMULA_ID () {
					return this.FORMULA_ID;
				}

				public Boolean FORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean FORMULA_IDIsKey(){
				    return false;
				}
				public Integer FORMULA_IDLength(){
				    return 0;
				}
				public Integer FORMULA_IDPrecision(){
				    return null;
				}
				public String FORMULA_IDDefault(){
				
					return "";
				
				}
				public String FORMULA_IDComment(){
				
				    return "";
				
				}
				public String FORMULA_IDPattern(){
				
					return "";
				
				}
				public String FORMULA_IDOriginalDbColumnName(){
				
					return "FORMULA_ID";
				
				}

				
			    public String FORMULA;

				public String getFORMULA () {
					return this.FORMULA;
				}

				public Boolean FORMULAIsNullable(){
				    return false;
				}
				public Boolean FORMULAIsKey(){
				    return false;
				}
				public Integer FORMULALength(){
				    return 50;
				}
				public Integer FORMULAPrecision(){
				    return 0;
				}
				public String FORMULADefault(){
				
					return null;
				
				}
				public String FORMULAComment(){
				
				    return "";
				
				}
				public String FORMULAPattern(){
				
					return "";
				
				}
				public String FORMULAOriginalDbColumnName(){
				
					return "FORMULA";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHA_FORMULACION;

				public java.util.Date getFECHA_FORMULACION () {
					return this.FECHA_FORMULACION;
				}

				public Boolean FECHA_FORMULACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_FORMULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FORMULACIONLength(){
				    return 0;
				}
				public Integer FECHA_FORMULACIONPrecision(){
				    return 0;
				}
				public String FECHA_FORMULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FORMULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_FORMULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_FORMULACIONOriginalDbColumnName(){
				
					return "FECHA_FORMULACION";
				
				}

				
			    public String POSOLOGIA;

				public String getPOSOLOGIA () {
					return this.POSOLOGIA;
				}

				public Boolean POSOLOGIAIsNullable(){
				    return true;
				}
				public Boolean POSOLOGIAIsKey(){
				    return false;
				}
				public Integer POSOLOGIALength(){
				    return 200;
				}
				public Integer POSOLOGIAPrecision(){
				    return 0;
				}
				public String POSOLOGIADefault(){
				
					return null;
				
				}
				public String POSOLOGIAComment(){
				
				    return "";
				
				}
				public String POSOLOGIAPattern(){
				
					return "";
				
				}
				public String POSOLOGIAOriginalDbColumnName(){
				
					return "POSOLOGIA";
				
				}

				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}

				public Boolean FRECUENCIAIsNullable(){
				    return true;
				}
				public Boolean FRECUENCIAIsKey(){
				    return false;
				}
				public Integer FRECUENCIALength(){
				    return 53;
				}
				public Integer FRECUENCIAPrecision(){
				    return 0;
				}
				public String FRECUENCIADefault(){
				
					return null;
				
				}
				public String FRECUENCIAComment(){
				
				    return "";
				
				}
				public String FRECUENCIAPattern(){
				
					return "";
				
				}
				public String FRECUENCIAOriginalDbColumnName(){
				
					return "FRECUENCIA";
				
				}

				
			    public BigDecimal CANTIDAD_SOLICITADA;

				public BigDecimal getCANTIDAD_SOLICITADA () {
					return this.CANTIDAD_SOLICITADA;
				}

				public Boolean CANTIDAD_SOLICITADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_SOLICITADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_SOLICITADALength(){
				    return 0;
				}
				public Integer CANTIDAD_SOLICITADAPrecision(){
				    return null;
				}
				public String CANTIDAD_SOLICITADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_SOLICITADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAOriginalDbColumnName(){
				
					return "CANTIDAD_SOLICITADA";
				
				}

				
			    public String ESTADO_FORMULA;

				public String getESTADO_FORMULA () {
					return this.ESTADO_FORMULA;
				}

				public Boolean ESTADO_FORMULAIsNullable(){
				    return false;
				}
				public Boolean ESTADO_FORMULAIsKey(){
				    return false;
				}
				public Integer ESTADO_FORMULALength(){
				    return 20;
				}
				public Integer ESTADO_FORMULAPrecision(){
				    return 0;
				}
				public String ESTADO_FORMULADefault(){
				
					return null;
				
				}
				public String ESTADO_FORMULAComment(){
				
				    return "";
				
				}
				public String ESTADO_FORMULAPattern(){
				
					return "";
				
				}
				public String ESTADO_FORMULAOriginalDbColumnName(){
				
					return "ESTADO_FORMULA";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return true;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public BigDecimal FORMEDINS_ID;

				public BigDecimal getFORMEDINS_ID () {
					return this.FORMEDINS_ID;
				}

				public Boolean FORMEDINS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMEDINS_IDIsKey(){
				    return false;
				}
				public Integer FORMEDINS_IDLength(){
				    return 0;
				}
				public Integer FORMEDINS_IDPrecision(){
				    return null;
				}
				public String FORMEDINS_IDDefault(){
				
					return "";
				
				}
				public String FORMEDINS_IDComment(){
				
				    return "";
				
				}
				public String FORMEDINS_IDPattern(){
				
					return "";
				
				}
				public String FORMEDINS_IDOriginalDbColumnName(){
				
					return "FORMEDINS_ID";
				
				}

				
			    public BigDecimal TFORMULAS_ID;

				public BigDecimal getTFORMULAS_ID () {
					return this.TFORMULAS_ID;
				}

				public Boolean TFORMULAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMULAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMULAS_IDLength(){
				    return 0;
				}
				public Integer TFORMULAS_IDPrecision(){
				    return null;
				}
				public String TFORMULAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMULAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMULAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMULAS_IDOriginalDbColumnName(){
				
					return "TFORMULAS_ID";
				
				}

				
			    public BigDecimal PROCESOSASISTENCIALES_ID;

				public BigDecimal getPROCESOSASISTENCIALES_ID () {
					return this.PROCESOSASISTENCIALES_ID;
				}

				public Boolean PROCESOSASISTENCIALES_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOSASISTENCIALES_IDIsKey(){
				    return false;
				}
				public Integer PROCESOSASISTENCIALES_IDLength(){
				    return 0;
				}
				public Integer PROCESOSASISTENCIALES_IDPrecision(){
				    return null;
				}
				public String PROCESOSASISTENCIALES_IDDefault(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDComment(){
				
				    return "";
				
				}
				public String PROCESOSASISTENCIALES_IDPattern(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDOriginalDbColumnName(){
				
					return "PROCESOSASISTENCIALES_ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return false;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return null;
				}
				public String UORG_IDDefault(){
				
					return "";
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal ESPECIALIDADES_ID;

				public BigDecimal getESPECIALIDADES_ID () {
					return this.ESPECIALIDADES_ID;
				}

				public Boolean ESPECIALIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDADES_IDIsKey(){
				    return false;
				}
				public Integer ESPECIALIDADES_IDLength(){
				    return 0;
				}
				public Integer ESPECIALIDADES_IDPrecision(){
				    return null;
				}
				public String ESPECIALIDADES_IDDefault(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDComment(){
				
				    return "";
				
				}
				public String ESPECIALIDADES_IDPattern(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDOriginalDbColumnName(){
				
					return "ESPECIALIDADES_ID";
				
				}

				
			    public BigDecimal SERVICIOS_ID;

				public BigDecimal getSERVICIOS_ID () {
					return this.SERVICIOS_ID;
				}

				public Boolean SERVICIOS_IDIsNullable(){
				    return true;
				}
				public Boolean SERVICIOS_IDIsKey(){
				    return false;
				}
				public Integer SERVICIOS_IDLength(){
				    return 0;
				}
				public Integer SERVICIOS_IDPrecision(){
				    return null;
				}
				public String SERVICIOS_IDDefault(){
				
					return "";
				
				}
				public String SERVICIOS_IDComment(){
				
				    return "";
				
				}
				public String SERVICIOS_IDPattern(){
				
					return "";
				
				}
				public String SERVICIOS_IDOriginalDbColumnName(){
				
					return "SERVICIOS_ID";
				
				}

				
			    public BigDecimal TORIGEN_ID;

				public BigDecimal getTORIGEN_ID () {
					return this.TORIGEN_ID;
				}

				public Boolean TORIGEN_IDIsNullable(){
				    return true;
				}
				public Boolean TORIGEN_IDIsKey(){
				    return false;
				}
				public Integer TORIGEN_IDLength(){
				    return 0;
				}
				public Integer TORIGEN_IDPrecision(){
				    return null;
				}
				public String TORIGEN_IDDefault(){
				
					return "";
				
				}
				public String TORIGEN_IDComment(){
				
				    return "";
				
				}
				public String TORIGEN_IDPattern(){
				
					return "";
				
				}
				public String TORIGEN_IDOriginalDbColumnName(){
				
					return "TORIGEN_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal TFORMASFARMACEUTICAS_ID;

				public BigDecimal getTFORMASFARMACEUTICAS_ID () {
					return this.TFORMASFARMACEUTICAS_ID;
				}

				public Boolean TFORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer TFORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String TFORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "TFORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal GENERICO_ID;

				public BigDecimal getGENERICO_ID () {
					return this.GENERICO_ID;
				}

				public Boolean GENERICO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_IDPrecision(){
				    return null;
				}
				public String GENERICO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_IDOriginalDbColumnName(){
				
					return "GENERICO_ID";
				
				}

				
			    public BigDecimal GENERICO_INSUMO_ID;

				public BigDecimal getGENERICO_INSUMO_ID () {
					return this.GENERICO_INSUMO_ID;
				}

				public Boolean GENERICO_INSUMO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_INSUMO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_INSUMO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_INSUMO_IDPrecision(){
				    return 0;
				}
				public String GENERICO_INSUMO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_INSUMO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDOriginalDbColumnName(){
				
					return "GENERICO_INSUMO_ID";
				
				}

				
			    public BigDecimal CIE10_ID;

				public BigDecimal getCIE10_ID () {
					return this.CIE10_ID;
				}

				public Boolean CIE10_IDIsNullable(){
				    return true;
				}
				public Boolean CIE10_IDIsKey(){
				    return false;
				}
				public Integer CIE10_IDLength(){
				    return 0;
				}
				public Integer CIE10_IDPrecision(){
				    return null;
				}
				public String CIE10_IDDefault(){
				
					return "";
				
				}
				public String CIE10_IDComment(){
				
				    return "";
				
				}
				public String CIE10_IDPattern(){
				
					return "";
				
				}
				public String CIE10_IDOriginalDbColumnName(){
				
					return "CIE10_ID";
				
				}

				
			    public String TDIAGNOSTICO;

				public String getTDIAGNOSTICO () {
					return this.TDIAGNOSTICO;
				}

				public Boolean TDIAGNOSTICOIsNullable(){
				    return true;
				}
				public Boolean TDIAGNOSTICOIsKey(){
				    return false;
				}
				public Integer TDIAGNOSTICOLength(){
				    return 50;
				}
				public Integer TDIAGNOSTICOPrecision(){
				    return 0;
				}
				public String TDIAGNOSTICODefault(){
				
					return null;
				
				}
				public String TDIAGNOSTICOComment(){
				
				    return "";
				
				}
				public String TDIAGNOSTICOPattern(){
				
					return "";
				
				}
				public String TDIAGNOSTICOOriginalDbColumnName(){
				
					return "TDIAGNOSTICO";
				
				}

				
			    public BigDecimal CANTENTREGADA;

				public BigDecimal getCANTENTREGADA () {
					return this.CANTENTREGADA;
				}

				public Boolean CANTENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTENTREGADALength(){
				    return 0;
				}
				public Integer CANTENTREGADAPrecision(){
				    return null;
				}
				public String CANTENTREGADADefault(){
				
					return "";
				
				}
				public String CANTENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTENTREGADAOriginalDbColumnName(){
				
					return "CANTENTREGADA";
				
				}

				
			    public java.util.Date FECHA_VALORACION;

				public java.util.Date getFECHA_VALORACION () {
					return this.FECHA_VALORACION;
				}

				public Boolean FECHA_VALORACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VALORACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VALORACIONLength(){
				    return 0;
				}
				public Integer FECHA_VALORACIONPrecision(){
				    return 0;
				}
				public String FECHA_VALORACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VALORACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VALORACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VALORACIONOriginalDbColumnName(){
				
					return "FECHA_VALORACION";
				
				}

				
			    public BigDecimal DIAGNOSTICOS_ID;

				public BigDecimal getDIAGNOSTICOS_ID () {
					return this.DIAGNOSTICOS_ID;
				}

				public Boolean DIAGNOSTICOS_IDIsNullable(){
				    return true;
				}
				public Boolean DIAGNOSTICOS_IDIsKey(){
				    return false;
				}
				public Integer DIAGNOSTICOS_IDLength(){
				    return 0;
				}
				public Integer DIAGNOSTICOS_IDPrecision(){
				    return null;
				}
				public String DIAGNOSTICOS_IDDefault(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDComment(){
				
				    return "";
				
				}
				public String DIAGNOSTICOS_IDPattern(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDOriginalDbColumnName(){
				
					return "DIAGNOSTICOS_ID";
				
				}

				
			    public String FINALIDADCONSULTA;

				public String getFINALIDADCONSULTA () {
					return this.FINALIDADCONSULTA;
				}

				public Boolean FINALIDADCONSULTAIsNullable(){
				    return true;
				}
				public Boolean FINALIDADCONSULTAIsKey(){
				    return false;
				}
				public Integer FINALIDADCONSULTALength(){
				    return 200;
				}
				public Integer FINALIDADCONSULTAPrecision(){
				    return 0;
				}
				public String FINALIDADCONSULTADefault(){
				
					return null;
				
				}
				public String FINALIDADCONSULTAComment(){
				
				    return "";
				
				}
				public String FINALIDADCONSULTAPattern(){
				
					return "";
				
				}
				public String FINALIDADCONSULTAOriginalDbColumnName(){
				
					return "FINALIDADCONSULTA";
				
				}

				
			    public String SERVICIO_ATENCION;

				public String getSERVICIO_ATENCION () {
					return this.SERVICIO_ATENCION;
				}

				public Boolean SERVICIO_ATENCIONIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_ATENCIONIsKey(){
				    return false;
				}
				public Integer SERVICIO_ATENCIONLength(){
				    return 50;
				}
				public Integer SERVICIO_ATENCIONPrecision(){
				    return 0;
				}
				public String SERVICIO_ATENCIONDefault(){
				
					return null;
				
				}
				public String SERVICIO_ATENCIONComment(){
				
				    return "Nombre del Servicio";
				
				}
				public String SERVICIO_ATENCIONPattern(){
				
					return "";
				
				}
				public String SERVICIO_ATENCIONOriginalDbColumnName(){
				
					return "SERVICIO_ATENCION";
				
				}

				
			    public String SERVICIO_SIGLA;

				public String getSERVICIO_SIGLA () {
					return this.SERVICIO_SIGLA;
				}

				public Boolean SERVICIO_SIGLAIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_SIGLAIsKey(){
				    return false;
				}
				public Integer SERVICIO_SIGLALength(){
				    return 10;
				}
				public Integer SERVICIO_SIGLAPrecision(){
				    return 0;
				}
				public String SERVICIO_SIGLADefault(){
				
					return null;
				
				}
				public String SERVICIO_SIGLAComment(){
				
				    return "Sigla del Servicio";
				
				}
				public String SERVICIO_SIGLAPattern(){
				
					return "";
				
				}
				public String SERVICIO_SIGLAOriginalDbColumnName(){
				
					return "SERVICIO_SIGLA";
				
				}

				
			    public String ESPECIALIDAD_MEDICO;

				public String getESPECIALIDAD_MEDICO () {
					return this.ESPECIALIDAD_MEDICO;
				}

				public Boolean ESPECIALIDAD_MEDICOIsNullable(){
				    return false;
				}
				public Boolean ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer ESPECIALIDAD_MEDICOLength(){
				    return 500;
				}
				public Integer ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "ESPECIALIDAD_MEDICO";
				
				}

				
			    public String CODIGO_ESPECIALIDAD_MEDICO;

				public String getCODIGO_ESPECIALIDAD_MEDICO () {
					return this.CODIGO_ESPECIALIDAD_MEDICO;
				}

				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOLength(){
				    return 20;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String CODIGO_ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "CODIGO_ESPECIALIDAD_MEDICO";
				
				}

				
			    public String TIPO_DISPENSACION;

				public String getTIPO_DISPENSACION () {
					return this.TIPO_DISPENSACION;
				}

				public Boolean TIPO_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean TIPO_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer TIPO_DISPENSACIONLength(){
				    return 100;
				}
				public Integer TIPO_DISPENSACIONPrecision(){
				    return 0;
				}
				public String TIPO_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String TIPO_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String TIPO_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String TIPO_DISPENSACIONOriginalDbColumnName(){
				
					return "TIPO_DISPENSACION";
				
				}

				
			    public String CAUSA_EXTERNA;

				public String getCAUSA_EXTERNA () {
					return this.CAUSA_EXTERNA;
				}

				public Boolean CAUSA_EXTERNAIsNullable(){
				    return false;
				}
				public Boolean CAUSA_EXTERNAIsKey(){
				    return false;
				}
				public Integer CAUSA_EXTERNALength(){
				    return 50;
				}
				public Integer CAUSA_EXTERNAPrecision(){
				    return 0;
				}
				public String CAUSA_EXTERNADefault(){
				
					return null;
				
				}
				public String CAUSA_EXTERNAComment(){
				
				    return "";
				
				}
				public String CAUSA_EXTERNAPattern(){
				
					return "";
				
				}
				public String CAUSA_EXTERNAOriginalDbColumnName(){
				
					return "CAUSA_EXTERNA";
				
				}

				
			    public BigDecimal DACUERDOS_ID;

				public BigDecimal getDACUERDOS_ID () {
					return this.DACUERDOS_ID;
				}

				public Boolean DACUERDOS_IDIsNullable(){
				    return false;
				}
				public Boolean DACUERDOS_IDIsKey(){
				    return false;
				}
				public Integer DACUERDOS_IDLength(){
				    return 0;
				}
				public Integer DACUERDOS_IDPrecision(){
				    return null;
				}
				public String DACUERDOS_IDDefault(){
				
					return "";
				
				}
				public String DACUERDOS_IDComment(){
				
				    return "";
				
				}
				public String DACUERDOS_IDPattern(){
				
					return "";
				
				}
				public String DACUERDOS_IDOriginalDbColumnName(){
				
					return "DACUERDOS_ID";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 15;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NIVEL_ATENCION;

				public String getNIVEL_ATENCION () {
					return this.NIVEL_ATENCION;
				}

				public Boolean NIVEL_ATENCIONIsNullable(){
				    return true;
				}
				public Boolean NIVEL_ATENCIONIsKey(){
				    return false;
				}
				public Integer NIVEL_ATENCIONLength(){
				    return 50;
				}
				public Integer NIVEL_ATENCIONPrecision(){
				    return 0;
				}
				public String NIVEL_ATENCIONDefault(){
				
					return null;
				
				}
				public String NIVEL_ATENCIONComment(){
				
				    return "";
				
				}
				public String NIVEL_ATENCIONPattern(){
				
					return "";
				
				}
				public String NIVEL_ATENCIONOriginalDbColumnName(){
				
					return "NIVEL_ATENCION";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return false;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 100;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String NIVELES_USO;

				public String getNIVELES_USO () {
					return this.NIVELES_USO;
				}

				public Boolean NIVELES_USOIsNullable(){
				    return true;
				}
				public Boolean NIVELES_USOIsKey(){
				    return false;
				}
				public Integer NIVELES_USOLength(){
				    return 4000;
				}
				public Integer NIVELES_USOPrecision(){
				    return 0;
				}
				public String NIVELES_USODefault(){
				
					return null;
				
				}
				public String NIVELES_USOComment(){
				
				    return "";
				
				}
				public String NIVELES_USOPattern(){
				
					return "";
				
				}
				public String NIVELES_USOOriginalDbColumnName(){
				
					return "NIVELES_USO";
				
				}

				
			    public String PRINCIPIO_ACTIVO;

				public String getPRINCIPIO_ACTIVO () {
					return this.PRINCIPIO_ACTIVO;
				}

				public Boolean PRINCIPIO_ACTIVOIsNullable(){
				    return false;
				}
				public Boolean PRINCIPIO_ACTIVOIsKey(){
				    return false;
				}
				public Integer PRINCIPIO_ACTIVOLength(){
				    return 200;
				}
				public Integer PRINCIPIO_ACTIVOPrecision(){
				    return 0;
				}
				public String PRINCIPIO_ACTIVODefault(){
				
					return null;
				
				}
				public String PRINCIPIO_ACTIVOComment(){
				
				    return "";
				
				}
				public String PRINCIPIO_ACTIVOPattern(){
				
					return "";
				
				}
				public String PRINCIPIO_ACTIVOOriginalDbColumnName(){
				
					return "PRINCIPIO_ACTIVO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_ATENCION = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
						this.DACUERDOS_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NIVEL_ATENCION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.NIVELES_USO = readString(dis);
					
					this.PRINCIPIO_ACTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_ATENCION = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
						this.DACUERDOS_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NIVEL_ATENCION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.NIVELES_USO = readString(dis);
					
					this.PRINCIPIO_ACTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_ATENCION,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DACUERDOS_ID);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NIVEL_ATENCION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.NIVELES_USO,dos);
					
					// String
				
						writeString(this.PRINCIPIO_ACTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_ATENCION,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DACUERDOS_ID);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NIVEL_ATENCION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.NIVELES_USO,dos);
					
					// String
				
						writeString(this.PRINCIPIO_ACTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMULA_ID="+String.valueOf(FORMULA_ID));
		sb.append(",FORMULA="+FORMULA);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHA_FORMULACION="+String.valueOf(FECHA_FORMULACION));
		sb.append(",POSOLOGIA="+POSOLOGIA);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CANTIDAD_SOLICITADA="+String.valueOf(CANTIDAD_SOLICITADA));
		sb.append(",ESTADO_FORMULA="+ESTADO_FORMULA);
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FORMEDINS_ID="+String.valueOf(FORMEDINS_ID));
		sb.append(",TFORMULAS_ID="+String.valueOf(TFORMULAS_ID));
		sb.append(",PROCESOSASISTENCIALES_ID="+String.valueOf(PROCESOSASISTENCIALES_ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",ESPECIALIDADES_ID="+String.valueOf(ESPECIALIDADES_ID));
		sb.append(",SERVICIOS_ID="+String.valueOf(SERVICIOS_ID));
		sb.append(",TORIGEN_ID="+String.valueOf(TORIGEN_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",TFORMASFARMACEUTICAS_ID="+String.valueOf(TFORMASFARMACEUTICAS_ID));
		sb.append(",GENERICO_ID="+String.valueOf(GENERICO_ID));
		sb.append(",GENERICO_INSUMO_ID="+String.valueOf(GENERICO_INSUMO_ID));
		sb.append(",CIE10_ID="+String.valueOf(CIE10_ID));
		sb.append(",TDIAGNOSTICO="+TDIAGNOSTICO);
		sb.append(",CANTENTREGADA="+String.valueOf(CANTENTREGADA));
		sb.append(",FECHA_VALORACION="+String.valueOf(FECHA_VALORACION));
		sb.append(",DIAGNOSTICOS_ID="+String.valueOf(DIAGNOSTICOS_ID));
		sb.append(",FINALIDADCONSULTA="+FINALIDADCONSULTA);
		sb.append(",SERVICIO_ATENCION="+SERVICIO_ATENCION);
		sb.append(",SERVICIO_SIGLA="+SERVICIO_SIGLA);
		sb.append(",ESPECIALIDAD_MEDICO="+ESPECIALIDAD_MEDICO);
		sb.append(",CODIGO_ESPECIALIDAD_MEDICO="+CODIGO_ESPECIALIDAD_MEDICO);
		sb.append(",TIPO_DISPENSACION="+TIPO_DISPENSACION);
		sb.append(",CAUSA_EXTERNA="+CAUSA_EXTERNA);
		sb.append(",DACUERDOS_ID="+String.valueOf(DACUERDOS_ID));
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NIVEL_ATENCION="+NIVEL_ATENCION);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",NIVELES_USO="+NIVELES_USO);
		sb.append(",PRINCIPIO_ACTIVO="+PRINCIPIO_ACTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out10Struct implements routines.system.IPersistableRow<out10Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal FORMULA_ID;

				public BigDecimal getFORMULA_ID () {
					return this.FORMULA_ID;
				}

				public Boolean FORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean FORMULA_IDIsKey(){
				    return false;
				}
				public Integer FORMULA_IDLength(){
				    return 0;
				}
				public Integer FORMULA_IDPrecision(){
				    return null;
				}
				public String FORMULA_IDDefault(){
				
					return "";
				
				}
				public String FORMULA_IDComment(){
				
				    return "";
				
				}
				public String FORMULA_IDPattern(){
				
					return "";
				
				}
				public String FORMULA_IDOriginalDbColumnName(){
				
					return "FORMULA_ID";
				
				}

				
			    public String FORMULA;

				public String getFORMULA () {
					return this.FORMULA;
				}

				public Boolean FORMULAIsNullable(){
				    return false;
				}
				public Boolean FORMULAIsKey(){
				    return false;
				}
				public Integer FORMULALength(){
				    return 50;
				}
				public Integer FORMULAPrecision(){
				    return 0;
				}
				public String FORMULADefault(){
				
					return null;
				
				}
				public String FORMULAComment(){
				
				    return "";
				
				}
				public String FORMULAPattern(){
				
					return "";
				
				}
				public String FORMULAOriginalDbColumnName(){
				
					return "FORMULA";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHA_FORMULACION;

				public java.util.Date getFECHA_FORMULACION () {
					return this.FECHA_FORMULACION;
				}

				public Boolean FECHA_FORMULACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_FORMULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FORMULACIONLength(){
				    return 0;
				}
				public Integer FECHA_FORMULACIONPrecision(){
				    return 0;
				}
				public String FECHA_FORMULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FORMULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_FORMULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_FORMULACIONOriginalDbColumnName(){
				
					return "FECHA_FORMULACION";
				
				}

				
			    public String POSOLOGIA;

				public String getPOSOLOGIA () {
					return this.POSOLOGIA;
				}

				public Boolean POSOLOGIAIsNullable(){
				    return true;
				}
				public Boolean POSOLOGIAIsKey(){
				    return false;
				}
				public Integer POSOLOGIALength(){
				    return 200;
				}
				public Integer POSOLOGIAPrecision(){
				    return 0;
				}
				public String POSOLOGIADefault(){
				
					return null;
				
				}
				public String POSOLOGIAComment(){
				
				    return "";
				
				}
				public String POSOLOGIAPattern(){
				
					return "";
				
				}
				public String POSOLOGIAOriginalDbColumnName(){
				
					return "POSOLOGIA";
				
				}

				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}

				public Boolean FRECUENCIAIsNullable(){
				    return true;
				}
				public Boolean FRECUENCIAIsKey(){
				    return false;
				}
				public Integer FRECUENCIALength(){
				    return 53;
				}
				public Integer FRECUENCIAPrecision(){
				    return 0;
				}
				public String FRECUENCIADefault(){
				
					return null;
				
				}
				public String FRECUENCIAComment(){
				
				    return "";
				
				}
				public String FRECUENCIAPattern(){
				
					return "";
				
				}
				public String FRECUENCIAOriginalDbColumnName(){
				
					return "FRECUENCIA";
				
				}

				
			    public BigDecimal CANTIDAD_SOLICITADA;

				public BigDecimal getCANTIDAD_SOLICITADA () {
					return this.CANTIDAD_SOLICITADA;
				}

				public Boolean CANTIDAD_SOLICITADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_SOLICITADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_SOLICITADALength(){
				    return 0;
				}
				public Integer CANTIDAD_SOLICITADAPrecision(){
				    return null;
				}
				public String CANTIDAD_SOLICITADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_SOLICITADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAOriginalDbColumnName(){
				
					return "CANTIDAD_SOLICITADA";
				
				}

				
			    public String ESTADO_FORMULA;

				public String getESTADO_FORMULA () {
					return this.ESTADO_FORMULA;
				}

				public Boolean ESTADO_FORMULAIsNullable(){
				    return false;
				}
				public Boolean ESTADO_FORMULAIsKey(){
				    return false;
				}
				public Integer ESTADO_FORMULALength(){
				    return 20;
				}
				public Integer ESTADO_FORMULAPrecision(){
				    return 0;
				}
				public String ESTADO_FORMULADefault(){
				
					return null;
				
				}
				public String ESTADO_FORMULAComment(){
				
				    return "";
				
				}
				public String ESTADO_FORMULAPattern(){
				
					return "";
				
				}
				public String ESTADO_FORMULAOriginalDbColumnName(){
				
					return "ESTADO_FORMULA";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return true;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public BigDecimal FORMEDINS_ID;

				public BigDecimal getFORMEDINS_ID () {
					return this.FORMEDINS_ID;
				}

				public Boolean FORMEDINS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMEDINS_IDIsKey(){
				    return false;
				}
				public Integer FORMEDINS_IDLength(){
				    return 0;
				}
				public Integer FORMEDINS_IDPrecision(){
				    return null;
				}
				public String FORMEDINS_IDDefault(){
				
					return "";
				
				}
				public String FORMEDINS_IDComment(){
				
				    return "";
				
				}
				public String FORMEDINS_IDPattern(){
				
					return "";
				
				}
				public String FORMEDINS_IDOriginalDbColumnName(){
				
					return "FORMEDINS_ID";
				
				}

				
			    public BigDecimal TFORMULAS_ID;

				public BigDecimal getTFORMULAS_ID () {
					return this.TFORMULAS_ID;
				}

				public Boolean TFORMULAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMULAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMULAS_IDLength(){
				    return 0;
				}
				public Integer TFORMULAS_IDPrecision(){
				    return null;
				}
				public String TFORMULAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMULAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMULAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMULAS_IDOriginalDbColumnName(){
				
					return "TFORMULAS_ID";
				
				}

				
			    public BigDecimal PROCESOSASISTENCIALES_ID;

				public BigDecimal getPROCESOSASISTENCIALES_ID () {
					return this.PROCESOSASISTENCIALES_ID;
				}

				public Boolean PROCESOSASISTENCIALES_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOSASISTENCIALES_IDIsKey(){
				    return false;
				}
				public Integer PROCESOSASISTENCIALES_IDLength(){
				    return 0;
				}
				public Integer PROCESOSASISTENCIALES_IDPrecision(){
				    return null;
				}
				public String PROCESOSASISTENCIALES_IDDefault(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDComment(){
				
				    return "";
				
				}
				public String PROCESOSASISTENCIALES_IDPattern(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDOriginalDbColumnName(){
				
					return "PROCESOSASISTENCIALES_ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return false;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return null;
				}
				public String UORG_IDDefault(){
				
					return "";
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal ESPECIALIDADES_ID;

				public BigDecimal getESPECIALIDADES_ID () {
					return this.ESPECIALIDADES_ID;
				}

				public Boolean ESPECIALIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDADES_IDIsKey(){
				    return false;
				}
				public Integer ESPECIALIDADES_IDLength(){
				    return 0;
				}
				public Integer ESPECIALIDADES_IDPrecision(){
				    return null;
				}
				public String ESPECIALIDADES_IDDefault(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDComment(){
				
				    return "";
				
				}
				public String ESPECIALIDADES_IDPattern(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDOriginalDbColumnName(){
				
					return "ESPECIALIDADES_ID";
				
				}

				
			    public BigDecimal SERVICIOS_ID;

				public BigDecimal getSERVICIOS_ID () {
					return this.SERVICIOS_ID;
				}

				public Boolean SERVICIOS_IDIsNullable(){
				    return true;
				}
				public Boolean SERVICIOS_IDIsKey(){
				    return false;
				}
				public Integer SERVICIOS_IDLength(){
				    return 0;
				}
				public Integer SERVICIOS_IDPrecision(){
				    return null;
				}
				public String SERVICIOS_IDDefault(){
				
					return "";
				
				}
				public String SERVICIOS_IDComment(){
				
				    return "";
				
				}
				public String SERVICIOS_IDPattern(){
				
					return "";
				
				}
				public String SERVICIOS_IDOriginalDbColumnName(){
				
					return "SERVICIOS_ID";
				
				}

				
			    public BigDecimal TORIGEN_ID;

				public BigDecimal getTORIGEN_ID () {
					return this.TORIGEN_ID;
				}

				public Boolean TORIGEN_IDIsNullable(){
				    return true;
				}
				public Boolean TORIGEN_IDIsKey(){
				    return false;
				}
				public Integer TORIGEN_IDLength(){
				    return 0;
				}
				public Integer TORIGEN_IDPrecision(){
				    return null;
				}
				public String TORIGEN_IDDefault(){
				
					return "";
				
				}
				public String TORIGEN_IDComment(){
				
				    return "";
				
				}
				public String TORIGEN_IDPattern(){
				
					return "";
				
				}
				public String TORIGEN_IDOriginalDbColumnName(){
				
					return "TORIGEN_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal TFORMASFARMACEUTICAS_ID;

				public BigDecimal getTFORMASFARMACEUTICAS_ID () {
					return this.TFORMASFARMACEUTICAS_ID;
				}

				public Boolean TFORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer TFORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String TFORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "TFORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal GENERICO_ID;

				public BigDecimal getGENERICO_ID () {
					return this.GENERICO_ID;
				}

				public Boolean GENERICO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_IDPrecision(){
				    return null;
				}
				public String GENERICO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_IDOriginalDbColumnName(){
				
					return "GENERICO_ID";
				
				}

				
			    public BigDecimal GENERICO_INSUMO_ID;

				public BigDecimal getGENERICO_INSUMO_ID () {
					return this.GENERICO_INSUMO_ID;
				}

				public Boolean GENERICO_INSUMO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_INSUMO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_INSUMO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_INSUMO_IDPrecision(){
				    return 0;
				}
				public String GENERICO_INSUMO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_INSUMO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDOriginalDbColumnName(){
				
					return "GENERICO_INSUMO_ID";
				
				}

				
			    public BigDecimal CIE10_ID;

				public BigDecimal getCIE10_ID () {
					return this.CIE10_ID;
				}

				public Boolean CIE10_IDIsNullable(){
				    return true;
				}
				public Boolean CIE10_IDIsKey(){
				    return false;
				}
				public Integer CIE10_IDLength(){
				    return 0;
				}
				public Integer CIE10_IDPrecision(){
				    return null;
				}
				public String CIE10_IDDefault(){
				
					return "";
				
				}
				public String CIE10_IDComment(){
				
				    return "";
				
				}
				public String CIE10_IDPattern(){
				
					return "";
				
				}
				public String CIE10_IDOriginalDbColumnName(){
				
					return "CIE10_ID";
				
				}

				
			    public String TDIAGNOSTICO;

				public String getTDIAGNOSTICO () {
					return this.TDIAGNOSTICO;
				}

				public Boolean TDIAGNOSTICOIsNullable(){
				    return true;
				}
				public Boolean TDIAGNOSTICOIsKey(){
				    return false;
				}
				public Integer TDIAGNOSTICOLength(){
				    return 50;
				}
				public Integer TDIAGNOSTICOPrecision(){
				    return 0;
				}
				public String TDIAGNOSTICODefault(){
				
					return null;
				
				}
				public String TDIAGNOSTICOComment(){
				
				    return "";
				
				}
				public String TDIAGNOSTICOPattern(){
				
					return "";
				
				}
				public String TDIAGNOSTICOOriginalDbColumnName(){
				
					return "TDIAGNOSTICO";
				
				}

				
			    public BigDecimal CANTENTREGADA;

				public BigDecimal getCANTENTREGADA () {
					return this.CANTENTREGADA;
				}

				public Boolean CANTENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTENTREGADALength(){
				    return 0;
				}
				public Integer CANTENTREGADAPrecision(){
				    return null;
				}
				public String CANTENTREGADADefault(){
				
					return "";
				
				}
				public String CANTENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTENTREGADAOriginalDbColumnName(){
				
					return "CANTENTREGADA";
				
				}

				
			    public java.util.Date FECHA_VALORACION;

				public java.util.Date getFECHA_VALORACION () {
					return this.FECHA_VALORACION;
				}

				public Boolean FECHA_VALORACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VALORACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VALORACIONLength(){
				    return 0;
				}
				public Integer FECHA_VALORACIONPrecision(){
				    return 0;
				}
				public String FECHA_VALORACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VALORACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VALORACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VALORACIONOriginalDbColumnName(){
				
					return "FECHA_VALORACION";
				
				}

				
			    public BigDecimal DIAGNOSTICOS_ID;

				public BigDecimal getDIAGNOSTICOS_ID () {
					return this.DIAGNOSTICOS_ID;
				}

				public Boolean DIAGNOSTICOS_IDIsNullable(){
				    return true;
				}
				public Boolean DIAGNOSTICOS_IDIsKey(){
				    return false;
				}
				public Integer DIAGNOSTICOS_IDLength(){
				    return 0;
				}
				public Integer DIAGNOSTICOS_IDPrecision(){
				    return null;
				}
				public String DIAGNOSTICOS_IDDefault(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDComment(){
				
				    return "";
				
				}
				public String DIAGNOSTICOS_IDPattern(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDOriginalDbColumnName(){
				
					return "DIAGNOSTICOS_ID";
				
				}

				
			    public String FINALIDADCONSULTA;

				public String getFINALIDADCONSULTA () {
					return this.FINALIDADCONSULTA;
				}

				public Boolean FINALIDADCONSULTAIsNullable(){
				    return true;
				}
				public Boolean FINALIDADCONSULTAIsKey(){
				    return false;
				}
				public Integer FINALIDADCONSULTALength(){
				    return 200;
				}
				public Integer FINALIDADCONSULTAPrecision(){
				    return 0;
				}
				public String FINALIDADCONSULTADefault(){
				
					return null;
				
				}
				public String FINALIDADCONSULTAComment(){
				
				    return "";
				
				}
				public String FINALIDADCONSULTAPattern(){
				
					return "";
				
				}
				public String FINALIDADCONSULTAOriginalDbColumnName(){
				
					return "FINALIDADCONSULTA";
				
				}

				
			    public String SERVICIO_NOMBRE;

				public String getSERVICIO_NOMBRE () {
					return this.SERVICIO_NOMBRE;
				}

				public Boolean SERVICIO_NOMBREIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_NOMBREIsKey(){
				    return false;
				}
				public Integer SERVICIO_NOMBRELength(){
				    return 50;
				}
				public Integer SERVICIO_NOMBREPrecision(){
				    return 0;
				}
				public String SERVICIO_NOMBREDefault(){
				
					return null;
				
				}
				public String SERVICIO_NOMBREComment(){
				
				    return "Nombre del Servicio";
				
				}
				public String SERVICIO_NOMBREPattern(){
				
					return "";
				
				}
				public String SERVICIO_NOMBREOriginalDbColumnName(){
				
					return "SERVICIO_NOMBRE";
				
				}

				
			    public String SERVICIO_SIGLA;

				public String getSERVICIO_SIGLA () {
					return this.SERVICIO_SIGLA;
				}

				public Boolean SERVICIO_SIGLAIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_SIGLAIsKey(){
				    return false;
				}
				public Integer SERVICIO_SIGLALength(){
				    return 10;
				}
				public Integer SERVICIO_SIGLAPrecision(){
				    return 0;
				}
				public String SERVICIO_SIGLADefault(){
				
					return null;
				
				}
				public String SERVICIO_SIGLAComment(){
				
				    return "Sigla del Servicio";
				
				}
				public String SERVICIO_SIGLAPattern(){
				
					return "";
				
				}
				public String SERVICIO_SIGLAOriginalDbColumnName(){
				
					return "SERVICIO_SIGLA";
				
				}

				
			    public String ESPECIALIDAD_MEDICO;

				public String getESPECIALIDAD_MEDICO () {
					return this.ESPECIALIDAD_MEDICO;
				}

				public Boolean ESPECIALIDAD_MEDICOIsNullable(){
				    return false;
				}
				public Boolean ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer ESPECIALIDAD_MEDICOLength(){
				    return 500;
				}
				public Integer ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "ESPECIALIDAD_MEDICO";
				
				}

				
			    public String CODIGO_ESPECIALIDAD_MEDICO;

				public String getCODIGO_ESPECIALIDAD_MEDICO () {
					return this.CODIGO_ESPECIALIDAD_MEDICO;
				}

				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOLength(){
				    return 20;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String CODIGO_ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "CODIGO_ESPECIALIDAD_MEDICO";
				
				}

				
			    public String TIPO_DISPENSACION;

				public String getTIPO_DISPENSACION () {
					return this.TIPO_DISPENSACION;
				}

				public Boolean TIPO_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean TIPO_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer TIPO_DISPENSACIONLength(){
				    return 100;
				}
				public Integer TIPO_DISPENSACIONPrecision(){
				    return 0;
				}
				public String TIPO_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String TIPO_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String TIPO_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String TIPO_DISPENSACIONOriginalDbColumnName(){
				
					return "TIPO_DISPENSACION";
				
				}

				
			    public String CAUSA_EXTERNA;

				public String getCAUSA_EXTERNA () {
					return this.CAUSA_EXTERNA;
				}

				public Boolean CAUSA_EXTERNAIsNullable(){
				    return false;
				}
				public Boolean CAUSA_EXTERNAIsKey(){
				    return false;
				}
				public Integer CAUSA_EXTERNALength(){
				    return 50;
				}
				public Integer CAUSA_EXTERNAPrecision(){
				    return 0;
				}
				public String CAUSA_EXTERNADefault(){
				
					return null;
				
				}
				public String CAUSA_EXTERNAComment(){
				
				    return "";
				
				}
				public String CAUSA_EXTERNAPattern(){
				
					return "";
				
				}
				public String CAUSA_EXTERNAOriginalDbColumnName(){
				
					return "CAUSA_EXTERNA";
				
				}

				
			    public BigDecimal DACUERDOS_ID;

				public BigDecimal getDACUERDOS_ID () {
					return this.DACUERDOS_ID;
				}

				public Boolean DACUERDOS_IDIsNullable(){
				    return false;
				}
				public Boolean DACUERDOS_IDIsKey(){
				    return false;
				}
				public Integer DACUERDOS_IDLength(){
				    return 0;
				}
				public Integer DACUERDOS_IDPrecision(){
				    return null;
				}
				public String DACUERDOS_IDDefault(){
				
					return "";
				
				}
				public String DACUERDOS_IDComment(){
				
				    return "";
				
				}
				public String DACUERDOS_IDPattern(){
				
					return "";
				
				}
				public String DACUERDOS_IDOriginalDbColumnName(){
				
					return "DACUERDOS_ID";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 15;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NIVEL_ATENCION;

				public String getNIVEL_ATENCION () {
					return this.NIVEL_ATENCION;
				}

				public Boolean NIVEL_ATENCIONIsNullable(){
				    return true;
				}
				public Boolean NIVEL_ATENCIONIsKey(){
				    return false;
				}
				public Integer NIVEL_ATENCIONLength(){
				    return 50;
				}
				public Integer NIVEL_ATENCIONPrecision(){
				    return 0;
				}
				public String NIVEL_ATENCIONDefault(){
				
					return null;
				
				}
				public String NIVEL_ATENCIONComment(){
				
				    return "";
				
				}
				public String NIVEL_ATENCIONPattern(){
				
					return "";
				
				}
				public String NIVEL_ATENCIONOriginalDbColumnName(){
				
					return "NIVEL_ATENCION";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return false;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 100;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String NIVELES_USO;

				public String getNIVELES_USO () {
					return this.NIVELES_USO;
				}

				public Boolean NIVELES_USOIsNullable(){
				    return true;
				}
				public Boolean NIVELES_USOIsKey(){
				    return false;
				}
				public Integer NIVELES_USOLength(){
				    return 4000;
				}
				public Integer NIVELES_USOPrecision(){
				    return 0;
				}
				public String NIVELES_USODefault(){
				
					return null;
				
				}
				public String NIVELES_USOComment(){
				
				    return "";
				
				}
				public String NIVELES_USOPattern(){
				
					return "";
				
				}
				public String NIVELES_USOOriginalDbColumnName(){
				
					return "NIVELES_USO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
						this.DACUERDOS_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NIVEL_ATENCION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.NIVELES_USO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
						this.DACUERDOS_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NIVEL_ATENCION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.NIVELES_USO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DACUERDOS_ID);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NIVEL_ATENCION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.NIVELES_USO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DACUERDOS_ID);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NIVEL_ATENCION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.NIVELES_USO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMULA_ID="+String.valueOf(FORMULA_ID));
		sb.append(",FORMULA="+FORMULA);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHA_FORMULACION="+String.valueOf(FECHA_FORMULACION));
		sb.append(",POSOLOGIA="+POSOLOGIA);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CANTIDAD_SOLICITADA="+String.valueOf(CANTIDAD_SOLICITADA));
		sb.append(",ESTADO_FORMULA="+ESTADO_FORMULA);
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FORMEDINS_ID="+String.valueOf(FORMEDINS_ID));
		sb.append(",TFORMULAS_ID="+String.valueOf(TFORMULAS_ID));
		sb.append(",PROCESOSASISTENCIALES_ID="+String.valueOf(PROCESOSASISTENCIALES_ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",ESPECIALIDADES_ID="+String.valueOf(ESPECIALIDADES_ID));
		sb.append(",SERVICIOS_ID="+String.valueOf(SERVICIOS_ID));
		sb.append(",TORIGEN_ID="+String.valueOf(TORIGEN_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",TFORMASFARMACEUTICAS_ID="+String.valueOf(TFORMASFARMACEUTICAS_ID));
		sb.append(",GENERICO_ID="+String.valueOf(GENERICO_ID));
		sb.append(",GENERICO_INSUMO_ID="+String.valueOf(GENERICO_INSUMO_ID));
		sb.append(",CIE10_ID="+String.valueOf(CIE10_ID));
		sb.append(",TDIAGNOSTICO="+TDIAGNOSTICO);
		sb.append(",CANTENTREGADA="+String.valueOf(CANTENTREGADA));
		sb.append(",FECHA_VALORACION="+String.valueOf(FECHA_VALORACION));
		sb.append(",DIAGNOSTICOS_ID="+String.valueOf(DIAGNOSTICOS_ID));
		sb.append(",FINALIDADCONSULTA="+FINALIDADCONSULTA);
		sb.append(",SERVICIO_NOMBRE="+SERVICIO_NOMBRE);
		sb.append(",SERVICIO_SIGLA="+SERVICIO_SIGLA);
		sb.append(",ESPECIALIDAD_MEDICO="+ESPECIALIDAD_MEDICO);
		sb.append(",CODIGO_ESPECIALIDAD_MEDICO="+CODIGO_ESPECIALIDAD_MEDICO);
		sb.append(",TIPO_DISPENSACION="+TIPO_DISPENSACION);
		sb.append(",CAUSA_EXTERNA="+CAUSA_EXTERNA);
		sb.append(",DACUERDOS_ID="+String.valueOf(DACUERDOS_ID));
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NIVEL_ATENCION="+NIVEL_ATENCION);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",NIVELES_USO="+NIVELES_USO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out9Struct implements routines.system.IPersistableRow<out9Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal FORMULA_ID;

				public BigDecimal getFORMULA_ID () {
					return this.FORMULA_ID;
				}

				public Boolean FORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean FORMULA_IDIsKey(){
				    return false;
				}
				public Integer FORMULA_IDLength(){
				    return 0;
				}
				public Integer FORMULA_IDPrecision(){
				    return null;
				}
				public String FORMULA_IDDefault(){
				
					return "";
				
				}
				public String FORMULA_IDComment(){
				
				    return "";
				
				}
				public String FORMULA_IDPattern(){
				
					return "";
				
				}
				public String FORMULA_IDOriginalDbColumnName(){
				
					return "FORMULA_ID";
				
				}

				
			    public String FORMULA;

				public String getFORMULA () {
					return this.FORMULA;
				}

				public Boolean FORMULAIsNullable(){
				    return false;
				}
				public Boolean FORMULAIsKey(){
				    return false;
				}
				public Integer FORMULALength(){
				    return 50;
				}
				public Integer FORMULAPrecision(){
				    return 0;
				}
				public String FORMULADefault(){
				
					return null;
				
				}
				public String FORMULAComment(){
				
				    return "";
				
				}
				public String FORMULAPattern(){
				
					return "";
				
				}
				public String FORMULAOriginalDbColumnName(){
				
					return "FORMULA";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHA_FORMULACION;

				public java.util.Date getFECHA_FORMULACION () {
					return this.FECHA_FORMULACION;
				}

				public Boolean FECHA_FORMULACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_FORMULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FORMULACIONLength(){
				    return 0;
				}
				public Integer FECHA_FORMULACIONPrecision(){
				    return 0;
				}
				public String FECHA_FORMULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FORMULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_FORMULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_FORMULACIONOriginalDbColumnName(){
				
					return "FECHA_FORMULACION";
				
				}

				
			    public String POSOLOGIA;

				public String getPOSOLOGIA () {
					return this.POSOLOGIA;
				}

				public Boolean POSOLOGIAIsNullable(){
				    return true;
				}
				public Boolean POSOLOGIAIsKey(){
				    return false;
				}
				public Integer POSOLOGIALength(){
				    return 200;
				}
				public Integer POSOLOGIAPrecision(){
				    return 0;
				}
				public String POSOLOGIADefault(){
				
					return null;
				
				}
				public String POSOLOGIAComment(){
				
				    return "";
				
				}
				public String POSOLOGIAPattern(){
				
					return "";
				
				}
				public String POSOLOGIAOriginalDbColumnName(){
				
					return "POSOLOGIA";
				
				}

				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}

				public Boolean FRECUENCIAIsNullable(){
				    return true;
				}
				public Boolean FRECUENCIAIsKey(){
				    return false;
				}
				public Integer FRECUENCIALength(){
				    return 53;
				}
				public Integer FRECUENCIAPrecision(){
				    return 0;
				}
				public String FRECUENCIADefault(){
				
					return null;
				
				}
				public String FRECUENCIAComment(){
				
				    return "";
				
				}
				public String FRECUENCIAPattern(){
				
					return "";
				
				}
				public String FRECUENCIAOriginalDbColumnName(){
				
					return "FRECUENCIA";
				
				}

				
			    public BigDecimal CANTIDAD_SOLICITADA;

				public BigDecimal getCANTIDAD_SOLICITADA () {
					return this.CANTIDAD_SOLICITADA;
				}

				public Boolean CANTIDAD_SOLICITADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_SOLICITADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_SOLICITADALength(){
				    return 0;
				}
				public Integer CANTIDAD_SOLICITADAPrecision(){
				    return null;
				}
				public String CANTIDAD_SOLICITADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_SOLICITADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAOriginalDbColumnName(){
				
					return "CANTIDAD_SOLICITADA";
				
				}

				
			    public String ESTADO_FORMULA;

				public String getESTADO_FORMULA () {
					return this.ESTADO_FORMULA;
				}

				public Boolean ESTADO_FORMULAIsNullable(){
				    return false;
				}
				public Boolean ESTADO_FORMULAIsKey(){
				    return false;
				}
				public Integer ESTADO_FORMULALength(){
				    return 20;
				}
				public Integer ESTADO_FORMULAPrecision(){
				    return 0;
				}
				public String ESTADO_FORMULADefault(){
				
					return null;
				
				}
				public String ESTADO_FORMULAComment(){
				
				    return "";
				
				}
				public String ESTADO_FORMULAPattern(){
				
					return "";
				
				}
				public String ESTADO_FORMULAOriginalDbColumnName(){
				
					return "ESTADO_FORMULA";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return true;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public BigDecimal FORMEDINS_ID;

				public BigDecimal getFORMEDINS_ID () {
					return this.FORMEDINS_ID;
				}

				public Boolean FORMEDINS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMEDINS_IDIsKey(){
				    return false;
				}
				public Integer FORMEDINS_IDLength(){
				    return 0;
				}
				public Integer FORMEDINS_IDPrecision(){
				    return null;
				}
				public String FORMEDINS_IDDefault(){
				
					return "";
				
				}
				public String FORMEDINS_IDComment(){
				
				    return "";
				
				}
				public String FORMEDINS_IDPattern(){
				
					return "";
				
				}
				public String FORMEDINS_IDOriginalDbColumnName(){
				
					return "FORMEDINS_ID";
				
				}

				
			    public BigDecimal TFORMULAS_ID;

				public BigDecimal getTFORMULAS_ID () {
					return this.TFORMULAS_ID;
				}

				public Boolean TFORMULAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMULAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMULAS_IDLength(){
				    return 0;
				}
				public Integer TFORMULAS_IDPrecision(){
				    return null;
				}
				public String TFORMULAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMULAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMULAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMULAS_IDOriginalDbColumnName(){
				
					return "TFORMULAS_ID";
				
				}

				
			    public BigDecimal PROCESOSASISTENCIALES_ID;

				public BigDecimal getPROCESOSASISTENCIALES_ID () {
					return this.PROCESOSASISTENCIALES_ID;
				}

				public Boolean PROCESOSASISTENCIALES_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOSASISTENCIALES_IDIsKey(){
				    return false;
				}
				public Integer PROCESOSASISTENCIALES_IDLength(){
				    return 0;
				}
				public Integer PROCESOSASISTENCIALES_IDPrecision(){
				    return null;
				}
				public String PROCESOSASISTENCIALES_IDDefault(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDComment(){
				
				    return "";
				
				}
				public String PROCESOSASISTENCIALES_IDPattern(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDOriginalDbColumnName(){
				
					return "PROCESOSASISTENCIALES_ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return false;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return null;
				}
				public String UORG_IDDefault(){
				
					return "";
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal ESPECIALIDADES_ID;

				public BigDecimal getESPECIALIDADES_ID () {
					return this.ESPECIALIDADES_ID;
				}

				public Boolean ESPECIALIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDADES_IDIsKey(){
				    return false;
				}
				public Integer ESPECIALIDADES_IDLength(){
				    return 0;
				}
				public Integer ESPECIALIDADES_IDPrecision(){
				    return null;
				}
				public String ESPECIALIDADES_IDDefault(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDComment(){
				
				    return "";
				
				}
				public String ESPECIALIDADES_IDPattern(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDOriginalDbColumnName(){
				
					return "ESPECIALIDADES_ID";
				
				}

				
			    public BigDecimal SERVICIOS_ID;

				public BigDecimal getSERVICIOS_ID () {
					return this.SERVICIOS_ID;
				}

				public Boolean SERVICIOS_IDIsNullable(){
				    return true;
				}
				public Boolean SERVICIOS_IDIsKey(){
				    return false;
				}
				public Integer SERVICIOS_IDLength(){
				    return 0;
				}
				public Integer SERVICIOS_IDPrecision(){
				    return null;
				}
				public String SERVICIOS_IDDefault(){
				
					return "";
				
				}
				public String SERVICIOS_IDComment(){
				
				    return "";
				
				}
				public String SERVICIOS_IDPattern(){
				
					return "";
				
				}
				public String SERVICIOS_IDOriginalDbColumnName(){
				
					return "SERVICIOS_ID";
				
				}

				
			    public BigDecimal TORIGEN_ID;

				public BigDecimal getTORIGEN_ID () {
					return this.TORIGEN_ID;
				}

				public Boolean TORIGEN_IDIsNullable(){
				    return true;
				}
				public Boolean TORIGEN_IDIsKey(){
				    return false;
				}
				public Integer TORIGEN_IDLength(){
				    return 0;
				}
				public Integer TORIGEN_IDPrecision(){
				    return null;
				}
				public String TORIGEN_IDDefault(){
				
					return "";
				
				}
				public String TORIGEN_IDComment(){
				
				    return "";
				
				}
				public String TORIGEN_IDPattern(){
				
					return "";
				
				}
				public String TORIGEN_IDOriginalDbColumnName(){
				
					return "TORIGEN_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal TFORMASFARMACEUTICAS_ID;

				public BigDecimal getTFORMASFARMACEUTICAS_ID () {
					return this.TFORMASFARMACEUTICAS_ID;
				}

				public Boolean TFORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer TFORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String TFORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "TFORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal GENERICO_ID;

				public BigDecimal getGENERICO_ID () {
					return this.GENERICO_ID;
				}

				public Boolean GENERICO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_IDPrecision(){
				    return null;
				}
				public String GENERICO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_IDOriginalDbColumnName(){
				
					return "GENERICO_ID";
				
				}

				
			    public BigDecimal GENERICO_INSUMO_ID;

				public BigDecimal getGENERICO_INSUMO_ID () {
					return this.GENERICO_INSUMO_ID;
				}

				public Boolean GENERICO_INSUMO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_INSUMO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_INSUMO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_INSUMO_IDPrecision(){
				    return 0;
				}
				public String GENERICO_INSUMO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_INSUMO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDOriginalDbColumnName(){
				
					return "GENERICO_INSUMO_ID";
				
				}

				
			    public BigDecimal CIE10_ID;

				public BigDecimal getCIE10_ID () {
					return this.CIE10_ID;
				}

				public Boolean CIE10_IDIsNullable(){
				    return true;
				}
				public Boolean CIE10_IDIsKey(){
				    return false;
				}
				public Integer CIE10_IDLength(){
				    return 0;
				}
				public Integer CIE10_IDPrecision(){
				    return null;
				}
				public String CIE10_IDDefault(){
				
					return "";
				
				}
				public String CIE10_IDComment(){
				
				    return "";
				
				}
				public String CIE10_IDPattern(){
				
					return "";
				
				}
				public String CIE10_IDOriginalDbColumnName(){
				
					return "CIE10_ID";
				
				}

				
			    public String TDIAGNOSTICO;

				public String getTDIAGNOSTICO () {
					return this.TDIAGNOSTICO;
				}

				public Boolean TDIAGNOSTICOIsNullable(){
				    return true;
				}
				public Boolean TDIAGNOSTICOIsKey(){
				    return false;
				}
				public Integer TDIAGNOSTICOLength(){
				    return 50;
				}
				public Integer TDIAGNOSTICOPrecision(){
				    return 0;
				}
				public String TDIAGNOSTICODefault(){
				
					return null;
				
				}
				public String TDIAGNOSTICOComment(){
				
				    return "";
				
				}
				public String TDIAGNOSTICOPattern(){
				
					return "";
				
				}
				public String TDIAGNOSTICOOriginalDbColumnName(){
				
					return "TDIAGNOSTICO";
				
				}

				
			    public BigDecimal CANTENTREGADA;

				public BigDecimal getCANTENTREGADA () {
					return this.CANTENTREGADA;
				}

				public Boolean CANTENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTENTREGADALength(){
				    return 0;
				}
				public Integer CANTENTREGADAPrecision(){
				    return null;
				}
				public String CANTENTREGADADefault(){
				
					return "";
				
				}
				public String CANTENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTENTREGADAOriginalDbColumnName(){
				
					return "CANTENTREGADA";
				
				}

				
			    public java.util.Date FECHA_VALORACION;

				public java.util.Date getFECHA_VALORACION () {
					return this.FECHA_VALORACION;
				}

				public Boolean FECHA_VALORACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VALORACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VALORACIONLength(){
				    return 0;
				}
				public Integer FECHA_VALORACIONPrecision(){
				    return 0;
				}
				public String FECHA_VALORACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VALORACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VALORACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VALORACIONOriginalDbColumnName(){
				
					return "FECHA_VALORACION";
				
				}

				
			    public BigDecimal DIAGNOSTICOS_ID;

				public BigDecimal getDIAGNOSTICOS_ID () {
					return this.DIAGNOSTICOS_ID;
				}

				public Boolean DIAGNOSTICOS_IDIsNullable(){
				    return true;
				}
				public Boolean DIAGNOSTICOS_IDIsKey(){
				    return false;
				}
				public Integer DIAGNOSTICOS_IDLength(){
				    return 0;
				}
				public Integer DIAGNOSTICOS_IDPrecision(){
				    return null;
				}
				public String DIAGNOSTICOS_IDDefault(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDComment(){
				
				    return "";
				
				}
				public String DIAGNOSTICOS_IDPattern(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDOriginalDbColumnName(){
				
					return "DIAGNOSTICOS_ID";
				
				}

				
			    public String FINALIDADCONSULTA;

				public String getFINALIDADCONSULTA () {
					return this.FINALIDADCONSULTA;
				}

				public Boolean FINALIDADCONSULTAIsNullable(){
				    return true;
				}
				public Boolean FINALIDADCONSULTAIsKey(){
				    return false;
				}
				public Integer FINALIDADCONSULTALength(){
				    return 200;
				}
				public Integer FINALIDADCONSULTAPrecision(){
				    return 0;
				}
				public String FINALIDADCONSULTADefault(){
				
					return null;
				
				}
				public String FINALIDADCONSULTAComment(){
				
				    return "";
				
				}
				public String FINALIDADCONSULTAPattern(){
				
					return "";
				
				}
				public String FINALIDADCONSULTAOriginalDbColumnName(){
				
					return "FINALIDADCONSULTA";
				
				}

				
			    public String SERVICIO_NOMBRE;

				public String getSERVICIO_NOMBRE () {
					return this.SERVICIO_NOMBRE;
				}

				public Boolean SERVICIO_NOMBREIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_NOMBREIsKey(){
				    return false;
				}
				public Integer SERVICIO_NOMBRELength(){
				    return 50;
				}
				public Integer SERVICIO_NOMBREPrecision(){
				    return 0;
				}
				public String SERVICIO_NOMBREDefault(){
				
					return null;
				
				}
				public String SERVICIO_NOMBREComment(){
				
				    return "Nombre del Servicio";
				
				}
				public String SERVICIO_NOMBREPattern(){
				
					return "";
				
				}
				public String SERVICIO_NOMBREOriginalDbColumnName(){
				
					return "SERVICIO_NOMBRE";
				
				}

				
			    public String SERVICIO_SIGLA;

				public String getSERVICIO_SIGLA () {
					return this.SERVICIO_SIGLA;
				}

				public Boolean SERVICIO_SIGLAIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_SIGLAIsKey(){
				    return false;
				}
				public Integer SERVICIO_SIGLALength(){
				    return 10;
				}
				public Integer SERVICIO_SIGLAPrecision(){
				    return 0;
				}
				public String SERVICIO_SIGLADefault(){
				
					return null;
				
				}
				public String SERVICIO_SIGLAComment(){
				
				    return "Sigla del Servicio";
				
				}
				public String SERVICIO_SIGLAPattern(){
				
					return "";
				
				}
				public String SERVICIO_SIGLAOriginalDbColumnName(){
				
					return "SERVICIO_SIGLA";
				
				}

				
			    public String ESPECIALIDAD_MEDICO;

				public String getESPECIALIDAD_MEDICO () {
					return this.ESPECIALIDAD_MEDICO;
				}

				public Boolean ESPECIALIDAD_MEDICOIsNullable(){
				    return false;
				}
				public Boolean ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer ESPECIALIDAD_MEDICOLength(){
				    return 500;
				}
				public Integer ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "ESPECIALIDAD_MEDICO";
				
				}

				
			    public String CODIGO_ESPECIALIDAD_MEDICO;

				public String getCODIGO_ESPECIALIDAD_MEDICO () {
					return this.CODIGO_ESPECIALIDAD_MEDICO;
				}

				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOLength(){
				    return 20;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String CODIGO_ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "CODIGO_ESPECIALIDAD_MEDICO";
				
				}

				
			    public String TIPO_DISPENSACION;

				public String getTIPO_DISPENSACION () {
					return this.TIPO_DISPENSACION;
				}

				public Boolean TIPO_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean TIPO_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer TIPO_DISPENSACIONLength(){
				    return 100;
				}
				public Integer TIPO_DISPENSACIONPrecision(){
				    return 0;
				}
				public String TIPO_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String TIPO_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String TIPO_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String TIPO_DISPENSACIONOriginalDbColumnName(){
				
					return "TIPO_DISPENSACION";
				
				}

				
			    public String CAUSA_EXTERNA;

				public String getCAUSA_EXTERNA () {
					return this.CAUSA_EXTERNA;
				}

				public Boolean CAUSA_EXTERNAIsNullable(){
				    return false;
				}
				public Boolean CAUSA_EXTERNAIsKey(){
				    return false;
				}
				public Integer CAUSA_EXTERNALength(){
				    return 50;
				}
				public Integer CAUSA_EXTERNAPrecision(){
				    return 0;
				}
				public String CAUSA_EXTERNADefault(){
				
					return null;
				
				}
				public String CAUSA_EXTERNAComment(){
				
				    return "";
				
				}
				public String CAUSA_EXTERNAPattern(){
				
					return "";
				
				}
				public String CAUSA_EXTERNAOriginalDbColumnName(){
				
					return "CAUSA_EXTERNA";
				
				}

				
			    public BigDecimal DACUERDOS_ID;

				public BigDecimal getDACUERDOS_ID () {
					return this.DACUERDOS_ID;
				}

				public Boolean DACUERDOS_IDIsNullable(){
				    return false;
				}
				public Boolean DACUERDOS_IDIsKey(){
				    return false;
				}
				public Integer DACUERDOS_IDLength(){
				    return 0;
				}
				public Integer DACUERDOS_IDPrecision(){
				    return null;
				}
				public String DACUERDOS_IDDefault(){
				
					return "";
				
				}
				public String DACUERDOS_IDComment(){
				
				    return "";
				
				}
				public String DACUERDOS_IDPattern(){
				
					return "";
				
				}
				public String DACUERDOS_IDOriginalDbColumnName(){
				
					return "DACUERDOS_ID";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 15;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NIVEL_ATENCION;

				public String getNIVEL_ATENCION () {
					return this.NIVEL_ATENCION;
				}

				public Boolean NIVEL_ATENCIONIsNullable(){
				    return true;
				}
				public Boolean NIVEL_ATENCIONIsKey(){
				    return false;
				}
				public Integer NIVEL_ATENCIONLength(){
				    return 50;
				}
				public Integer NIVEL_ATENCIONPrecision(){
				    return 0;
				}
				public String NIVEL_ATENCIONDefault(){
				
					return null;
				
				}
				public String NIVEL_ATENCIONComment(){
				
				    return "";
				
				}
				public String NIVEL_ATENCIONPattern(){
				
					return "";
				
				}
				public String NIVEL_ATENCIONOriginalDbColumnName(){
				
					return "NIVEL_ATENCION";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return false;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 100;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
						this.DACUERDOS_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NIVEL_ATENCION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
						this.DACUERDOS_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NIVEL_ATENCION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DACUERDOS_ID);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NIVEL_ATENCION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DACUERDOS_ID);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NIVEL_ATENCION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMULA_ID="+String.valueOf(FORMULA_ID));
		sb.append(",FORMULA="+FORMULA);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHA_FORMULACION="+String.valueOf(FECHA_FORMULACION));
		sb.append(",POSOLOGIA="+POSOLOGIA);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CANTIDAD_SOLICITADA="+String.valueOf(CANTIDAD_SOLICITADA));
		sb.append(",ESTADO_FORMULA="+ESTADO_FORMULA);
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FORMEDINS_ID="+String.valueOf(FORMEDINS_ID));
		sb.append(",TFORMULAS_ID="+String.valueOf(TFORMULAS_ID));
		sb.append(",PROCESOSASISTENCIALES_ID="+String.valueOf(PROCESOSASISTENCIALES_ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",ESPECIALIDADES_ID="+String.valueOf(ESPECIALIDADES_ID));
		sb.append(",SERVICIOS_ID="+String.valueOf(SERVICIOS_ID));
		sb.append(",TORIGEN_ID="+String.valueOf(TORIGEN_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",TFORMASFARMACEUTICAS_ID="+String.valueOf(TFORMASFARMACEUTICAS_ID));
		sb.append(",GENERICO_ID="+String.valueOf(GENERICO_ID));
		sb.append(",GENERICO_INSUMO_ID="+String.valueOf(GENERICO_INSUMO_ID));
		sb.append(",CIE10_ID="+String.valueOf(CIE10_ID));
		sb.append(",TDIAGNOSTICO="+TDIAGNOSTICO);
		sb.append(",CANTENTREGADA="+String.valueOf(CANTENTREGADA));
		sb.append(",FECHA_VALORACION="+String.valueOf(FECHA_VALORACION));
		sb.append(",DIAGNOSTICOS_ID="+String.valueOf(DIAGNOSTICOS_ID));
		sb.append(",FINALIDADCONSULTA="+FINALIDADCONSULTA);
		sb.append(",SERVICIO_NOMBRE="+SERVICIO_NOMBRE);
		sb.append(",SERVICIO_SIGLA="+SERVICIO_SIGLA);
		sb.append(",ESPECIALIDAD_MEDICO="+ESPECIALIDAD_MEDICO);
		sb.append(",CODIGO_ESPECIALIDAD_MEDICO="+CODIGO_ESPECIALIDAD_MEDICO);
		sb.append(",TIPO_DISPENSACION="+TIPO_DISPENSACION);
		sb.append(",CAUSA_EXTERNA="+CAUSA_EXTERNA);
		sb.append(",DACUERDOS_ID="+String.valueOf(DACUERDOS_ID));
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NIVEL_ATENCION="+NIVEL_ATENCION);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out8Struct implements routines.system.IPersistableRow<out8Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal FORMULA_ID;

				public BigDecimal getFORMULA_ID () {
					return this.FORMULA_ID;
				}

				public Boolean FORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean FORMULA_IDIsKey(){
				    return false;
				}
				public Integer FORMULA_IDLength(){
				    return 0;
				}
				public Integer FORMULA_IDPrecision(){
				    return null;
				}
				public String FORMULA_IDDefault(){
				
					return "";
				
				}
				public String FORMULA_IDComment(){
				
				    return "";
				
				}
				public String FORMULA_IDPattern(){
				
					return "";
				
				}
				public String FORMULA_IDOriginalDbColumnName(){
				
					return "FORMULA_ID";
				
				}

				
			    public String FORMULA;

				public String getFORMULA () {
					return this.FORMULA;
				}

				public Boolean FORMULAIsNullable(){
				    return false;
				}
				public Boolean FORMULAIsKey(){
				    return false;
				}
				public Integer FORMULALength(){
				    return 50;
				}
				public Integer FORMULAPrecision(){
				    return 0;
				}
				public String FORMULADefault(){
				
					return null;
				
				}
				public String FORMULAComment(){
				
				    return "";
				
				}
				public String FORMULAPattern(){
				
					return "";
				
				}
				public String FORMULAOriginalDbColumnName(){
				
					return "FORMULA";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHA_FORMULACION;

				public java.util.Date getFECHA_FORMULACION () {
					return this.FECHA_FORMULACION;
				}

				public Boolean FECHA_FORMULACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_FORMULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FORMULACIONLength(){
				    return 0;
				}
				public Integer FECHA_FORMULACIONPrecision(){
				    return 0;
				}
				public String FECHA_FORMULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FORMULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_FORMULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_FORMULACIONOriginalDbColumnName(){
				
					return "FECHA_FORMULACION";
				
				}

				
			    public String POSOLOGIA;

				public String getPOSOLOGIA () {
					return this.POSOLOGIA;
				}

				public Boolean POSOLOGIAIsNullable(){
				    return true;
				}
				public Boolean POSOLOGIAIsKey(){
				    return false;
				}
				public Integer POSOLOGIALength(){
				    return 200;
				}
				public Integer POSOLOGIAPrecision(){
				    return 0;
				}
				public String POSOLOGIADefault(){
				
					return null;
				
				}
				public String POSOLOGIAComment(){
				
				    return "";
				
				}
				public String POSOLOGIAPattern(){
				
					return "";
				
				}
				public String POSOLOGIAOriginalDbColumnName(){
				
					return "POSOLOGIA";
				
				}

				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}

				public Boolean FRECUENCIAIsNullable(){
				    return true;
				}
				public Boolean FRECUENCIAIsKey(){
				    return false;
				}
				public Integer FRECUENCIALength(){
				    return 53;
				}
				public Integer FRECUENCIAPrecision(){
				    return 0;
				}
				public String FRECUENCIADefault(){
				
					return null;
				
				}
				public String FRECUENCIAComment(){
				
				    return "";
				
				}
				public String FRECUENCIAPattern(){
				
					return "";
				
				}
				public String FRECUENCIAOriginalDbColumnName(){
				
					return "FRECUENCIA";
				
				}

				
			    public BigDecimal CANTIDAD_SOLICITADA;

				public BigDecimal getCANTIDAD_SOLICITADA () {
					return this.CANTIDAD_SOLICITADA;
				}

				public Boolean CANTIDAD_SOLICITADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_SOLICITADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_SOLICITADALength(){
				    return 0;
				}
				public Integer CANTIDAD_SOLICITADAPrecision(){
				    return null;
				}
				public String CANTIDAD_SOLICITADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_SOLICITADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAOriginalDbColumnName(){
				
					return "CANTIDAD_SOLICITADA";
				
				}

				
			    public String ESTADO_FORMULA;

				public String getESTADO_FORMULA () {
					return this.ESTADO_FORMULA;
				}

				public Boolean ESTADO_FORMULAIsNullable(){
				    return false;
				}
				public Boolean ESTADO_FORMULAIsKey(){
				    return false;
				}
				public Integer ESTADO_FORMULALength(){
				    return 20;
				}
				public Integer ESTADO_FORMULAPrecision(){
				    return 0;
				}
				public String ESTADO_FORMULADefault(){
				
					return null;
				
				}
				public String ESTADO_FORMULAComment(){
				
				    return "";
				
				}
				public String ESTADO_FORMULAPattern(){
				
					return "";
				
				}
				public String ESTADO_FORMULAOriginalDbColumnName(){
				
					return "ESTADO_FORMULA";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return true;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public BigDecimal FORMEDINS_ID;

				public BigDecimal getFORMEDINS_ID () {
					return this.FORMEDINS_ID;
				}

				public Boolean FORMEDINS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMEDINS_IDIsKey(){
				    return false;
				}
				public Integer FORMEDINS_IDLength(){
				    return 0;
				}
				public Integer FORMEDINS_IDPrecision(){
				    return null;
				}
				public String FORMEDINS_IDDefault(){
				
					return "";
				
				}
				public String FORMEDINS_IDComment(){
				
				    return "";
				
				}
				public String FORMEDINS_IDPattern(){
				
					return "";
				
				}
				public String FORMEDINS_IDOriginalDbColumnName(){
				
					return "FORMEDINS_ID";
				
				}

				
			    public BigDecimal TFORMULAS_ID;

				public BigDecimal getTFORMULAS_ID () {
					return this.TFORMULAS_ID;
				}

				public Boolean TFORMULAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMULAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMULAS_IDLength(){
				    return 0;
				}
				public Integer TFORMULAS_IDPrecision(){
				    return null;
				}
				public String TFORMULAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMULAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMULAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMULAS_IDOriginalDbColumnName(){
				
					return "TFORMULAS_ID";
				
				}

				
			    public BigDecimal PROCESOSASISTENCIALES_ID;

				public BigDecimal getPROCESOSASISTENCIALES_ID () {
					return this.PROCESOSASISTENCIALES_ID;
				}

				public Boolean PROCESOSASISTENCIALES_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOSASISTENCIALES_IDIsKey(){
				    return false;
				}
				public Integer PROCESOSASISTENCIALES_IDLength(){
				    return 0;
				}
				public Integer PROCESOSASISTENCIALES_IDPrecision(){
				    return null;
				}
				public String PROCESOSASISTENCIALES_IDDefault(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDComment(){
				
				    return "";
				
				}
				public String PROCESOSASISTENCIALES_IDPattern(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDOriginalDbColumnName(){
				
					return "PROCESOSASISTENCIALES_ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return false;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return null;
				}
				public String UORG_IDDefault(){
				
					return "";
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal ESPECIALIDADES_ID;

				public BigDecimal getESPECIALIDADES_ID () {
					return this.ESPECIALIDADES_ID;
				}

				public Boolean ESPECIALIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDADES_IDIsKey(){
				    return false;
				}
				public Integer ESPECIALIDADES_IDLength(){
				    return 0;
				}
				public Integer ESPECIALIDADES_IDPrecision(){
				    return null;
				}
				public String ESPECIALIDADES_IDDefault(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDComment(){
				
				    return "";
				
				}
				public String ESPECIALIDADES_IDPattern(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDOriginalDbColumnName(){
				
					return "ESPECIALIDADES_ID";
				
				}

				
			    public BigDecimal SERVICIOS_ID;

				public BigDecimal getSERVICIOS_ID () {
					return this.SERVICIOS_ID;
				}

				public Boolean SERVICIOS_IDIsNullable(){
				    return true;
				}
				public Boolean SERVICIOS_IDIsKey(){
				    return false;
				}
				public Integer SERVICIOS_IDLength(){
				    return 0;
				}
				public Integer SERVICIOS_IDPrecision(){
				    return null;
				}
				public String SERVICIOS_IDDefault(){
				
					return "";
				
				}
				public String SERVICIOS_IDComment(){
				
				    return "";
				
				}
				public String SERVICIOS_IDPattern(){
				
					return "";
				
				}
				public String SERVICIOS_IDOriginalDbColumnName(){
				
					return "SERVICIOS_ID";
				
				}

				
			    public BigDecimal TORIGEN_ID;

				public BigDecimal getTORIGEN_ID () {
					return this.TORIGEN_ID;
				}

				public Boolean TORIGEN_IDIsNullable(){
				    return true;
				}
				public Boolean TORIGEN_IDIsKey(){
				    return false;
				}
				public Integer TORIGEN_IDLength(){
				    return 0;
				}
				public Integer TORIGEN_IDPrecision(){
				    return null;
				}
				public String TORIGEN_IDDefault(){
				
					return "";
				
				}
				public String TORIGEN_IDComment(){
				
				    return "";
				
				}
				public String TORIGEN_IDPattern(){
				
					return "";
				
				}
				public String TORIGEN_IDOriginalDbColumnName(){
				
					return "TORIGEN_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal TFORMASFARMACEUTICAS_ID;

				public BigDecimal getTFORMASFARMACEUTICAS_ID () {
					return this.TFORMASFARMACEUTICAS_ID;
				}

				public Boolean TFORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer TFORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String TFORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "TFORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal GENERICO_ID;

				public BigDecimal getGENERICO_ID () {
					return this.GENERICO_ID;
				}

				public Boolean GENERICO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_IDPrecision(){
				    return null;
				}
				public String GENERICO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_IDOriginalDbColumnName(){
				
					return "GENERICO_ID";
				
				}

				
			    public BigDecimal GENERICO_INSUMO_ID;

				public BigDecimal getGENERICO_INSUMO_ID () {
					return this.GENERICO_INSUMO_ID;
				}

				public Boolean GENERICO_INSUMO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_INSUMO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_INSUMO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_INSUMO_IDPrecision(){
				    return 0;
				}
				public String GENERICO_INSUMO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_INSUMO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDOriginalDbColumnName(){
				
					return "GENERICO_INSUMO_ID";
				
				}

				
			    public BigDecimal CIE10_ID;

				public BigDecimal getCIE10_ID () {
					return this.CIE10_ID;
				}

				public Boolean CIE10_IDIsNullable(){
				    return true;
				}
				public Boolean CIE10_IDIsKey(){
				    return false;
				}
				public Integer CIE10_IDLength(){
				    return 0;
				}
				public Integer CIE10_IDPrecision(){
				    return null;
				}
				public String CIE10_IDDefault(){
				
					return "";
				
				}
				public String CIE10_IDComment(){
				
				    return "";
				
				}
				public String CIE10_IDPattern(){
				
					return "";
				
				}
				public String CIE10_IDOriginalDbColumnName(){
				
					return "CIE10_ID";
				
				}

				
			    public String TDIAGNOSTICO;

				public String getTDIAGNOSTICO () {
					return this.TDIAGNOSTICO;
				}

				public Boolean TDIAGNOSTICOIsNullable(){
				    return true;
				}
				public Boolean TDIAGNOSTICOIsKey(){
				    return false;
				}
				public Integer TDIAGNOSTICOLength(){
				    return 50;
				}
				public Integer TDIAGNOSTICOPrecision(){
				    return 0;
				}
				public String TDIAGNOSTICODefault(){
				
					return null;
				
				}
				public String TDIAGNOSTICOComment(){
				
				    return "";
				
				}
				public String TDIAGNOSTICOPattern(){
				
					return "";
				
				}
				public String TDIAGNOSTICOOriginalDbColumnName(){
				
					return "TDIAGNOSTICO";
				
				}

				
			    public BigDecimal CANTENTREGADA;

				public BigDecimal getCANTENTREGADA () {
					return this.CANTENTREGADA;
				}

				public Boolean CANTENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTENTREGADALength(){
				    return 0;
				}
				public Integer CANTENTREGADAPrecision(){
				    return null;
				}
				public String CANTENTREGADADefault(){
				
					return "";
				
				}
				public String CANTENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTENTREGADAOriginalDbColumnName(){
				
					return "CANTENTREGADA";
				
				}

				
			    public java.util.Date FECHA_VALORACION;

				public java.util.Date getFECHA_VALORACION () {
					return this.FECHA_VALORACION;
				}

				public Boolean FECHA_VALORACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VALORACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VALORACIONLength(){
				    return 0;
				}
				public Integer FECHA_VALORACIONPrecision(){
				    return 0;
				}
				public String FECHA_VALORACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VALORACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VALORACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VALORACIONOriginalDbColumnName(){
				
					return "FECHA_VALORACION";
				
				}

				
			    public BigDecimal DIAGNOSTICOS_ID;

				public BigDecimal getDIAGNOSTICOS_ID () {
					return this.DIAGNOSTICOS_ID;
				}

				public Boolean DIAGNOSTICOS_IDIsNullable(){
				    return true;
				}
				public Boolean DIAGNOSTICOS_IDIsKey(){
				    return false;
				}
				public Integer DIAGNOSTICOS_IDLength(){
				    return 0;
				}
				public Integer DIAGNOSTICOS_IDPrecision(){
				    return null;
				}
				public String DIAGNOSTICOS_IDDefault(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDComment(){
				
				    return "";
				
				}
				public String DIAGNOSTICOS_IDPattern(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDOriginalDbColumnName(){
				
					return "DIAGNOSTICOS_ID";
				
				}

				
			    public String FINALIDADCONSULTA;

				public String getFINALIDADCONSULTA () {
					return this.FINALIDADCONSULTA;
				}

				public Boolean FINALIDADCONSULTAIsNullable(){
				    return true;
				}
				public Boolean FINALIDADCONSULTAIsKey(){
				    return false;
				}
				public Integer FINALIDADCONSULTALength(){
				    return 200;
				}
				public Integer FINALIDADCONSULTAPrecision(){
				    return 0;
				}
				public String FINALIDADCONSULTADefault(){
				
					return null;
				
				}
				public String FINALIDADCONSULTAComment(){
				
				    return "";
				
				}
				public String FINALIDADCONSULTAPattern(){
				
					return "";
				
				}
				public String FINALIDADCONSULTAOriginalDbColumnName(){
				
					return "FINALIDADCONSULTA";
				
				}

				
			    public String SERVICIO_NOMBRE;

				public String getSERVICIO_NOMBRE () {
					return this.SERVICIO_NOMBRE;
				}

				public Boolean SERVICIO_NOMBREIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_NOMBREIsKey(){
				    return false;
				}
				public Integer SERVICIO_NOMBRELength(){
				    return 50;
				}
				public Integer SERVICIO_NOMBREPrecision(){
				    return 0;
				}
				public String SERVICIO_NOMBREDefault(){
				
					return null;
				
				}
				public String SERVICIO_NOMBREComment(){
				
				    return "Nombre del Servicio";
				
				}
				public String SERVICIO_NOMBREPattern(){
				
					return "";
				
				}
				public String SERVICIO_NOMBREOriginalDbColumnName(){
				
					return "SERVICIO_NOMBRE";
				
				}

				
			    public String SERVICIO_SIGLA;

				public String getSERVICIO_SIGLA () {
					return this.SERVICIO_SIGLA;
				}

				public Boolean SERVICIO_SIGLAIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_SIGLAIsKey(){
				    return false;
				}
				public Integer SERVICIO_SIGLALength(){
				    return 10;
				}
				public Integer SERVICIO_SIGLAPrecision(){
				    return 0;
				}
				public String SERVICIO_SIGLADefault(){
				
					return null;
				
				}
				public String SERVICIO_SIGLAComment(){
				
				    return "Sigla del Servicio";
				
				}
				public String SERVICIO_SIGLAPattern(){
				
					return "";
				
				}
				public String SERVICIO_SIGLAOriginalDbColumnName(){
				
					return "SERVICIO_SIGLA";
				
				}

				
			    public String ESPECIALIDAD_MEDICO;

				public String getESPECIALIDAD_MEDICO () {
					return this.ESPECIALIDAD_MEDICO;
				}

				public Boolean ESPECIALIDAD_MEDICOIsNullable(){
				    return false;
				}
				public Boolean ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer ESPECIALIDAD_MEDICOLength(){
				    return 500;
				}
				public Integer ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "ESPECIALIDAD_MEDICO";
				
				}

				
			    public String CODIGO_ESPECIALIDAD_MEDICO;

				public String getCODIGO_ESPECIALIDAD_MEDICO () {
					return this.CODIGO_ESPECIALIDAD_MEDICO;
				}

				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOLength(){
				    return 20;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String CODIGO_ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "CODIGO_ESPECIALIDAD_MEDICO";
				
				}

				
			    public String TIPO_DISPENSACION;

				public String getTIPO_DISPENSACION () {
					return this.TIPO_DISPENSACION;
				}

				public Boolean TIPO_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean TIPO_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer TIPO_DISPENSACIONLength(){
				    return 100;
				}
				public Integer TIPO_DISPENSACIONPrecision(){
				    return 0;
				}
				public String TIPO_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String TIPO_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String TIPO_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String TIPO_DISPENSACIONOriginalDbColumnName(){
				
					return "TIPO_DISPENSACION";
				
				}

				
			    public String CAUSA_EXTERNA;

				public String getCAUSA_EXTERNA () {
					return this.CAUSA_EXTERNA;
				}

				public Boolean CAUSA_EXTERNAIsNullable(){
				    return false;
				}
				public Boolean CAUSA_EXTERNAIsKey(){
				    return false;
				}
				public Integer CAUSA_EXTERNALength(){
				    return 50;
				}
				public Integer CAUSA_EXTERNAPrecision(){
				    return 0;
				}
				public String CAUSA_EXTERNADefault(){
				
					return null;
				
				}
				public String CAUSA_EXTERNAComment(){
				
				    return "";
				
				}
				public String CAUSA_EXTERNAPattern(){
				
					return "";
				
				}
				public String CAUSA_EXTERNAOriginalDbColumnName(){
				
					return "CAUSA_EXTERNA";
				
				}

				
			    public BigDecimal DACUERDOS_ID;

				public BigDecimal getDACUERDOS_ID () {
					return this.DACUERDOS_ID;
				}

				public Boolean DACUERDOS_IDIsNullable(){
				    return false;
				}
				public Boolean DACUERDOS_IDIsKey(){
				    return false;
				}
				public Integer DACUERDOS_IDLength(){
				    return 0;
				}
				public Integer DACUERDOS_IDPrecision(){
				    return null;
				}
				public String DACUERDOS_IDDefault(){
				
					return "";
				
				}
				public String DACUERDOS_IDComment(){
				
				    return "";
				
				}
				public String DACUERDOS_IDPattern(){
				
					return "";
				
				}
				public String DACUERDOS_IDOriginalDbColumnName(){
				
					return "DACUERDOS_ID";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 15;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NIVEL_ATENCION;

				public String getNIVEL_ATENCION () {
					return this.NIVEL_ATENCION;
				}

				public Boolean NIVEL_ATENCIONIsNullable(){
				    return true;
				}
				public Boolean NIVEL_ATENCIONIsKey(){
				    return false;
				}
				public Integer NIVEL_ATENCIONLength(){
				    return 50;
				}
				public Integer NIVEL_ATENCIONPrecision(){
				    return 0;
				}
				public String NIVEL_ATENCIONDefault(){
				
					return null;
				
				}
				public String NIVEL_ATENCIONComment(){
				
				    return "";
				
				}
				public String NIVEL_ATENCIONPattern(){
				
					return "";
				
				}
				public String NIVEL_ATENCIONOriginalDbColumnName(){
				
					return "NIVEL_ATENCION";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
						this.DACUERDOS_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NIVEL_ATENCION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
						this.DACUERDOS_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NIVEL_ATENCION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DACUERDOS_ID);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NIVEL_ATENCION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DACUERDOS_ID);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NIVEL_ATENCION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMULA_ID="+String.valueOf(FORMULA_ID));
		sb.append(",FORMULA="+FORMULA);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHA_FORMULACION="+String.valueOf(FECHA_FORMULACION));
		sb.append(",POSOLOGIA="+POSOLOGIA);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CANTIDAD_SOLICITADA="+String.valueOf(CANTIDAD_SOLICITADA));
		sb.append(",ESTADO_FORMULA="+ESTADO_FORMULA);
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FORMEDINS_ID="+String.valueOf(FORMEDINS_ID));
		sb.append(",TFORMULAS_ID="+String.valueOf(TFORMULAS_ID));
		sb.append(",PROCESOSASISTENCIALES_ID="+String.valueOf(PROCESOSASISTENCIALES_ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",ESPECIALIDADES_ID="+String.valueOf(ESPECIALIDADES_ID));
		sb.append(",SERVICIOS_ID="+String.valueOf(SERVICIOS_ID));
		sb.append(",TORIGEN_ID="+String.valueOf(TORIGEN_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",TFORMASFARMACEUTICAS_ID="+String.valueOf(TFORMASFARMACEUTICAS_ID));
		sb.append(",GENERICO_ID="+String.valueOf(GENERICO_ID));
		sb.append(",GENERICO_INSUMO_ID="+String.valueOf(GENERICO_INSUMO_ID));
		sb.append(",CIE10_ID="+String.valueOf(CIE10_ID));
		sb.append(",TDIAGNOSTICO="+TDIAGNOSTICO);
		sb.append(",CANTENTREGADA="+String.valueOf(CANTENTREGADA));
		sb.append(",FECHA_VALORACION="+String.valueOf(FECHA_VALORACION));
		sb.append(",DIAGNOSTICOS_ID="+String.valueOf(DIAGNOSTICOS_ID));
		sb.append(",FINALIDADCONSULTA="+FINALIDADCONSULTA);
		sb.append(",SERVICIO_NOMBRE="+SERVICIO_NOMBRE);
		sb.append(",SERVICIO_SIGLA="+SERVICIO_SIGLA);
		sb.append(",ESPECIALIDAD_MEDICO="+ESPECIALIDAD_MEDICO);
		sb.append(",CODIGO_ESPECIALIDAD_MEDICO="+CODIGO_ESPECIALIDAD_MEDICO);
		sb.append(",TIPO_DISPENSACION="+TIPO_DISPENSACION);
		sb.append(",CAUSA_EXTERNA="+CAUSA_EXTERNA);
		sb.append(",DACUERDOS_ID="+String.valueOf(DACUERDOS_ID));
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NIVEL_ATENCION="+NIVEL_ATENCION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out7Struct implements routines.system.IPersistableRow<out7Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal FORMULA_ID;

				public BigDecimal getFORMULA_ID () {
					return this.FORMULA_ID;
				}

				public Boolean FORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean FORMULA_IDIsKey(){
				    return false;
				}
				public Integer FORMULA_IDLength(){
				    return 0;
				}
				public Integer FORMULA_IDPrecision(){
				    return null;
				}
				public String FORMULA_IDDefault(){
				
					return "";
				
				}
				public String FORMULA_IDComment(){
				
				    return "";
				
				}
				public String FORMULA_IDPattern(){
				
					return "";
				
				}
				public String FORMULA_IDOriginalDbColumnName(){
				
					return "FORMULA_ID";
				
				}

				
			    public String FORMULA;

				public String getFORMULA () {
					return this.FORMULA;
				}

				public Boolean FORMULAIsNullable(){
				    return false;
				}
				public Boolean FORMULAIsKey(){
				    return false;
				}
				public Integer FORMULALength(){
				    return 50;
				}
				public Integer FORMULAPrecision(){
				    return 0;
				}
				public String FORMULADefault(){
				
					return null;
				
				}
				public String FORMULAComment(){
				
				    return "";
				
				}
				public String FORMULAPattern(){
				
					return "";
				
				}
				public String FORMULAOriginalDbColumnName(){
				
					return "FORMULA";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHA_FORMULACION;

				public java.util.Date getFECHA_FORMULACION () {
					return this.FECHA_FORMULACION;
				}

				public Boolean FECHA_FORMULACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_FORMULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FORMULACIONLength(){
				    return 0;
				}
				public Integer FECHA_FORMULACIONPrecision(){
				    return 0;
				}
				public String FECHA_FORMULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FORMULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_FORMULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_FORMULACIONOriginalDbColumnName(){
				
					return "FECHA_FORMULACION";
				
				}

				
			    public String POSOLOGIA;

				public String getPOSOLOGIA () {
					return this.POSOLOGIA;
				}

				public Boolean POSOLOGIAIsNullable(){
				    return true;
				}
				public Boolean POSOLOGIAIsKey(){
				    return false;
				}
				public Integer POSOLOGIALength(){
				    return 200;
				}
				public Integer POSOLOGIAPrecision(){
				    return 0;
				}
				public String POSOLOGIADefault(){
				
					return null;
				
				}
				public String POSOLOGIAComment(){
				
				    return "";
				
				}
				public String POSOLOGIAPattern(){
				
					return "";
				
				}
				public String POSOLOGIAOriginalDbColumnName(){
				
					return "POSOLOGIA";
				
				}

				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}

				public Boolean FRECUENCIAIsNullable(){
				    return true;
				}
				public Boolean FRECUENCIAIsKey(){
				    return false;
				}
				public Integer FRECUENCIALength(){
				    return 53;
				}
				public Integer FRECUENCIAPrecision(){
				    return 0;
				}
				public String FRECUENCIADefault(){
				
					return null;
				
				}
				public String FRECUENCIAComment(){
				
				    return "";
				
				}
				public String FRECUENCIAPattern(){
				
					return "";
				
				}
				public String FRECUENCIAOriginalDbColumnName(){
				
					return "FRECUENCIA";
				
				}

				
			    public BigDecimal CANTIDAD_SOLICITADA;

				public BigDecimal getCANTIDAD_SOLICITADA () {
					return this.CANTIDAD_SOLICITADA;
				}

				public Boolean CANTIDAD_SOLICITADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_SOLICITADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_SOLICITADALength(){
				    return 0;
				}
				public Integer CANTIDAD_SOLICITADAPrecision(){
				    return null;
				}
				public String CANTIDAD_SOLICITADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_SOLICITADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAOriginalDbColumnName(){
				
					return "CANTIDAD_SOLICITADA";
				
				}

				
			    public String ESTADO_FORMULA;

				public String getESTADO_FORMULA () {
					return this.ESTADO_FORMULA;
				}

				public Boolean ESTADO_FORMULAIsNullable(){
				    return false;
				}
				public Boolean ESTADO_FORMULAIsKey(){
				    return false;
				}
				public Integer ESTADO_FORMULALength(){
				    return 20;
				}
				public Integer ESTADO_FORMULAPrecision(){
				    return 0;
				}
				public String ESTADO_FORMULADefault(){
				
					return null;
				
				}
				public String ESTADO_FORMULAComment(){
				
				    return "";
				
				}
				public String ESTADO_FORMULAPattern(){
				
					return "";
				
				}
				public String ESTADO_FORMULAOriginalDbColumnName(){
				
					return "ESTADO_FORMULA";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return true;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public BigDecimal FORMEDINS_ID;

				public BigDecimal getFORMEDINS_ID () {
					return this.FORMEDINS_ID;
				}

				public Boolean FORMEDINS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMEDINS_IDIsKey(){
				    return false;
				}
				public Integer FORMEDINS_IDLength(){
				    return 0;
				}
				public Integer FORMEDINS_IDPrecision(){
				    return null;
				}
				public String FORMEDINS_IDDefault(){
				
					return "";
				
				}
				public String FORMEDINS_IDComment(){
				
				    return "";
				
				}
				public String FORMEDINS_IDPattern(){
				
					return "";
				
				}
				public String FORMEDINS_IDOriginalDbColumnName(){
				
					return "FORMEDINS_ID";
				
				}

				
			    public BigDecimal TFORMULAS_ID;

				public BigDecimal getTFORMULAS_ID () {
					return this.TFORMULAS_ID;
				}

				public Boolean TFORMULAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMULAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMULAS_IDLength(){
				    return 0;
				}
				public Integer TFORMULAS_IDPrecision(){
				    return null;
				}
				public String TFORMULAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMULAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMULAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMULAS_IDOriginalDbColumnName(){
				
					return "TFORMULAS_ID";
				
				}

				
			    public BigDecimal PROCESOSASISTENCIALES_ID;

				public BigDecimal getPROCESOSASISTENCIALES_ID () {
					return this.PROCESOSASISTENCIALES_ID;
				}

				public Boolean PROCESOSASISTENCIALES_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOSASISTENCIALES_IDIsKey(){
				    return false;
				}
				public Integer PROCESOSASISTENCIALES_IDLength(){
				    return 0;
				}
				public Integer PROCESOSASISTENCIALES_IDPrecision(){
				    return null;
				}
				public String PROCESOSASISTENCIALES_IDDefault(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDComment(){
				
				    return "";
				
				}
				public String PROCESOSASISTENCIALES_IDPattern(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDOriginalDbColumnName(){
				
					return "PROCESOSASISTENCIALES_ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return false;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return null;
				}
				public String UORG_IDDefault(){
				
					return "";
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal ESPECIALIDADES_ID;

				public BigDecimal getESPECIALIDADES_ID () {
					return this.ESPECIALIDADES_ID;
				}

				public Boolean ESPECIALIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDADES_IDIsKey(){
				    return false;
				}
				public Integer ESPECIALIDADES_IDLength(){
				    return 0;
				}
				public Integer ESPECIALIDADES_IDPrecision(){
				    return null;
				}
				public String ESPECIALIDADES_IDDefault(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDComment(){
				
				    return "";
				
				}
				public String ESPECIALIDADES_IDPattern(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDOriginalDbColumnName(){
				
					return "ESPECIALIDADES_ID";
				
				}

				
			    public BigDecimal SERVICIOS_ID;

				public BigDecimal getSERVICIOS_ID () {
					return this.SERVICIOS_ID;
				}

				public Boolean SERVICIOS_IDIsNullable(){
				    return true;
				}
				public Boolean SERVICIOS_IDIsKey(){
				    return false;
				}
				public Integer SERVICIOS_IDLength(){
				    return 0;
				}
				public Integer SERVICIOS_IDPrecision(){
				    return null;
				}
				public String SERVICIOS_IDDefault(){
				
					return "";
				
				}
				public String SERVICIOS_IDComment(){
				
				    return "";
				
				}
				public String SERVICIOS_IDPattern(){
				
					return "";
				
				}
				public String SERVICIOS_IDOriginalDbColumnName(){
				
					return "SERVICIOS_ID";
				
				}

				
			    public BigDecimal TORIGEN_ID;

				public BigDecimal getTORIGEN_ID () {
					return this.TORIGEN_ID;
				}

				public Boolean TORIGEN_IDIsNullable(){
				    return true;
				}
				public Boolean TORIGEN_IDIsKey(){
				    return false;
				}
				public Integer TORIGEN_IDLength(){
				    return 0;
				}
				public Integer TORIGEN_IDPrecision(){
				    return null;
				}
				public String TORIGEN_IDDefault(){
				
					return "";
				
				}
				public String TORIGEN_IDComment(){
				
				    return "";
				
				}
				public String TORIGEN_IDPattern(){
				
					return "";
				
				}
				public String TORIGEN_IDOriginalDbColumnName(){
				
					return "TORIGEN_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal TFORMASFARMACEUTICAS_ID;

				public BigDecimal getTFORMASFARMACEUTICAS_ID () {
					return this.TFORMASFARMACEUTICAS_ID;
				}

				public Boolean TFORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer TFORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String TFORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "TFORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal GENERICO_ID;

				public BigDecimal getGENERICO_ID () {
					return this.GENERICO_ID;
				}

				public Boolean GENERICO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_IDPrecision(){
				    return null;
				}
				public String GENERICO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_IDOriginalDbColumnName(){
				
					return "GENERICO_ID";
				
				}

				
			    public BigDecimal GENERICO_INSUMO_ID;

				public BigDecimal getGENERICO_INSUMO_ID () {
					return this.GENERICO_INSUMO_ID;
				}

				public Boolean GENERICO_INSUMO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_INSUMO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_INSUMO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_INSUMO_IDPrecision(){
				    return 0;
				}
				public String GENERICO_INSUMO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_INSUMO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDOriginalDbColumnName(){
				
					return "GENERICO_INSUMO_ID";
				
				}

				
			    public BigDecimal CIE10_ID;

				public BigDecimal getCIE10_ID () {
					return this.CIE10_ID;
				}

				public Boolean CIE10_IDIsNullable(){
				    return true;
				}
				public Boolean CIE10_IDIsKey(){
				    return false;
				}
				public Integer CIE10_IDLength(){
				    return 0;
				}
				public Integer CIE10_IDPrecision(){
				    return null;
				}
				public String CIE10_IDDefault(){
				
					return "";
				
				}
				public String CIE10_IDComment(){
				
				    return "";
				
				}
				public String CIE10_IDPattern(){
				
					return "";
				
				}
				public String CIE10_IDOriginalDbColumnName(){
				
					return "CIE10_ID";
				
				}

				
			    public String TDIAGNOSTICO;

				public String getTDIAGNOSTICO () {
					return this.TDIAGNOSTICO;
				}

				public Boolean TDIAGNOSTICOIsNullable(){
				    return true;
				}
				public Boolean TDIAGNOSTICOIsKey(){
				    return false;
				}
				public Integer TDIAGNOSTICOLength(){
				    return 50;
				}
				public Integer TDIAGNOSTICOPrecision(){
				    return 0;
				}
				public String TDIAGNOSTICODefault(){
				
					return null;
				
				}
				public String TDIAGNOSTICOComment(){
				
				    return "";
				
				}
				public String TDIAGNOSTICOPattern(){
				
					return "";
				
				}
				public String TDIAGNOSTICOOriginalDbColumnName(){
				
					return "TDIAGNOSTICO";
				
				}

				
			    public BigDecimal CANTENTREGADA;

				public BigDecimal getCANTENTREGADA () {
					return this.CANTENTREGADA;
				}

				public Boolean CANTENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTENTREGADALength(){
				    return 0;
				}
				public Integer CANTENTREGADAPrecision(){
				    return null;
				}
				public String CANTENTREGADADefault(){
				
					return "";
				
				}
				public String CANTENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTENTREGADAOriginalDbColumnName(){
				
					return "CANTENTREGADA";
				
				}

				
			    public java.util.Date FECHA_VALORACION;

				public java.util.Date getFECHA_VALORACION () {
					return this.FECHA_VALORACION;
				}

				public Boolean FECHA_VALORACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VALORACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VALORACIONLength(){
				    return 0;
				}
				public Integer FECHA_VALORACIONPrecision(){
				    return 0;
				}
				public String FECHA_VALORACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VALORACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VALORACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VALORACIONOriginalDbColumnName(){
				
					return "FECHA_VALORACION";
				
				}

				
			    public BigDecimal DIAGNOSTICOS_ID;

				public BigDecimal getDIAGNOSTICOS_ID () {
					return this.DIAGNOSTICOS_ID;
				}

				public Boolean DIAGNOSTICOS_IDIsNullable(){
				    return true;
				}
				public Boolean DIAGNOSTICOS_IDIsKey(){
				    return false;
				}
				public Integer DIAGNOSTICOS_IDLength(){
				    return 0;
				}
				public Integer DIAGNOSTICOS_IDPrecision(){
				    return null;
				}
				public String DIAGNOSTICOS_IDDefault(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDComment(){
				
				    return "";
				
				}
				public String DIAGNOSTICOS_IDPattern(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDOriginalDbColumnName(){
				
					return "DIAGNOSTICOS_ID";
				
				}

				
			    public String FINALIDADCONSULTA;

				public String getFINALIDADCONSULTA () {
					return this.FINALIDADCONSULTA;
				}

				public Boolean FINALIDADCONSULTAIsNullable(){
				    return true;
				}
				public Boolean FINALIDADCONSULTAIsKey(){
				    return false;
				}
				public Integer FINALIDADCONSULTALength(){
				    return 200;
				}
				public Integer FINALIDADCONSULTAPrecision(){
				    return 0;
				}
				public String FINALIDADCONSULTADefault(){
				
					return null;
				
				}
				public String FINALIDADCONSULTAComment(){
				
				    return "";
				
				}
				public String FINALIDADCONSULTAPattern(){
				
					return "";
				
				}
				public String FINALIDADCONSULTAOriginalDbColumnName(){
				
					return "FINALIDADCONSULTA";
				
				}

				
			    public String SERVICIO_NOMBRE;

				public String getSERVICIO_NOMBRE () {
					return this.SERVICIO_NOMBRE;
				}

				public Boolean SERVICIO_NOMBREIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_NOMBREIsKey(){
				    return false;
				}
				public Integer SERVICIO_NOMBRELength(){
				    return 50;
				}
				public Integer SERVICIO_NOMBREPrecision(){
				    return 0;
				}
				public String SERVICIO_NOMBREDefault(){
				
					return null;
				
				}
				public String SERVICIO_NOMBREComment(){
				
				    return "Nombre del Servicio";
				
				}
				public String SERVICIO_NOMBREPattern(){
				
					return "";
				
				}
				public String SERVICIO_NOMBREOriginalDbColumnName(){
				
					return "SERVICIO_NOMBRE";
				
				}

				
			    public String SERVICIO_SIGLA;

				public String getSERVICIO_SIGLA () {
					return this.SERVICIO_SIGLA;
				}

				public Boolean SERVICIO_SIGLAIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_SIGLAIsKey(){
				    return false;
				}
				public Integer SERVICIO_SIGLALength(){
				    return 10;
				}
				public Integer SERVICIO_SIGLAPrecision(){
				    return 0;
				}
				public String SERVICIO_SIGLADefault(){
				
					return null;
				
				}
				public String SERVICIO_SIGLAComment(){
				
				    return "Sigla del Servicio";
				
				}
				public String SERVICIO_SIGLAPattern(){
				
					return "";
				
				}
				public String SERVICIO_SIGLAOriginalDbColumnName(){
				
					return "SERVICIO_SIGLA";
				
				}

				
			    public String ESPECIALIDAD_MEDICO;

				public String getESPECIALIDAD_MEDICO () {
					return this.ESPECIALIDAD_MEDICO;
				}

				public Boolean ESPECIALIDAD_MEDICOIsNullable(){
				    return false;
				}
				public Boolean ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer ESPECIALIDAD_MEDICOLength(){
				    return 500;
				}
				public Integer ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "ESPECIALIDAD_MEDICO";
				
				}

				
			    public String CODIGO_ESPECIALIDAD_MEDICO;

				public String getCODIGO_ESPECIALIDAD_MEDICO () {
					return this.CODIGO_ESPECIALIDAD_MEDICO;
				}

				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOLength(){
				    return 20;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String CODIGO_ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "CODIGO_ESPECIALIDAD_MEDICO";
				
				}

				
			    public String TIPO_DISPENSACION;

				public String getTIPO_DISPENSACION () {
					return this.TIPO_DISPENSACION;
				}

				public Boolean TIPO_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean TIPO_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer TIPO_DISPENSACIONLength(){
				    return 100;
				}
				public Integer TIPO_DISPENSACIONPrecision(){
				    return 0;
				}
				public String TIPO_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String TIPO_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String TIPO_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String TIPO_DISPENSACIONOriginalDbColumnName(){
				
					return "TIPO_DISPENSACION";
				
				}

				
			    public String CAUSA_EXTERNA;

				public String getCAUSA_EXTERNA () {
					return this.CAUSA_EXTERNA;
				}

				public Boolean CAUSA_EXTERNAIsNullable(){
				    return false;
				}
				public Boolean CAUSA_EXTERNAIsKey(){
				    return false;
				}
				public Integer CAUSA_EXTERNALength(){
				    return 50;
				}
				public Integer CAUSA_EXTERNAPrecision(){
				    return 0;
				}
				public String CAUSA_EXTERNADefault(){
				
					return null;
				
				}
				public String CAUSA_EXTERNAComment(){
				
				    return "";
				
				}
				public String CAUSA_EXTERNAPattern(){
				
					return "";
				
				}
				public String CAUSA_EXTERNAOriginalDbColumnName(){
				
					return "CAUSA_EXTERNA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
					this.CAUSA_EXTERNA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
					// String
				
						writeString(this.CAUSA_EXTERNA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMULA_ID="+String.valueOf(FORMULA_ID));
		sb.append(",FORMULA="+FORMULA);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHA_FORMULACION="+String.valueOf(FECHA_FORMULACION));
		sb.append(",POSOLOGIA="+POSOLOGIA);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CANTIDAD_SOLICITADA="+String.valueOf(CANTIDAD_SOLICITADA));
		sb.append(",ESTADO_FORMULA="+ESTADO_FORMULA);
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FORMEDINS_ID="+String.valueOf(FORMEDINS_ID));
		sb.append(",TFORMULAS_ID="+String.valueOf(TFORMULAS_ID));
		sb.append(",PROCESOSASISTENCIALES_ID="+String.valueOf(PROCESOSASISTENCIALES_ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",ESPECIALIDADES_ID="+String.valueOf(ESPECIALIDADES_ID));
		sb.append(",SERVICIOS_ID="+String.valueOf(SERVICIOS_ID));
		sb.append(",TORIGEN_ID="+String.valueOf(TORIGEN_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",TFORMASFARMACEUTICAS_ID="+String.valueOf(TFORMASFARMACEUTICAS_ID));
		sb.append(",GENERICO_ID="+String.valueOf(GENERICO_ID));
		sb.append(",GENERICO_INSUMO_ID="+String.valueOf(GENERICO_INSUMO_ID));
		sb.append(",CIE10_ID="+String.valueOf(CIE10_ID));
		sb.append(",TDIAGNOSTICO="+TDIAGNOSTICO);
		sb.append(",CANTENTREGADA="+String.valueOf(CANTENTREGADA));
		sb.append(",FECHA_VALORACION="+String.valueOf(FECHA_VALORACION));
		sb.append(",DIAGNOSTICOS_ID="+String.valueOf(DIAGNOSTICOS_ID));
		sb.append(",FINALIDADCONSULTA="+FINALIDADCONSULTA);
		sb.append(",SERVICIO_NOMBRE="+SERVICIO_NOMBRE);
		sb.append(",SERVICIO_SIGLA="+SERVICIO_SIGLA);
		sb.append(",ESPECIALIDAD_MEDICO="+ESPECIALIDAD_MEDICO);
		sb.append(",CODIGO_ESPECIALIDAD_MEDICO="+CODIGO_ESPECIALIDAD_MEDICO);
		sb.append(",TIPO_DISPENSACION="+TIPO_DISPENSACION);
		sb.append(",CAUSA_EXTERNA="+CAUSA_EXTERNA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out6Struct implements routines.system.IPersistableRow<out6Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal FORMULA_ID;

				public BigDecimal getFORMULA_ID () {
					return this.FORMULA_ID;
				}

				public Boolean FORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean FORMULA_IDIsKey(){
				    return false;
				}
				public Integer FORMULA_IDLength(){
				    return 0;
				}
				public Integer FORMULA_IDPrecision(){
				    return null;
				}
				public String FORMULA_IDDefault(){
				
					return "";
				
				}
				public String FORMULA_IDComment(){
				
				    return "";
				
				}
				public String FORMULA_IDPattern(){
				
					return "";
				
				}
				public String FORMULA_IDOriginalDbColumnName(){
				
					return "FORMULA_ID";
				
				}

				
			    public String FORMULA;

				public String getFORMULA () {
					return this.FORMULA;
				}

				public Boolean FORMULAIsNullable(){
				    return false;
				}
				public Boolean FORMULAIsKey(){
				    return false;
				}
				public Integer FORMULALength(){
				    return 50;
				}
				public Integer FORMULAPrecision(){
				    return 0;
				}
				public String FORMULADefault(){
				
					return null;
				
				}
				public String FORMULAComment(){
				
				    return "";
				
				}
				public String FORMULAPattern(){
				
					return "";
				
				}
				public String FORMULAOriginalDbColumnName(){
				
					return "FORMULA";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHA_FORMULACION;

				public java.util.Date getFECHA_FORMULACION () {
					return this.FECHA_FORMULACION;
				}

				public Boolean FECHA_FORMULACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_FORMULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FORMULACIONLength(){
				    return 0;
				}
				public Integer FECHA_FORMULACIONPrecision(){
				    return 0;
				}
				public String FECHA_FORMULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FORMULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_FORMULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_FORMULACIONOriginalDbColumnName(){
				
					return "FECHA_FORMULACION";
				
				}

				
			    public String POSOLOGIA;

				public String getPOSOLOGIA () {
					return this.POSOLOGIA;
				}

				public Boolean POSOLOGIAIsNullable(){
				    return true;
				}
				public Boolean POSOLOGIAIsKey(){
				    return false;
				}
				public Integer POSOLOGIALength(){
				    return 200;
				}
				public Integer POSOLOGIAPrecision(){
				    return 0;
				}
				public String POSOLOGIADefault(){
				
					return null;
				
				}
				public String POSOLOGIAComment(){
				
				    return "";
				
				}
				public String POSOLOGIAPattern(){
				
					return "";
				
				}
				public String POSOLOGIAOriginalDbColumnName(){
				
					return "POSOLOGIA";
				
				}

				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}

				public Boolean FRECUENCIAIsNullable(){
				    return true;
				}
				public Boolean FRECUENCIAIsKey(){
				    return false;
				}
				public Integer FRECUENCIALength(){
				    return 53;
				}
				public Integer FRECUENCIAPrecision(){
				    return 0;
				}
				public String FRECUENCIADefault(){
				
					return null;
				
				}
				public String FRECUENCIAComment(){
				
				    return "";
				
				}
				public String FRECUENCIAPattern(){
				
					return "";
				
				}
				public String FRECUENCIAOriginalDbColumnName(){
				
					return "FRECUENCIA";
				
				}

				
			    public BigDecimal CANTIDAD_SOLICITADA;

				public BigDecimal getCANTIDAD_SOLICITADA () {
					return this.CANTIDAD_SOLICITADA;
				}

				public Boolean CANTIDAD_SOLICITADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_SOLICITADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_SOLICITADALength(){
				    return 0;
				}
				public Integer CANTIDAD_SOLICITADAPrecision(){
				    return null;
				}
				public String CANTIDAD_SOLICITADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_SOLICITADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAOriginalDbColumnName(){
				
					return "CANTIDAD_SOLICITADA";
				
				}

				
			    public String ESTADO_FORMULA;

				public String getESTADO_FORMULA () {
					return this.ESTADO_FORMULA;
				}

				public Boolean ESTADO_FORMULAIsNullable(){
				    return false;
				}
				public Boolean ESTADO_FORMULAIsKey(){
				    return false;
				}
				public Integer ESTADO_FORMULALength(){
				    return 20;
				}
				public Integer ESTADO_FORMULAPrecision(){
				    return 0;
				}
				public String ESTADO_FORMULADefault(){
				
					return null;
				
				}
				public String ESTADO_FORMULAComment(){
				
				    return "";
				
				}
				public String ESTADO_FORMULAPattern(){
				
					return "";
				
				}
				public String ESTADO_FORMULAOriginalDbColumnName(){
				
					return "ESTADO_FORMULA";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return true;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public BigDecimal FORMEDINS_ID;

				public BigDecimal getFORMEDINS_ID () {
					return this.FORMEDINS_ID;
				}

				public Boolean FORMEDINS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMEDINS_IDIsKey(){
				    return false;
				}
				public Integer FORMEDINS_IDLength(){
				    return 0;
				}
				public Integer FORMEDINS_IDPrecision(){
				    return null;
				}
				public String FORMEDINS_IDDefault(){
				
					return "";
				
				}
				public String FORMEDINS_IDComment(){
				
				    return "";
				
				}
				public String FORMEDINS_IDPattern(){
				
					return "";
				
				}
				public String FORMEDINS_IDOriginalDbColumnName(){
				
					return "FORMEDINS_ID";
				
				}

				
			    public BigDecimal TFORMULAS_ID;

				public BigDecimal getTFORMULAS_ID () {
					return this.TFORMULAS_ID;
				}

				public Boolean TFORMULAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMULAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMULAS_IDLength(){
				    return 0;
				}
				public Integer TFORMULAS_IDPrecision(){
				    return null;
				}
				public String TFORMULAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMULAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMULAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMULAS_IDOriginalDbColumnName(){
				
					return "TFORMULAS_ID";
				
				}

				
			    public BigDecimal PROCESOSASISTENCIALES_ID;

				public BigDecimal getPROCESOSASISTENCIALES_ID () {
					return this.PROCESOSASISTENCIALES_ID;
				}

				public Boolean PROCESOSASISTENCIALES_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOSASISTENCIALES_IDIsKey(){
				    return false;
				}
				public Integer PROCESOSASISTENCIALES_IDLength(){
				    return 0;
				}
				public Integer PROCESOSASISTENCIALES_IDPrecision(){
				    return null;
				}
				public String PROCESOSASISTENCIALES_IDDefault(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDComment(){
				
				    return "";
				
				}
				public String PROCESOSASISTENCIALES_IDPattern(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDOriginalDbColumnName(){
				
					return "PROCESOSASISTENCIALES_ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return false;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return null;
				}
				public String UORG_IDDefault(){
				
					return "";
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal ESPECIALIDADES_ID;

				public BigDecimal getESPECIALIDADES_ID () {
					return this.ESPECIALIDADES_ID;
				}

				public Boolean ESPECIALIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDADES_IDIsKey(){
				    return false;
				}
				public Integer ESPECIALIDADES_IDLength(){
				    return 0;
				}
				public Integer ESPECIALIDADES_IDPrecision(){
				    return null;
				}
				public String ESPECIALIDADES_IDDefault(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDComment(){
				
				    return "";
				
				}
				public String ESPECIALIDADES_IDPattern(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDOriginalDbColumnName(){
				
					return "ESPECIALIDADES_ID";
				
				}

				
			    public BigDecimal SERVICIOS_ID;

				public BigDecimal getSERVICIOS_ID () {
					return this.SERVICIOS_ID;
				}

				public Boolean SERVICIOS_IDIsNullable(){
				    return true;
				}
				public Boolean SERVICIOS_IDIsKey(){
				    return false;
				}
				public Integer SERVICIOS_IDLength(){
				    return 0;
				}
				public Integer SERVICIOS_IDPrecision(){
				    return null;
				}
				public String SERVICIOS_IDDefault(){
				
					return "";
				
				}
				public String SERVICIOS_IDComment(){
				
				    return "";
				
				}
				public String SERVICIOS_IDPattern(){
				
					return "";
				
				}
				public String SERVICIOS_IDOriginalDbColumnName(){
				
					return "SERVICIOS_ID";
				
				}

				
			    public BigDecimal TORIGEN_ID;

				public BigDecimal getTORIGEN_ID () {
					return this.TORIGEN_ID;
				}

				public Boolean TORIGEN_IDIsNullable(){
				    return true;
				}
				public Boolean TORIGEN_IDIsKey(){
				    return false;
				}
				public Integer TORIGEN_IDLength(){
				    return 0;
				}
				public Integer TORIGEN_IDPrecision(){
				    return null;
				}
				public String TORIGEN_IDDefault(){
				
					return "";
				
				}
				public String TORIGEN_IDComment(){
				
				    return "";
				
				}
				public String TORIGEN_IDPattern(){
				
					return "";
				
				}
				public String TORIGEN_IDOriginalDbColumnName(){
				
					return "TORIGEN_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal TFORMASFARMACEUTICAS_ID;

				public BigDecimal getTFORMASFARMACEUTICAS_ID () {
					return this.TFORMASFARMACEUTICAS_ID;
				}

				public Boolean TFORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer TFORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String TFORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "TFORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal GENERICO_ID;

				public BigDecimal getGENERICO_ID () {
					return this.GENERICO_ID;
				}

				public Boolean GENERICO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_IDPrecision(){
				    return null;
				}
				public String GENERICO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_IDOriginalDbColumnName(){
				
					return "GENERICO_ID";
				
				}

				
			    public BigDecimal GENERICO_INSUMO_ID;

				public BigDecimal getGENERICO_INSUMO_ID () {
					return this.GENERICO_INSUMO_ID;
				}

				public Boolean GENERICO_INSUMO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_INSUMO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_INSUMO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_INSUMO_IDPrecision(){
				    return 0;
				}
				public String GENERICO_INSUMO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_INSUMO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDOriginalDbColumnName(){
				
					return "GENERICO_INSUMO_ID";
				
				}

				
			    public BigDecimal CIE10_ID;

				public BigDecimal getCIE10_ID () {
					return this.CIE10_ID;
				}

				public Boolean CIE10_IDIsNullable(){
				    return true;
				}
				public Boolean CIE10_IDIsKey(){
				    return false;
				}
				public Integer CIE10_IDLength(){
				    return 0;
				}
				public Integer CIE10_IDPrecision(){
				    return null;
				}
				public String CIE10_IDDefault(){
				
					return "";
				
				}
				public String CIE10_IDComment(){
				
				    return "";
				
				}
				public String CIE10_IDPattern(){
				
					return "";
				
				}
				public String CIE10_IDOriginalDbColumnName(){
				
					return "CIE10_ID";
				
				}

				
			    public String TDIAGNOSTICO;

				public String getTDIAGNOSTICO () {
					return this.TDIAGNOSTICO;
				}

				public Boolean TDIAGNOSTICOIsNullable(){
				    return true;
				}
				public Boolean TDIAGNOSTICOIsKey(){
				    return false;
				}
				public Integer TDIAGNOSTICOLength(){
				    return 50;
				}
				public Integer TDIAGNOSTICOPrecision(){
				    return 0;
				}
				public String TDIAGNOSTICODefault(){
				
					return null;
				
				}
				public String TDIAGNOSTICOComment(){
				
				    return "";
				
				}
				public String TDIAGNOSTICOPattern(){
				
					return "";
				
				}
				public String TDIAGNOSTICOOriginalDbColumnName(){
				
					return "TDIAGNOSTICO";
				
				}

				
			    public BigDecimal CANTENTREGADA;

				public BigDecimal getCANTENTREGADA () {
					return this.CANTENTREGADA;
				}

				public Boolean CANTENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTENTREGADALength(){
				    return 0;
				}
				public Integer CANTENTREGADAPrecision(){
				    return null;
				}
				public String CANTENTREGADADefault(){
				
					return "";
				
				}
				public String CANTENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTENTREGADAOriginalDbColumnName(){
				
					return "CANTENTREGADA";
				
				}

				
			    public java.util.Date FECHA_VALORACION;

				public java.util.Date getFECHA_VALORACION () {
					return this.FECHA_VALORACION;
				}

				public Boolean FECHA_VALORACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VALORACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VALORACIONLength(){
				    return 0;
				}
				public Integer FECHA_VALORACIONPrecision(){
				    return 0;
				}
				public String FECHA_VALORACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VALORACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VALORACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VALORACIONOriginalDbColumnName(){
				
					return "FECHA_VALORACION";
				
				}

				
			    public BigDecimal DIAGNOSTICOS_ID;

				public BigDecimal getDIAGNOSTICOS_ID () {
					return this.DIAGNOSTICOS_ID;
				}

				public Boolean DIAGNOSTICOS_IDIsNullable(){
				    return true;
				}
				public Boolean DIAGNOSTICOS_IDIsKey(){
				    return false;
				}
				public Integer DIAGNOSTICOS_IDLength(){
				    return 0;
				}
				public Integer DIAGNOSTICOS_IDPrecision(){
				    return null;
				}
				public String DIAGNOSTICOS_IDDefault(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDComment(){
				
				    return "";
				
				}
				public String DIAGNOSTICOS_IDPattern(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDOriginalDbColumnName(){
				
					return "DIAGNOSTICOS_ID";
				
				}

				
			    public String FINALIDADCONSULTA;

				public String getFINALIDADCONSULTA () {
					return this.FINALIDADCONSULTA;
				}

				public Boolean FINALIDADCONSULTAIsNullable(){
				    return true;
				}
				public Boolean FINALIDADCONSULTAIsKey(){
				    return false;
				}
				public Integer FINALIDADCONSULTALength(){
				    return 200;
				}
				public Integer FINALIDADCONSULTAPrecision(){
				    return 0;
				}
				public String FINALIDADCONSULTADefault(){
				
					return null;
				
				}
				public String FINALIDADCONSULTAComment(){
				
				    return "";
				
				}
				public String FINALIDADCONSULTAPattern(){
				
					return "";
				
				}
				public String FINALIDADCONSULTAOriginalDbColumnName(){
				
					return "FINALIDADCONSULTA";
				
				}

				
			    public String SERVICIO_NOMBRE;

				public String getSERVICIO_NOMBRE () {
					return this.SERVICIO_NOMBRE;
				}

				public Boolean SERVICIO_NOMBREIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_NOMBREIsKey(){
				    return false;
				}
				public Integer SERVICIO_NOMBRELength(){
				    return 50;
				}
				public Integer SERVICIO_NOMBREPrecision(){
				    return 0;
				}
				public String SERVICIO_NOMBREDefault(){
				
					return null;
				
				}
				public String SERVICIO_NOMBREComment(){
				
				    return "Nombre del Servicio";
				
				}
				public String SERVICIO_NOMBREPattern(){
				
					return "";
				
				}
				public String SERVICIO_NOMBREOriginalDbColumnName(){
				
					return "SERVICIO_NOMBRE";
				
				}

				
			    public String SERVICIO_SIGLA;

				public String getSERVICIO_SIGLA () {
					return this.SERVICIO_SIGLA;
				}

				public Boolean SERVICIO_SIGLAIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_SIGLAIsKey(){
				    return false;
				}
				public Integer SERVICIO_SIGLALength(){
				    return 10;
				}
				public Integer SERVICIO_SIGLAPrecision(){
				    return 0;
				}
				public String SERVICIO_SIGLADefault(){
				
					return null;
				
				}
				public String SERVICIO_SIGLAComment(){
				
				    return "Sigla del Servicio";
				
				}
				public String SERVICIO_SIGLAPattern(){
				
					return "";
				
				}
				public String SERVICIO_SIGLAOriginalDbColumnName(){
				
					return "SERVICIO_SIGLA";
				
				}

				
			    public String ESPECIALIDAD_MEDICO;

				public String getESPECIALIDAD_MEDICO () {
					return this.ESPECIALIDAD_MEDICO;
				}

				public Boolean ESPECIALIDAD_MEDICOIsNullable(){
				    return false;
				}
				public Boolean ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer ESPECIALIDAD_MEDICOLength(){
				    return 500;
				}
				public Integer ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "ESPECIALIDAD_MEDICO";
				
				}

				
			    public String CODIGO_ESPECIALIDAD_MEDICO;

				public String getCODIGO_ESPECIALIDAD_MEDICO () {
					return this.CODIGO_ESPECIALIDAD_MEDICO;
				}

				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOLength(){
				    return 20;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String CODIGO_ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "CODIGO_ESPECIALIDAD_MEDICO";
				
				}

				
			    public String TIPO_DISPENSACION;

				public String getTIPO_DISPENSACION () {
					return this.TIPO_DISPENSACION;
				}

				public Boolean TIPO_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean TIPO_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer TIPO_DISPENSACIONLength(){
				    return 100;
				}
				public Integer TIPO_DISPENSACIONPrecision(){
				    return 0;
				}
				public String TIPO_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String TIPO_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String TIPO_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String TIPO_DISPENSACIONOriginalDbColumnName(){
				
					return "TIPO_DISPENSACION";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
					this.TIPO_DISPENSACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.TIPO_DISPENSACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMULA_ID="+String.valueOf(FORMULA_ID));
		sb.append(",FORMULA="+FORMULA);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHA_FORMULACION="+String.valueOf(FECHA_FORMULACION));
		sb.append(",POSOLOGIA="+POSOLOGIA);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CANTIDAD_SOLICITADA="+String.valueOf(CANTIDAD_SOLICITADA));
		sb.append(",ESTADO_FORMULA="+ESTADO_FORMULA);
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FORMEDINS_ID="+String.valueOf(FORMEDINS_ID));
		sb.append(",TFORMULAS_ID="+String.valueOf(TFORMULAS_ID));
		sb.append(",PROCESOSASISTENCIALES_ID="+String.valueOf(PROCESOSASISTENCIALES_ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",ESPECIALIDADES_ID="+String.valueOf(ESPECIALIDADES_ID));
		sb.append(",SERVICIOS_ID="+String.valueOf(SERVICIOS_ID));
		sb.append(",TORIGEN_ID="+String.valueOf(TORIGEN_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",TFORMASFARMACEUTICAS_ID="+String.valueOf(TFORMASFARMACEUTICAS_ID));
		sb.append(",GENERICO_ID="+String.valueOf(GENERICO_ID));
		sb.append(",GENERICO_INSUMO_ID="+String.valueOf(GENERICO_INSUMO_ID));
		sb.append(",CIE10_ID="+String.valueOf(CIE10_ID));
		sb.append(",TDIAGNOSTICO="+TDIAGNOSTICO);
		sb.append(",CANTENTREGADA="+String.valueOf(CANTENTREGADA));
		sb.append(",FECHA_VALORACION="+String.valueOf(FECHA_VALORACION));
		sb.append(",DIAGNOSTICOS_ID="+String.valueOf(DIAGNOSTICOS_ID));
		sb.append(",FINALIDADCONSULTA="+FINALIDADCONSULTA);
		sb.append(",SERVICIO_NOMBRE="+SERVICIO_NOMBRE);
		sb.append(",SERVICIO_SIGLA="+SERVICIO_SIGLA);
		sb.append(",ESPECIALIDAD_MEDICO="+ESPECIALIDAD_MEDICO);
		sb.append(",CODIGO_ESPECIALIDAD_MEDICO="+CODIGO_ESPECIALIDAD_MEDICO);
		sb.append(",TIPO_DISPENSACION="+TIPO_DISPENSACION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out5Struct implements routines.system.IPersistableRow<out5Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal FORMULA_ID;

				public BigDecimal getFORMULA_ID () {
					return this.FORMULA_ID;
				}

				public Boolean FORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean FORMULA_IDIsKey(){
				    return false;
				}
				public Integer FORMULA_IDLength(){
				    return 0;
				}
				public Integer FORMULA_IDPrecision(){
				    return null;
				}
				public String FORMULA_IDDefault(){
				
					return "";
				
				}
				public String FORMULA_IDComment(){
				
				    return "";
				
				}
				public String FORMULA_IDPattern(){
				
					return "";
				
				}
				public String FORMULA_IDOriginalDbColumnName(){
				
					return "FORMULA_ID";
				
				}

				
			    public String FORMULA;

				public String getFORMULA () {
					return this.FORMULA;
				}

				public Boolean FORMULAIsNullable(){
				    return false;
				}
				public Boolean FORMULAIsKey(){
				    return false;
				}
				public Integer FORMULALength(){
				    return 50;
				}
				public Integer FORMULAPrecision(){
				    return 0;
				}
				public String FORMULADefault(){
				
					return null;
				
				}
				public String FORMULAComment(){
				
				    return "";
				
				}
				public String FORMULAPattern(){
				
					return "";
				
				}
				public String FORMULAOriginalDbColumnName(){
				
					return "FORMULA";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHA_FORMULACION;

				public java.util.Date getFECHA_FORMULACION () {
					return this.FECHA_FORMULACION;
				}

				public Boolean FECHA_FORMULACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_FORMULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FORMULACIONLength(){
				    return 0;
				}
				public Integer FECHA_FORMULACIONPrecision(){
				    return 0;
				}
				public String FECHA_FORMULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FORMULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_FORMULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_FORMULACIONOriginalDbColumnName(){
				
					return "FECHA_FORMULACION";
				
				}

				
			    public String POSOLOGIA;

				public String getPOSOLOGIA () {
					return this.POSOLOGIA;
				}

				public Boolean POSOLOGIAIsNullable(){
				    return true;
				}
				public Boolean POSOLOGIAIsKey(){
				    return false;
				}
				public Integer POSOLOGIALength(){
				    return 200;
				}
				public Integer POSOLOGIAPrecision(){
				    return 0;
				}
				public String POSOLOGIADefault(){
				
					return null;
				
				}
				public String POSOLOGIAComment(){
				
				    return "";
				
				}
				public String POSOLOGIAPattern(){
				
					return "";
				
				}
				public String POSOLOGIAOriginalDbColumnName(){
				
					return "POSOLOGIA";
				
				}

				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}

				public Boolean FRECUENCIAIsNullable(){
				    return true;
				}
				public Boolean FRECUENCIAIsKey(){
				    return false;
				}
				public Integer FRECUENCIALength(){
				    return 53;
				}
				public Integer FRECUENCIAPrecision(){
				    return 0;
				}
				public String FRECUENCIADefault(){
				
					return null;
				
				}
				public String FRECUENCIAComment(){
				
				    return "";
				
				}
				public String FRECUENCIAPattern(){
				
					return "";
				
				}
				public String FRECUENCIAOriginalDbColumnName(){
				
					return "FRECUENCIA";
				
				}

				
			    public BigDecimal CANTIDAD_SOLICITADA;

				public BigDecimal getCANTIDAD_SOLICITADA () {
					return this.CANTIDAD_SOLICITADA;
				}

				public Boolean CANTIDAD_SOLICITADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_SOLICITADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_SOLICITADALength(){
				    return 0;
				}
				public Integer CANTIDAD_SOLICITADAPrecision(){
				    return null;
				}
				public String CANTIDAD_SOLICITADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_SOLICITADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAOriginalDbColumnName(){
				
					return "CANTIDAD_SOLICITADA";
				
				}

				
			    public String ESTADO_FORMULA;

				public String getESTADO_FORMULA () {
					return this.ESTADO_FORMULA;
				}

				public Boolean ESTADO_FORMULAIsNullable(){
				    return false;
				}
				public Boolean ESTADO_FORMULAIsKey(){
				    return false;
				}
				public Integer ESTADO_FORMULALength(){
				    return 20;
				}
				public Integer ESTADO_FORMULAPrecision(){
				    return 0;
				}
				public String ESTADO_FORMULADefault(){
				
					return null;
				
				}
				public String ESTADO_FORMULAComment(){
				
				    return "";
				
				}
				public String ESTADO_FORMULAPattern(){
				
					return "";
				
				}
				public String ESTADO_FORMULAOriginalDbColumnName(){
				
					return "ESTADO_FORMULA";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return true;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public BigDecimal FORMEDINS_ID;

				public BigDecimal getFORMEDINS_ID () {
					return this.FORMEDINS_ID;
				}

				public Boolean FORMEDINS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMEDINS_IDIsKey(){
				    return false;
				}
				public Integer FORMEDINS_IDLength(){
				    return 0;
				}
				public Integer FORMEDINS_IDPrecision(){
				    return null;
				}
				public String FORMEDINS_IDDefault(){
				
					return "";
				
				}
				public String FORMEDINS_IDComment(){
				
				    return "";
				
				}
				public String FORMEDINS_IDPattern(){
				
					return "";
				
				}
				public String FORMEDINS_IDOriginalDbColumnName(){
				
					return "FORMEDINS_ID";
				
				}

				
			    public BigDecimal TFORMULAS_ID;

				public BigDecimal getTFORMULAS_ID () {
					return this.TFORMULAS_ID;
				}

				public Boolean TFORMULAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMULAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMULAS_IDLength(){
				    return 0;
				}
				public Integer TFORMULAS_IDPrecision(){
				    return null;
				}
				public String TFORMULAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMULAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMULAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMULAS_IDOriginalDbColumnName(){
				
					return "TFORMULAS_ID";
				
				}

				
			    public BigDecimal PROCESOSASISTENCIALES_ID;

				public BigDecimal getPROCESOSASISTENCIALES_ID () {
					return this.PROCESOSASISTENCIALES_ID;
				}

				public Boolean PROCESOSASISTENCIALES_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOSASISTENCIALES_IDIsKey(){
				    return false;
				}
				public Integer PROCESOSASISTENCIALES_IDLength(){
				    return 0;
				}
				public Integer PROCESOSASISTENCIALES_IDPrecision(){
				    return null;
				}
				public String PROCESOSASISTENCIALES_IDDefault(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDComment(){
				
				    return "";
				
				}
				public String PROCESOSASISTENCIALES_IDPattern(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDOriginalDbColumnName(){
				
					return "PROCESOSASISTENCIALES_ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return false;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return null;
				}
				public String UORG_IDDefault(){
				
					return "";
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal ESPECIALIDADES_ID;

				public BigDecimal getESPECIALIDADES_ID () {
					return this.ESPECIALIDADES_ID;
				}

				public Boolean ESPECIALIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDADES_IDIsKey(){
				    return false;
				}
				public Integer ESPECIALIDADES_IDLength(){
				    return 0;
				}
				public Integer ESPECIALIDADES_IDPrecision(){
				    return null;
				}
				public String ESPECIALIDADES_IDDefault(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDComment(){
				
				    return "";
				
				}
				public String ESPECIALIDADES_IDPattern(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDOriginalDbColumnName(){
				
					return "ESPECIALIDADES_ID";
				
				}

				
			    public BigDecimal SERVICIOS_ID;

				public BigDecimal getSERVICIOS_ID () {
					return this.SERVICIOS_ID;
				}

				public Boolean SERVICIOS_IDIsNullable(){
				    return true;
				}
				public Boolean SERVICIOS_IDIsKey(){
				    return false;
				}
				public Integer SERVICIOS_IDLength(){
				    return 0;
				}
				public Integer SERVICIOS_IDPrecision(){
				    return null;
				}
				public String SERVICIOS_IDDefault(){
				
					return "";
				
				}
				public String SERVICIOS_IDComment(){
				
				    return "";
				
				}
				public String SERVICIOS_IDPattern(){
				
					return "";
				
				}
				public String SERVICIOS_IDOriginalDbColumnName(){
				
					return "SERVICIOS_ID";
				
				}

				
			    public BigDecimal TORIGEN_ID;

				public BigDecimal getTORIGEN_ID () {
					return this.TORIGEN_ID;
				}

				public Boolean TORIGEN_IDIsNullable(){
				    return true;
				}
				public Boolean TORIGEN_IDIsKey(){
				    return false;
				}
				public Integer TORIGEN_IDLength(){
				    return 0;
				}
				public Integer TORIGEN_IDPrecision(){
				    return null;
				}
				public String TORIGEN_IDDefault(){
				
					return "";
				
				}
				public String TORIGEN_IDComment(){
				
				    return "";
				
				}
				public String TORIGEN_IDPattern(){
				
					return "";
				
				}
				public String TORIGEN_IDOriginalDbColumnName(){
				
					return "TORIGEN_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal TFORMASFARMACEUTICAS_ID;

				public BigDecimal getTFORMASFARMACEUTICAS_ID () {
					return this.TFORMASFARMACEUTICAS_ID;
				}

				public Boolean TFORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer TFORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String TFORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "TFORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal GENERICO_ID;

				public BigDecimal getGENERICO_ID () {
					return this.GENERICO_ID;
				}

				public Boolean GENERICO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_IDPrecision(){
				    return null;
				}
				public String GENERICO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_IDOriginalDbColumnName(){
				
					return "GENERICO_ID";
				
				}

				
			    public BigDecimal GENERICO_INSUMO_ID;

				public BigDecimal getGENERICO_INSUMO_ID () {
					return this.GENERICO_INSUMO_ID;
				}

				public Boolean GENERICO_INSUMO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_INSUMO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_INSUMO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_INSUMO_IDPrecision(){
				    return 0;
				}
				public String GENERICO_INSUMO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_INSUMO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDOriginalDbColumnName(){
				
					return "GENERICO_INSUMO_ID";
				
				}

				
			    public BigDecimal CIE10_ID;

				public BigDecimal getCIE10_ID () {
					return this.CIE10_ID;
				}

				public Boolean CIE10_IDIsNullable(){
				    return true;
				}
				public Boolean CIE10_IDIsKey(){
				    return false;
				}
				public Integer CIE10_IDLength(){
				    return 0;
				}
				public Integer CIE10_IDPrecision(){
				    return null;
				}
				public String CIE10_IDDefault(){
				
					return "";
				
				}
				public String CIE10_IDComment(){
				
				    return "";
				
				}
				public String CIE10_IDPattern(){
				
					return "";
				
				}
				public String CIE10_IDOriginalDbColumnName(){
				
					return "CIE10_ID";
				
				}

				
			    public String TDIAGNOSTICO;

				public String getTDIAGNOSTICO () {
					return this.TDIAGNOSTICO;
				}

				public Boolean TDIAGNOSTICOIsNullable(){
				    return true;
				}
				public Boolean TDIAGNOSTICOIsKey(){
				    return false;
				}
				public Integer TDIAGNOSTICOLength(){
				    return 50;
				}
				public Integer TDIAGNOSTICOPrecision(){
				    return 0;
				}
				public String TDIAGNOSTICODefault(){
				
					return null;
				
				}
				public String TDIAGNOSTICOComment(){
				
				    return "";
				
				}
				public String TDIAGNOSTICOPattern(){
				
					return "";
				
				}
				public String TDIAGNOSTICOOriginalDbColumnName(){
				
					return "TDIAGNOSTICO";
				
				}

				
			    public BigDecimal CANTENTREGADA;

				public BigDecimal getCANTENTREGADA () {
					return this.CANTENTREGADA;
				}

				public Boolean CANTENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTENTREGADALength(){
				    return 0;
				}
				public Integer CANTENTREGADAPrecision(){
				    return null;
				}
				public String CANTENTREGADADefault(){
				
					return "";
				
				}
				public String CANTENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTENTREGADAOriginalDbColumnName(){
				
					return "CANTENTREGADA";
				
				}

				
			    public java.util.Date FECHA_VALORACION;

				public java.util.Date getFECHA_VALORACION () {
					return this.FECHA_VALORACION;
				}

				public Boolean FECHA_VALORACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VALORACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VALORACIONLength(){
				    return 0;
				}
				public Integer FECHA_VALORACIONPrecision(){
				    return 0;
				}
				public String FECHA_VALORACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VALORACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VALORACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VALORACIONOriginalDbColumnName(){
				
					return "FECHA_VALORACION";
				
				}

				
			    public BigDecimal DIAGNOSTICOS_ID;

				public BigDecimal getDIAGNOSTICOS_ID () {
					return this.DIAGNOSTICOS_ID;
				}

				public Boolean DIAGNOSTICOS_IDIsNullable(){
				    return true;
				}
				public Boolean DIAGNOSTICOS_IDIsKey(){
				    return false;
				}
				public Integer DIAGNOSTICOS_IDLength(){
				    return 0;
				}
				public Integer DIAGNOSTICOS_IDPrecision(){
				    return null;
				}
				public String DIAGNOSTICOS_IDDefault(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDComment(){
				
				    return "";
				
				}
				public String DIAGNOSTICOS_IDPattern(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDOriginalDbColumnName(){
				
					return "DIAGNOSTICOS_ID";
				
				}

				
			    public String FINALIDADCONSULTA;

				public String getFINALIDADCONSULTA () {
					return this.FINALIDADCONSULTA;
				}

				public Boolean FINALIDADCONSULTAIsNullable(){
				    return true;
				}
				public Boolean FINALIDADCONSULTAIsKey(){
				    return false;
				}
				public Integer FINALIDADCONSULTALength(){
				    return 200;
				}
				public Integer FINALIDADCONSULTAPrecision(){
				    return 0;
				}
				public String FINALIDADCONSULTADefault(){
				
					return null;
				
				}
				public String FINALIDADCONSULTAComment(){
				
				    return "";
				
				}
				public String FINALIDADCONSULTAPattern(){
				
					return "";
				
				}
				public String FINALIDADCONSULTAOriginalDbColumnName(){
				
					return "FINALIDADCONSULTA";
				
				}

				
			    public String SERVICIO_NOMBRE;

				public String getSERVICIO_NOMBRE () {
					return this.SERVICIO_NOMBRE;
				}

				public Boolean SERVICIO_NOMBREIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_NOMBREIsKey(){
				    return false;
				}
				public Integer SERVICIO_NOMBRELength(){
				    return 50;
				}
				public Integer SERVICIO_NOMBREPrecision(){
				    return 0;
				}
				public String SERVICIO_NOMBREDefault(){
				
					return null;
				
				}
				public String SERVICIO_NOMBREComment(){
				
				    return "Nombre del Servicio";
				
				}
				public String SERVICIO_NOMBREPattern(){
				
					return "";
				
				}
				public String SERVICIO_NOMBREOriginalDbColumnName(){
				
					return "SERVICIO_NOMBRE";
				
				}

				
			    public String SERVICIO_SIGLA;

				public String getSERVICIO_SIGLA () {
					return this.SERVICIO_SIGLA;
				}

				public Boolean SERVICIO_SIGLAIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_SIGLAIsKey(){
				    return false;
				}
				public Integer SERVICIO_SIGLALength(){
				    return 10;
				}
				public Integer SERVICIO_SIGLAPrecision(){
				    return 0;
				}
				public String SERVICIO_SIGLADefault(){
				
					return null;
				
				}
				public String SERVICIO_SIGLAComment(){
				
				    return "Sigla del Servicio";
				
				}
				public String SERVICIO_SIGLAPattern(){
				
					return "";
				
				}
				public String SERVICIO_SIGLAOriginalDbColumnName(){
				
					return "SERVICIO_SIGLA";
				
				}

				
			    public String ESPECIALIDAD_MEDICO;

				public String getESPECIALIDAD_MEDICO () {
					return this.ESPECIALIDAD_MEDICO;
				}

				public Boolean ESPECIALIDAD_MEDICOIsNullable(){
				    return false;
				}
				public Boolean ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer ESPECIALIDAD_MEDICOLength(){
				    return 500;
				}
				public Integer ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "ESPECIALIDAD_MEDICO";
				
				}

				
			    public String CODIGO_ESPECIALIDAD_MEDICO;

				public String getCODIGO_ESPECIALIDAD_MEDICO () {
					return this.CODIGO_ESPECIALIDAD_MEDICO;
				}

				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESPECIALIDAD_MEDICOIsKey(){
				    return false;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOLength(){
				    return 20;
				}
				public Integer CODIGO_ESPECIALIDAD_MEDICOPrecision(){
				    return 0;
				}
				public String CODIGO_ESPECIALIDAD_MEDICODefault(){
				
					return null;
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOComment(){
				
				    return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOPattern(){
				
					return "";
				
				}
				public String CODIGO_ESPECIALIDAD_MEDICOOriginalDbColumnName(){
				
					return "CODIGO_ESPECIALIDAD_MEDICO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
					this.ESPECIALIDAD_MEDICO = readString(dis);
					
					this.CODIGO_ESPECIALIDAD_MEDICO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
					// String
				
						writeString(this.ESPECIALIDAD_MEDICO,dos);
					
					// String
				
						writeString(this.CODIGO_ESPECIALIDAD_MEDICO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMULA_ID="+String.valueOf(FORMULA_ID));
		sb.append(",FORMULA="+FORMULA);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHA_FORMULACION="+String.valueOf(FECHA_FORMULACION));
		sb.append(",POSOLOGIA="+POSOLOGIA);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CANTIDAD_SOLICITADA="+String.valueOf(CANTIDAD_SOLICITADA));
		sb.append(",ESTADO_FORMULA="+ESTADO_FORMULA);
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FORMEDINS_ID="+String.valueOf(FORMEDINS_ID));
		sb.append(",TFORMULAS_ID="+String.valueOf(TFORMULAS_ID));
		sb.append(",PROCESOSASISTENCIALES_ID="+String.valueOf(PROCESOSASISTENCIALES_ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",ESPECIALIDADES_ID="+String.valueOf(ESPECIALIDADES_ID));
		sb.append(",SERVICIOS_ID="+String.valueOf(SERVICIOS_ID));
		sb.append(",TORIGEN_ID="+String.valueOf(TORIGEN_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",TFORMASFARMACEUTICAS_ID="+String.valueOf(TFORMASFARMACEUTICAS_ID));
		sb.append(",GENERICO_ID="+String.valueOf(GENERICO_ID));
		sb.append(",GENERICO_INSUMO_ID="+String.valueOf(GENERICO_INSUMO_ID));
		sb.append(",CIE10_ID="+String.valueOf(CIE10_ID));
		sb.append(",TDIAGNOSTICO="+TDIAGNOSTICO);
		sb.append(",CANTENTREGADA="+String.valueOf(CANTENTREGADA));
		sb.append(",FECHA_VALORACION="+String.valueOf(FECHA_VALORACION));
		sb.append(",DIAGNOSTICOS_ID="+String.valueOf(DIAGNOSTICOS_ID));
		sb.append(",FINALIDADCONSULTA="+FINALIDADCONSULTA);
		sb.append(",SERVICIO_NOMBRE="+SERVICIO_NOMBRE);
		sb.append(",SERVICIO_SIGLA="+SERVICIO_SIGLA);
		sb.append(",ESPECIALIDAD_MEDICO="+ESPECIALIDAD_MEDICO);
		sb.append(",CODIGO_ESPECIALIDAD_MEDICO="+CODIGO_ESPECIALIDAD_MEDICO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out2Struct implements routines.system.IPersistableRow<out2Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal FORMULA_ID;

				public BigDecimal getFORMULA_ID () {
					return this.FORMULA_ID;
				}

				public Boolean FORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean FORMULA_IDIsKey(){
				    return false;
				}
				public Integer FORMULA_IDLength(){
				    return 0;
				}
				public Integer FORMULA_IDPrecision(){
				    return null;
				}
				public String FORMULA_IDDefault(){
				
					return "";
				
				}
				public String FORMULA_IDComment(){
				
				    return "";
				
				}
				public String FORMULA_IDPattern(){
				
					return "";
				
				}
				public String FORMULA_IDOriginalDbColumnName(){
				
					return "FORMULA_ID";
				
				}

				
			    public String FORMULA;

				public String getFORMULA () {
					return this.FORMULA;
				}

				public Boolean FORMULAIsNullable(){
				    return false;
				}
				public Boolean FORMULAIsKey(){
				    return false;
				}
				public Integer FORMULALength(){
				    return 50;
				}
				public Integer FORMULAPrecision(){
				    return 0;
				}
				public String FORMULADefault(){
				
					return null;
				
				}
				public String FORMULAComment(){
				
				    return "";
				
				}
				public String FORMULAPattern(){
				
					return "";
				
				}
				public String FORMULAOriginalDbColumnName(){
				
					return "FORMULA";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHA_FORMULACION;

				public java.util.Date getFECHA_FORMULACION () {
					return this.FECHA_FORMULACION;
				}

				public Boolean FECHA_FORMULACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_FORMULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FORMULACIONLength(){
				    return 0;
				}
				public Integer FECHA_FORMULACIONPrecision(){
				    return 0;
				}
				public String FECHA_FORMULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FORMULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_FORMULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_FORMULACIONOriginalDbColumnName(){
				
					return "FECHA_FORMULACION";
				
				}

				
			    public String POSOLOGIA;

				public String getPOSOLOGIA () {
					return this.POSOLOGIA;
				}

				public Boolean POSOLOGIAIsNullable(){
				    return true;
				}
				public Boolean POSOLOGIAIsKey(){
				    return false;
				}
				public Integer POSOLOGIALength(){
				    return 200;
				}
				public Integer POSOLOGIAPrecision(){
				    return 0;
				}
				public String POSOLOGIADefault(){
				
					return null;
				
				}
				public String POSOLOGIAComment(){
				
				    return "";
				
				}
				public String POSOLOGIAPattern(){
				
					return "";
				
				}
				public String POSOLOGIAOriginalDbColumnName(){
				
					return "POSOLOGIA";
				
				}

				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}

				public Boolean FRECUENCIAIsNullable(){
				    return true;
				}
				public Boolean FRECUENCIAIsKey(){
				    return false;
				}
				public Integer FRECUENCIALength(){
				    return 53;
				}
				public Integer FRECUENCIAPrecision(){
				    return 0;
				}
				public String FRECUENCIADefault(){
				
					return null;
				
				}
				public String FRECUENCIAComment(){
				
				    return "";
				
				}
				public String FRECUENCIAPattern(){
				
					return "";
				
				}
				public String FRECUENCIAOriginalDbColumnName(){
				
					return "FRECUENCIA";
				
				}

				
			    public BigDecimal CANTIDAD_SOLICITADA;

				public BigDecimal getCANTIDAD_SOLICITADA () {
					return this.CANTIDAD_SOLICITADA;
				}

				public Boolean CANTIDAD_SOLICITADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_SOLICITADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_SOLICITADALength(){
				    return 0;
				}
				public Integer CANTIDAD_SOLICITADAPrecision(){
				    return null;
				}
				public String CANTIDAD_SOLICITADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_SOLICITADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAOriginalDbColumnName(){
				
					return "CANTIDAD_SOLICITADA";
				
				}

				
			    public String ESTADO_FORMULA;

				public String getESTADO_FORMULA () {
					return this.ESTADO_FORMULA;
				}

				public Boolean ESTADO_FORMULAIsNullable(){
				    return false;
				}
				public Boolean ESTADO_FORMULAIsKey(){
				    return false;
				}
				public Integer ESTADO_FORMULALength(){
				    return 20;
				}
				public Integer ESTADO_FORMULAPrecision(){
				    return 0;
				}
				public String ESTADO_FORMULADefault(){
				
					return null;
				
				}
				public String ESTADO_FORMULAComment(){
				
				    return "";
				
				}
				public String ESTADO_FORMULAPattern(){
				
					return "";
				
				}
				public String ESTADO_FORMULAOriginalDbColumnName(){
				
					return "ESTADO_FORMULA";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return true;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public BigDecimal FORMEDINS_ID;

				public BigDecimal getFORMEDINS_ID () {
					return this.FORMEDINS_ID;
				}

				public Boolean FORMEDINS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMEDINS_IDIsKey(){
				    return false;
				}
				public Integer FORMEDINS_IDLength(){
				    return 0;
				}
				public Integer FORMEDINS_IDPrecision(){
				    return null;
				}
				public String FORMEDINS_IDDefault(){
				
					return "";
				
				}
				public String FORMEDINS_IDComment(){
				
				    return "";
				
				}
				public String FORMEDINS_IDPattern(){
				
					return "";
				
				}
				public String FORMEDINS_IDOriginalDbColumnName(){
				
					return "FORMEDINS_ID";
				
				}

				
			    public BigDecimal TFORMULAS_ID;

				public BigDecimal getTFORMULAS_ID () {
					return this.TFORMULAS_ID;
				}

				public Boolean TFORMULAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMULAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMULAS_IDLength(){
				    return 0;
				}
				public Integer TFORMULAS_IDPrecision(){
				    return null;
				}
				public String TFORMULAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMULAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMULAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMULAS_IDOriginalDbColumnName(){
				
					return "TFORMULAS_ID";
				
				}

				
			    public BigDecimal PROCESOSASISTENCIALES_ID;

				public BigDecimal getPROCESOSASISTENCIALES_ID () {
					return this.PROCESOSASISTENCIALES_ID;
				}

				public Boolean PROCESOSASISTENCIALES_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOSASISTENCIALES_IDIsKey(){
				    return false;
				}
				public Integer PROCESOSASISTENCIALES_IDLength(){
				    return 0;
				}
				public Integer PROCESOSASISTENCIALES_IDPrecision(){
				    return null;
				}
				public String PROCESOSASISTENCIALES_IDDefault(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDComment(){
				
				    return "";
				
				}
				public String PROCESOSASISTENCIALES_IDPattern(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDOriginalDbColumnName(){
				
					return "PROCESOSASISTENCIALES_ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return false;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return null;
				}
				public String UORG_IDDefault(){
				
					return "";
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal ESPECIALIDADES_ID;

				public BigDecimal getESPECIALIDADES_ID () {
					return this.ESPECIALIDADES_ID;
				}

				public Boolean ESPECIALIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDADES_IDIsKey(){
				    return false;
				}
				public Integer ESPECIALIDADES_IDLength(){
				    return 0;
				}
				public Integer ESPECIALIDADES_IDPrecision(){
				    return null;
				}
				public String ESPECIALIDADES_IDDefault(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDComment(){
				
				    return "";
				
				}
				public String ESPECIALIDADES_IDPattern(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDOriginalDbColumnName(){
				
					return "ESPECIALIDADES_ID";
				
				}

				
			    public BigDecimal SERVICIOS_ID;

				public BigDecimal getSERVICIOS_ID () {
					return this.SERVICIOS_ID;
				}

				public Boolean SERVICIOS_IDIsNullable(){
				    return true;
				}
				public Boolean SERVICIOS_IDIsKey(){
				    return false;
				}
				public Integer SERVICIOS_IDLength(){
				    return 0;
				}
				public Integer SERVICIOS_IDPrecision(){
				    return null;
				}
				public String SERVICIOS_IDDefault(){
				
					return "";
				
				}
				public String SERVICIOS_IDComment(){
				
				    return "";
				
				}
				public String SERVICIOS_IDPattern(){
				
					return "";
				
				}
				public String SERVICIOS_IDOriginalDbColumnName(){
				
					return "SERVICIOS_ID";
				
				}

				
			    public BigDecimal TORIGEN_ID;

				public BigDecimal getTORIGEN_ID () {
					return this.TORIGEN_ID;
				}

				public Boolean TORIGEN_IDIsNullable(){
				    return true;
				}
				public Boolean TORIGEN_IDIsKey(){
				    return false;
				}
				public Integer TORIGEN_IDLength(){
				    return 0;
				}
				public Integer TORIGEN_IDPrecision(){
				    return null;
				}
				public String TORIGEN_IDDefault(){
				
					return "";
				
				}
				public String TORIGEN_IDComment(){
				
				    return "";
				
				}
				public String TORIGEN_IDPattern(){
				
					return "";
				
				}
				public String TORIGEN_IDOriginalDbColumnName(){
				
					return "TORIGEN_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal TFORMASFARMACEUTICAS_ID;

				public BigDecimal getTFORMASFARMACEUTICAS_ID () {
					return this.TFORMASFARMACEUTICAS_ID;
				}

				public Boolean TFORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer TFORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String TFORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "TFORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal GENERICO_ID;

				public BigDecimal getGENERICO_ID () {
					return this.GENERICO_ID;
				}

				public Boolean GENERICO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_IDPrecision(){
				    return null;
				}
				public String GENERICO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_IDOriginalDbColumnName(){
				
					return "GENERICO_ID";
				
				}

				
			    public BigDecimal GENERICO_INSUMO_ID;

				public BigDecimal getGENERICO_INSUMO_ID () {
					return this.GENERICO_INSUMO_ID;
				}

				public Boolean GENERICO_INSUMO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_INSUMO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_INSUMO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_INSUMO_IDPrecision(){
				    return 0;
				}
				public String GENERICO_INSUMO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_INSUMO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDOriginalDbColumnName(){
				
					return "GENERICO_INSUMO_ID";
				
				}

				
			    public BigDecimal CIE10_ID;

				public BigDecimal getCIE10_ID () {
					return this.CIE10_ID;
				}

				public Boolean CIE10_IDIsNullable(){
				    return true;
				}
				public Boolean CIE10_IDIsKey(){
				    return false;
				}
				public Integer CIE10_IDLength(){
				    return 0;
				}
				public Integer CIE10_IDPrecision(){
				    return null;
				}
				public String CIE10_IDDefault(){
				
					return "";
				
				}
				public String CIE10_IDComment(){
				
				    return "";
				
				}
				public String CIE10_IDPattern(){
				
					return "";
				
				}
				public String CIE10_IDOriginalDbColumnName(){
				
					return "CIE10_ID";
				
				}

				
			    public String TDIAGNOSTICO;

				public String getTDIAGNOSTICO () {
					return this.TDIAGNOSTICO;
				}

				public Boolean TDIAGNOSTICOIsNullable(){
				    return true;
				}
				public Boolean TDIAGNOSTICOIsKey(){
				    return false;
				}
				public Integer TDIAGNOSTICOLength(){
				    return 50;
				}
				public Integer TDIAGNOSTICOPrecision(){
				    return 0;
				}
				public String TDIAGNOSTICODefault(){
				
					return null;
				
				}
				public String TDIAGNOSTICOComment(){
				
				    return "";
				
				}
				public String TDIAGNOSTICOPattern(){
				
					return "";
				
				}
				public String TDIAGNOSTICOOriginalDbColumnName(){
				
					return "TDIAGNOSTICO";
				
				}

				
			    public BigDecimal CANTENTREGADA;

				public BigDecimal getCANTENTREGADA () {
					return this.CANTENTREGADA;
				}

				public Boolean CANTENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTENTREGADALength(){
				    return 0;
				}
				public Integer CANTENTREGADAPrecision(){
				    return null;
				}
				public String CANTENTREGADADefault(){
				
					return "";
				
				}
				public String CANTENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTENTREGADAOriginalDbColumnName(){
				
					return "CANTENTREGADA";
				
				}

				
			    public java.util.Date FECHA_VALORACION;

				public java.util.Date getFECHA_VALORACION () {
					return this.FECHA_VALORACION;
				}

				public Boolean FECHA_VALORACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VALORACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VALORACIONLength(){
				    return 0;
				}
				public Integer FECHA_VALORACIONPrecision(){
				    return 0;
				}
				public String FECHA_VALORACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VALORACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VALORACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VALORACIONOriginalDbColumnName(){
				
					return "FECHA_VALORACION";
				
				}

				
			    public BigDecimal DIAGNOSTICOS_ID;

				public BigDecimal getDIAGNOSTICOS_ID () {
					return this.DIAGNOSTICOS_ID;
				}

				public Boolean DIAGNOSTICOS_IDIsNullable(){
				    return true;
				}
				public Boolean DIAGNOSTICOS_IDIsKey(){
				    return false;
				}
				public Integer DIAGNOSTICOS_IDLength(){
				    return 0;
				}
				public Integer DIAGNOSTICOS_IDPrecision(){
				    return null;
				}
				public String DIAGNOSTICOS_IDDefault(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDComment(){
				
				    return "";
				
				}
				public String DIAGNOSTICOS_IDPattern(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDOriginalDbColumnName(){
				
					return "DIAGNOSTICOS_ID";
				
				}

				
			    public String FINALIDADCONSULTA;

				public String getFINALIDADCONSULTA () {
					return this.FINALIDADCONSULTA;
				}

				public Boolean FINALIDADCONSULTAIsNullable(){
				    return true;
				}
				public Boolean FINALIDADCONSULTAIsKey(){
				    return false;
				}
				public Integer FINALIDADCONSULTALength(){
				    return 200;
				}
				public Integer FINALIDADCONSULTAPrecision(){
				    return 0;
				}
				public String FINALIDADCONSULTADefault(){
				
					return null;
				
				}
				public String FINALIDADCONSULTAComment(){
				
				    return "";
				
				}
				public String FINALIDADCONSULTAPattern(){
				
					return "";
				
				}
				public String FINALIDADCONSULTAOriginalDbColumnName(){
				
					return "FINALIDADCONSULTA";
				
				}

				
			    public String SERVICIO_NOMBRE;

				public String getSERVICIO_NOMBRE () {
					return this.SERVICIO_NOMBRE;
				}

				public Boolean SERVICIO_NOMBREIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_NOMBREIsKey(){
				    return false;
				}
				public Integer SERVICIO_NOMBRELength(){
				    return 50;
				}
				public Integer SERVICIO_NOMBREPrecision(){
				    return 0;
				}
				public String SERVICIO_NOMBREDefault(){
				
					return null;
				
				}
				public String SERVICIO_NOMBREComment(){
				
				    return "Nombre del Servicio";
				
				}
				public String SERVICIO_NOMBREPattern(){
				
					return "";
				
				}
				public String SERVICIO_NOMBREOriginalDbColumnName(){
				
					return "SERVICIO_NOMBRE";
				
				}

				
			    public String SERVICIO_SIGLA;

				public String getSERVICIO_SIGLA () {
					return this.SERVICIO_SIGLA;
				}

				public Boolean SERVICIO_SIGLAIsNullable(){
				    return false;
				}
				public Boolean SERVICIO_SIGLAIsKey(){
				    return false;
				}
				public Integer SERVICIO_SIGLALength(){
				    return 10;
				}
				public Integer SERVICIO_SIGLAPrecision(){
				    return 0;
				}
				public String SERVICIO_SIGLADefault(){
				
					return null;
				
				}
				public String SERVICIO_SIGLAComment(){
				
				    return "Sigla del Servicio";
				
				}
				public String SERVICIO_SIGLAPattern(){
				
					return "";
				
				}
				public String SERVICIO_SIGLAOriginalDbColumnName(){
				
					return "SERVICIO_SIGLA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
					this.SERVICIO_NOMBRE = readString(dis);
					
					this.SERVICIO_SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
					// String
				
						writeString(this.SERVICIO_NOMBRE,dos);
					
					// String
				
						writeString(this.SERVICIO_SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMULA_ID="+String.valueOf(FORMULA_ID));
		sb.append(",FORMULA="+FORMULA);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHA_FORMULACION="+String.valueOf(FECHA_FORMULACION));
		sb.append(",POSOLOGIA="+POSOLOGIA);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CANTIDAD_SOLICITADA="+String.valueOf(CANTIDAD_SOLICITADA));
		sb.append(",ESTADO_FORMULA="+ESTADO_FORMULA);
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FORMEDINS_ID="+String.valueOf(FORMEDINS_ID));
		sb.append(",TFORMULAS_ID="+String.valueOf(TFORMULAS_ID));
		sb.append(",PROCESOSASISTENCIALES_ID="+String.valueOf(PROCESOSASISTENCIALES_ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",ESPECIALIDADES_ID="+String.valueOf(ESPECIALIDADES_ID));
		sb.append(",SERVICIOS_ID="+String.valueOf(SERVICIOS_ID));
		sb.append(",TORIGEN_ID="+String.valueOf(TORIGEN_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",TFORMASFARMACEUTICAS_ID="+String.valueOf(TFORMASFARMACEUTICAS_ID));
		sb.append(",GENERICO_ID="+String.valueOf(GENERICO_ID));
		sb.append(",GENERICO_INSUMO_ID="+String.valueOf(GENERICO_INSUMO_ID));
		sb.append(",CIE10_ID="+String.valueOf(CIE10_ID));
		sb.append(",TDIAGNOSTICO="+TDIAGNOSTICO);
		sb.append(",CANTENTREGADA="+String.valueOf(CANTENTREGADA));
		sb.append(",FECHA_VALORACION="+String.valueOf(FECHA_VALORACION));
		sb.append(",DIAGNOSTICOS_ID="+String.valueOf(DIAGNOSTICOS_ID));
		sb.append(",FINALIDADCONSULTA="+FINALIDADCONSULTA);
		sb.append(",SERVICIO_NOMBRE="+SERVICIO_NOMBRE);
		sb.append(",SERVICIO_SIGLA="+SERVICIO_SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal FORMULA_ID;

				public BigDecimal getFORMULA_ID () {
					return this.FORMULA_ID;
				}

				public Boolean FORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean FORMULA_IDIsKey(){
				    return false;
				}
				public Integer FORMULA_IDLength(){
				    return 0;
				}
				public Integer FORMULA_IDPrecision(){
				    return null;
				}
				public String FORMULA_IDDefault(){
				
					return "";
				
				}
				public String FORMULA_IDComment(){
				
				    return "";
				
				}
				public String FORMULA_IDPattern(){
				
					return "";
				
				}
				public String FORMULA_IDOriginalDbColumnName(){
				
					return "FORMULA_ID";
				
				}

				
			    public String FORMULA;

				public String getFORMULA () {
					return this.FORMULA;
				}

				public Boolean FORMULAIsNullable(){
				    return false;
				}
				public Boolean FORMULAIsKey(){
				    return false;
				}
				public Integer FORMULALength(){
				    return 50;
				}
				public Integer FORMULAPrecision(){
				    return 0;
				}
				public String FORMULADefault(){
				
					return null;
				
				}
				public String FORMULAComment(){
				
				    return "";
				
				}
				public String FORMULAPattern(){
				
					return "";
				
				}
				public String FORMULAOriginalDbColumnName(){
				
					return "FORMULA";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHA_FORMULACION;

				public java.util.Date getFECHA_FORMULACION () {
					return this.FECHA_FORMULACION;
				}

				public Boolean FECHA_FORMULACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_FORMULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FORMULACIONLength(){
				    return 0;
				}
				public Integer FECHA_FORMULACIONPrecision(){
				    return 0;
				}
				public String FECHA_FORMULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FORMULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_FORMULACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_FORMULACIONOriginalDbColumnName(){
				
					return "FECHA_FORMULACION";
				
				}

				
			    public String POSOLOGIA;

				public String getPOSOLOGIA () {
					return this.POSOLOGIA;
				}

				public Boolean POSOLOGIAIsNullable(){
				    return true;
				}
				public Boolean POSOLOGIAIsKey(){
				    return false;
				}
				public Integer POSOLOGIALength(){
				    return 200;
				}
				public Integer POSOLOGIAPrecision(){
				    return 0;
				}
				public String POSOLOGIADefault(){
				
					return null;
				
				}
				public String POSOLOGIAComment(){
				
				    return "";
				
				}
				public String POSOLOGIAPattern(){
				
					return "";
				
				}
				public String POSOLOGIAOriginalDbColumnName(){
				
					return "POSOLOGIA";
				
				}

				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}

				public Boolean FRECUENCIAIsNullable(){
				    return true;
				}
				public Boolean FRECUENCIAIsKey(){
				    return false;
				}
				public Integer FRECUENCIALength(){
				    return 53;
				}
				public Integer FRECUENCIAPrecision(){
				    return 0;
				}
				public String FRECUENCIADefault(){
				
					return null;
				
				}
				public String FRECUENCIAComment(){
				
				    return "";
				
				}
				public String FRECUENCIAPattern(){
				
					return "";
				
				}
				public String FRECUENCIAOriginalDbColumnName(){
				
					return "FRECUENCIA";
				
				}

				
			    public BigDecimal CANTIDAD_SOLICITADA;

				public BigDecimal getCANTIDAD_SOLICITADA () {
					return this.CANTIDAD_SOLICITADA;
				}

				public Boolean CANTIDAD_SOLICITADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_SOLICITADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_SOLICITADALength(){
				    return 0;
				}
				public Integer CANTIDAD_SOLICITADAPrecision(){
				    return null;
				}
				public String CANTIDAD_SOLICITADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_SOLICITADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAOriginalDbColumnName(){
				
					return "CANTIDAD_SOLICITADA";
				
				}

				
			    public String ESTADO_FORMULA;

				public String getESTADO_FORMULA () {
					return this.ESTADO_FORMULA;
				}

				public Boolean ESTADO_FORMULAIsNullable(){
				    return false;
				}
				public Boolean ESTADO_FORMULAIsKey(){
				    return false;
				}
				public Integer ESTADO_FORMULALength(){
				    return 20;
				}
				public Integer ESTADO_FORMULAPrecision(){
				    return 0;
				}
				public String ESTADO_FORMULADefault(){
				
					return null;
				
				}
				public String ESTADO_FORMULAComment(){
				
				    return "";
				
				}
				public String ESTADO_FORMULAPattern(){
				
					return "";
				
				}
				public String ESTADO_FORMULAOriginalDbColumnName(){
				
					return "ESTADO_FORMULA";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return true;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public BigDecimal FORMEDINS_ID;

				public BigDecimal getFORMEDINS_ID () {
					return this.FORMEDINS_ID;
				}

				public Boolean FORMEDINS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMEDINS_IDIsKey(){
				    return false;
				}
				public Integer FORMEDINS_IDLength(){
				    return 0;
				}
				public Integer FORMEDINS_IDPrecision(){
				    return null;
				}
				public String FORMEDINS_IDDefault(){
				
					return "";
				
				}
				public String FORMEDINS_IDComment(){
				
				    return "";
				
				}
				public String FORMEDINS_IDPattern(){
				
					return "";
				
				}
				public String FORMEDINS_IDOriginalDbColumnName(){
				
					return "FORMEDINS_ID";
				
				}

				
			    public BigDecimal TFORMULAS_ID;

				public BigDecimal getTFORMULAS_ID () {
					return this.TFORMULAS_ID;
				}

				public Boolean TFORMULAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMULAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMULAS_IDLength(){
				    return 0;
				}
				public Integer TFORMULAS_IDPrecision(){
				    return null;
				}
				public String TFORMULAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMULAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMULAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMULAS_IDOriginalDbColumnName(){
				
					return "TFORMULAS_ID";
				
				}

				
			    public BigDecimal PROCESOSASISTENCIALES_ID;

				public BigDecimal getPROCESOSASISTENCIALES_ID () {
					return this.PROCESOSASISTENCIALES_ID;
				}

				public Boolean PROCESOSASISTENCIALES_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOSASISTENCIALES_IDIsKey(){
				    return false;
				}
				public Integer PROCESOSASISTENCIALES_IDLength(){
				    return 0;
				}
				public Integer PROCESOSASISTENCIALES_IDPrecision(){
				    return null;
				}
				public String PROCESOSASISTENCIALES_IDDefault(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDComment(){
				
				    return "";
				
				}
				public String PROCESOSASISTENCIALES_IDPattern(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDOriginalDbColumnName(){
				
					return "PROCESOSASISTENCIALES_ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return false;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return null;
				}
				public String UORG_IDDefault(){
				
					return "";
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal ESPECIALIDADES_ID;

				public BigDecimal getESPECIALIDADES_ID () {
					return this.ESPECIALIDADES_ID;
				}

				public Boolean ESPECIALIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDADES_IDIsKey(){
				    return false;
				}
				public Integer ESPECIALIDADES_IDLength(){
				    return 0;
				}
				public Integer ESPECIALIDADES_IDPrecision(){
				    return null;
				}
				public String ESPECIALIDADES_IDDefault(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDComment(){
				
				    return "";
				
				}
				public String ESPECIALIDADES_IDPattern(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDOriginalDbColumnName(){
				
					return "ESPECIALIDADES_ID";
				
				}

				
			    public BigDecimal SERVICIOS_ID;

				public BigDecimal getSERVICIOS_ID () {
					return this.SERVICIOS_ID;
				}

				public Boolean SERVICIOS_IDIsNullable(){
				    return true;
				}
				public Boolean SERVICIOS_IDIsKey(){
				    return false;
				}
				public Integer SERVICIOS_IDLength(){
				    return 0;
				}
				public Integer SERVICIOS_IDPrecision(){
				    return null;
				}
				public String SERVICIOS_IDDefault(){
				
					return "";
				
				}
				public String SERVICIOS_IDComment(){
				
				    return "";
				
				}
				public String SERVICIOS_IDPattern(){
				
					return "";
				
				}
				public String SERVICIOS_IDOriginalDbColumnName(){
				
					return "SERVICIOS_ID";
				
				}

				
			    public BigDecimal TORIGEN_ID;

				public BigDecimal getTORIGEN_ID () {
					return this.TORIGEN_ID;
				}

				public Boolean TORIGEN_IDIsNullable(){
				    return true;
				}
				public Boolean TORIGEN_IDIsKey(){
				    return false;
				}
				public Integer TORIGEN_IDLength(){
				    return 0;
				}
				public Integer TORIGEN_IDPrecision(){
				    return null;
				}
				public String TORIGEN_IDDefault(){
				
					return "";
				
				}
				public String TORIGEN_IDComment(){
				
				    return "";
				
				}
				public String TORIGEN_IDPattern(){
				
					return "";
				
				}
				public String TORIGEN_IDOriginalDbColumnName(){
				
					return "TORIGEN_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal TFORMASFARMACEUTICAS_ID;

				public BigDecimal getTFORMASFARMACEUTICAS_ID () {
					return this.TFORMASFARMACEUTICAS_ID;
				}

				public Boolean TFORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer TFORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String TFORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "TFORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal GENERICO_ID;

				public BigDecimal getGENERICO_ID () {
					return this.GENERICO_ID;
				}

				public Boolean GENERICO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_IDPrecision(){
				    return null;
				}
				public String GENERICO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_IDOriginalDbColumnName(){
				
					return "GENERICO_ID";
				
				}

				
			    public BigDecimal GENERICO_INSUMO_ID;

				public BigDecimal getGENERICO_INSUMO_ID () {
					return this.GENERICO_INSUMO_ID;
				}

				public Boolean GENERICO_INSUMO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_INSUMO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_INSUMO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_INSUMO_IDPrecision(){
				    return 0;
				}
				public String GENERICO_INSUMO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_INSUMO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDOriginalDbColumnName(){
				
					return "GENERICO_INSUMO_ID";
				
				}

				
			    public BigDecimal CIE10_ID;

				public BigDecimal getCIE10_ID () {
					return this.CIE10_ID;
				}

				public Boolean CIE10_IDIsNullable(){
				    return true;
				}
				public Boolean CIE10_IDIsKey(){
				    return false;
				}
				public Integer CIE10_IDLength(){
				    return 0;
				}
				public Integer CIE10_IDPrecision(){
				    return null;
				}
				public String CIE10_IDDefault(){
				
					return "";
				
				}
				public String CIE10_IDComment(){
				
				    return "";
				
				}
				public String CIE10_IDPattern(){
				
					return "";
				
				}
				public String CIE10_IDOriginalDbColumnName(){
				
					return "CIE10_ID";
				
				}

				
			    public String TDIAGNOSTICO;

				public String getTDIAGNOSTICO () {
					return this.TDIAGNOSTICO;
				}

				public Boolean TDIAGNOSTICOIsNullable(){
				    return true;
				}
				public Boolean TDIAGNOSTICOIsKey(){
				    return false;
				}
				public Integer TDIAGNOSTICOLength(){
				    return 50;
				}
				public Integer TDIAGNOSTICOPrecision(){
				    return 0;
				}
				public String TDIAGNOSTICODefault(){
				
					return null;
				
				}
				public String TDIAGNOSTICOComment(){
				
				    return "";
				
				}
				public String TDIAGNOSTICOPattern(){
				
					return "";
				
				}
				public String TDIAGNOSTICOOriginalDbColumnName(){
				
					return "TDIAGNOSTICO";
				
				}

				
			    public BigDecimal CANTENTREGADA;

				public BigDecimal getCANTENTREGADA () {
					return this.CANTENTREGADA;
				}

				public Boolean CANTENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTENTREGADALength(){
				    return 0;
				}
				public Integer CANTENTREGADAPrecision(){
				    return null;
				}
				public String CANTENTREGADADefault(){
				
					return "";
				
				}
				public String CANTENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTENTREGADAOriginalDbColumnName(){
				
					return "CANTENTREGADA";
				
				}

				
			    public java.util.Date FECHA_VALORACION;

				public java.util.Date getFECHA_VALORACION () {
					return this.FECHA_VALORACION;
				}

				public Boolean FECHA_VALORACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VALORACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VALORACIONLength(){
				    return 0;
				}
				public Integer FECHA_VALORACIONPrecision(){
				    return 0;
				}
				public String FECHA_VALORACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VALORACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VALORACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VALORACIONOriginalDbColumnName(){
				
					return "FECHA_VALORACION";
				
				}

				
			    public BigDecimal DIAGNOSTICOS_ID;

				public BigDecimal getDIAGNOSTICOS_ID () {
					return this.DIAGNOSTICOS_ID;
				}

				public Boolean DIAGNOSTICOS_IDIsNullable(){
				    return true;
				}
				public Boolean DIAGNOSTICOS_IDIsKey(){
				    return false;
				}
				public Integer DIAGNOSTICOS_IDLength(){
				    return 0;
				}
				public Integer DIAGNOSTICOS_IDPrecision(){
				    return null;
				}
				public String DIAGNOSTICOS_IDDefault(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDComment(){
				
				    return "";
				
				}
				public String DIAGNOSTICOS_IDPattern(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDOriginalDbColumnName(){
				
					return "DIAGNOSTICOS_ID";
				
				}

				
			    public String FINALIDADCONSULTA;

				public String getFINALIDADCONSULTA () {
					return this.FINALIDADCONSULTA;
				}

				public Boolean FINALIDADCONSULTAIsNullable(){
				    return true;
				}
				public Boolean FINALIDADCONSULTAIsKey(){
				    return false;
				}
				public Integer FINALIDADCONSULTALength(){
				    return 200;
				}
				public Integer FINALIDADCONSULTAPrecision(){
				    return 0;
				}
				public String FINALIDADCONSULTADefault(){
				
					return null;
				
				}
				public String FINALIDADCONSULTAComment(){
				
				    return "";
				
				}
				public String FINALIDADCONSULTAPattern(){
				
					return "";
				
				}
				public String FINALIDADCONSULTAOriginalDbColumnName(){
				
					return "FINALIDADCONSULTA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMULA_ID="+String.valueOf(FORMULA_ID));
		sb.append(",FORMULA="+FORMULA);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHA_FORMULACION="+String.valueOf(FECHA_FORMULACION));
		sb.append(",POSOLOGIA="+POSOLOGIA);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CANTIDAD_SOLICITADA="+String.valueOf(CANTIDAD_SOLICITADA));
		sb.append(",ESTADO_FORMULA="+ESTADO_FORMULA);
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FORMEDINS_ID="+String.valueOf(FORMEDINS_ID));
		sb.append(",TFORMULAS_ID="+String.valueOf(TFORMULAS_ID));
		sb.append(",PROCESOSASISTENCIALES_ID="+String.valueOf(PROCESOSASISTENCIALES_ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",ESPECIALIDADES_ID="+String.valueOf(ESPECIALIDADES_ID));
		sb.append(",SERVICIOS_ID="+String.valueOf(SERVICIOS_ID));
		sb.append(",TORIGEN_ID="+String.valueOf(TORIGEN_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",TFORMASFARMACEUTICAS_ID="+String.valueOf(TFORMASFARMACEUTICAS_ID));
		sb.append(",GENERICO_ID="+String.valueOf(GENERICO_ID));
		sb.append(",GENERICO_INSUMO_ID="+String.valueOf(GENERICO_INSUMO_ID));
		sb.append(",CIE10_ID="+String.valueOf(CIE10_ID));
		sb.append(",TDIAGNOSTICO="+TDIAGNOSTICO);
		sb.append(",CANTENTREGADA="+String.valueOf(CANTENTREGADA));
		sb.append(",FECHA_VALORACION="+String.valueOf(FECHA_VALORACION));
		sb.append(",DIAGNOSTICOS_ID="+String.valueOf(DIAGNOSTICOS_ID));
		sb.append(",FINALIDADCONSULTA="+FINALIDADCONSULTA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tOracleInput_38Struct implements routines.system.IPersistableRow<after_tOracleInput_38Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal FORMULA_ID;

				public BigDecimal getFORMULA_ID () {
					return this.FORMULA_ID;
				}

				public Boolean FORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean FORMULA_IDIsKey(){
				    return false;
				}
				public Integer FORMULA_IDLength(){
				    return 0;
				}
				public Integer FORMULA_IDPrecision(){
				    return null;
				}
				public String FORMULA_IDDefault(){
				
					return "";
				
				}
				public String FORMULA_IDComment(){
				
				    return "";
				
				}
				public String FORMULA_IDPattern(){
				
					return "";
				
				}
				public String FORMULA_IDOriginalDbColumnName(){
				
					return "FORMULA_ID";
				
				}

				
			    public String FORMULA;

				public String getFORMULA () {
					return this.FORMULA;
				}

				public Boolean FORMULAIsNullable(){
				    return false;
				}
				public Boolean FORMULAIsKey(){
				    return false;
				}
				public Integer FORMULALength(){
				    return 50;
				}
				public Integer FORMULAPrecision(){
				    return 0;
				}
				public String FORMULADefault(){
				
					return null;
				
				}
				public String FORMULAComment(){
				
				    return "";
				
				}
				public String FORMULAPattern(){
				
					return "";
				
				}
				public String FORMULAOriginalDbColumnName(){
				
					return "FORMULA";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHA_FORMULACION;

				public java.util.Date getFECHA_FORMULACION () {
					return this.FECHA_FORMULACION;
				}

				public Boolean FECHA_FORMULACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_FORMULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FORMULACIONLength(){
				    return 0;
				}
				public Integer FECHA_FORMULACIONPrecision(){
				    return 0;
				}
				public String FECHA_FORMULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FORMULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_FORMULACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_FORMULACIONOriginalDbColumnName(){
				
					return "FECHA_FORMULACION";
				
				}

				
			    public String POSOLOGIA;

				public String getPOSOLOGIA () {
					return this.POSOLOGIA;
				}

				public Boolean POSOLOGIAIsNullable(){
				    return true;
				}
				public Boolean POSOLOGIAIsKey(){
				    return false;
				}
				public Integer POSOLOGIALength(){
				    return 200;
				}
				public Integer POSOLOGIAPrecision(){
				    return 0;
				}
				public String POSOLOGIADefault(){
				
					return null;
				
				}
				public String POSOLOGIAComment(){
				
				    return "";
				
				}
				public String POSOLOGIAPattern(){
				
					return "";
				
				}
				public String POSOLOGIAOriginalDbColumnName(){
				
					return "POSOLOGIA";
				
				}

				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}

				public Boolean FRECUENCIAIsNullable(){
				    return true;
				}
				public Boolean FRECUENCIAIsKey(){
				    return false;
				}
				public Integer FRECUENCIALength(){
				    return 53;
				}
				public Integer FRECUENCIAPrecision(){
				    return 0;
				}
				public String FRECUENCIADefault(){
				
					return null;
				
				}
				public String FRECUENCIAComment(){
				
				    return "";
				
				}
				public String FRECUENCIAPattern(){
				
					return "";
				
				}
				public String FRECUENCIAOriginalDbColumnName(){
				
					return "FRECUENCIA";
				
				}

				
			    public BigDecimal CANTIDAD_SOLICITADA;

				public BigDecimal getCANTIDAD_SOLICITADA () {
					return this.CANTIDAD_SOLICITADA;
				}

				public Boolean CANTIDAD_SOLICITADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_SOLICITADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_SOLICITADALength(){
				    return 0;
				}
				public Integer CANTIDAD_SOLICITADAPrecision(){
				    return null;
				}
				public String CANTIDAD_SOLICITADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_SOLICITADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_SOLICITADAOriginalDbColumnName(){
				
					return "CANTIDAD_SOLICITADA";
				
				}

				
			    public String ESTADO_FORMULA;

				public String getESTADO_FORMULA () {
					return this.ESTADO_FORMULA;
				}

				public Boolean ESTADO_FORMULAIsNullable(){
				    return false;
				}
				public Boolean ESTADO_FORMULAIsKey(){
				    return false;
				}
				public Integer ESTADO_FORMULALength(){
				    return 20;
				}
				public Integer ESTADO_FORMULAPrecision(){
				    return 0;
				}
				public String ESTADO_FORMULADefault(){
				
					return null;
				
				}
				public String ESTADO_FORMULAComment(){
				
				    return "";
				
				}
				public String ESTADO_FORMULAPattern(){
				
					return "";
				
				}
				public String ESTADO_FORMULAOriginalDbColumnName(){
				
					return "ESTADO_FORMULA";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return false;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return true;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public BigDecimal FORMEDINS_ID;

				public BigDecimal getFORMEDINS_ID () {
					return this.FORMEDINS_ID;
				}

				public Boolean FORMEDINS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMEDINS_IDIsKey(){
				    return false;
				}
				public Integer FORMEDINS_IDLength(){
				    return 0;
				}
				public Integer FORMEDINS_IDPrecision(){
				    return null;
				}
				public String FORMEDINS_IDDefault(){
				
					return "";
				
				}
				public String FORMEDINS_IDComment(){
				
				    return "";
				
				}
				public String FORMEDINS_IDPattern(){
				
					return "";
				
				}
				public String FORMEDINS_IDOriginalDbColumnName(){
				
					return "FORMEDINS_ID";
				
				}

				
			    public BigDecimal TFORMULAS_ID;

				public BigDecimal getTFORMULAS_ID () {
					return this.TFORMULAS_ID;
				}

				public Boolean TFORMULAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMULAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMULAS_IDLength(){
				    return 0;
				}
				public Integer TFORMULAS_IDPrecision(){
				    return null;
				}
				public String TFORMULAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMULAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMULAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMULAS_IDOriginalDbColumnName(){
				
					return "TFORMULAS_ID";
				
				}

				
			    public BigDecimal PROCESOSASISTENCIALES_ID;

				public BigDecimal getPROCESOSASISTENCIALES_ID () {
					return this.PROCESOSASISTENCIALES_ID;
				}

				public Boolean PROCESOSASISTENCIALES_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOSASISTENCIALES_IDIsKey(){
				    return false;
				}
				public Integer PROCESOSASISTENCIALES_IDLength(){
				    return 0;
				}
				public Integer PROCESOSASISTENCIALES_IDPrecision(){
				    return null;
				}
				public String PROCESOSASISTENCIALES_IDDefault(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDComment(){
				
				    return "";
				
				}
				public String PROCESOSASISTENCIALES_IDPattern(){
				
					return "";
				
				}
				public String PROCESOSASISTENCIALES_IDOriginalDbColumnName(){
				
					return "PROCESOSASISTENCIALES_ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return false;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return null;
				}
				public String UORG_IDDefault(){
				
					return "";
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal ESPECIALIDADES_ID;

				public BigDecimal getESPECIALIDADES_ID () {
					return this.ESPECIALIDADES_ID;
				}

				public Boolean ESPECIALIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean ESPECIALIDADES_IDIsKey(){
				    return false;
				}
				public Integer ESPECIALIDADES_IDLength(){
				    return 0;
				}
				public Integer ESPECIALIDADES_IDPrecision(){
				    return null;
				}
				public String ESPECIALIDADES_IDDefault(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDComment(){
				
				    return "";
				
				}
				public String ESPECIALIDADES_IDPattern(){
				
					return "";
				
				}
				public String ESPECIALIDADES_IDOriginalDbColumnName(){
				
					return "ESPECIALIDADES_ID";
				
				}

				
			    public BigDecimal SERVICIOS_ID;

				public BigDecimal getSERVICIOS_ID () {
					return this.SERVICIOS_ID;
				}

				public Boolean SERVICIOS_IDIsNullable(){
				    return true;
				}
				public Boolean SERVICIOS_IDIsKey(){
				    return false;
				}
				public Integer SERVICIOS_IDLength(){
				    return 0;
				}
				public Integer SERVICIOS_IDPrecision(){
				    return null;
				}
				public String SERVICIOS_IDDefault(){
				
					return "";
				
				}
				public String SERVICIOS_IDComment(){
				
				    return "";
				
				}
				public String SERVICIOS_IDPattern(){
				
					return "";
				
				}
				public String SERVICIOS_IDOriginalDbColumnName(){
				
					return "SERVICIOS_ID";
				
				}

				
			    public BigDecimal TORIGEN_ID;

				public BigDecimal getTORIGEN_ID () {
					return this.TORIGEN_ID;
				}

				public Boolean TORIGEN_IDIsNullable(){
				    return true;
				}
				public Boolean TORIGEN_IDIsKey(){
				    return false;
				}
				public Integer TORIGEN_IDLength(){
				    return 0;
				}
				public Integer TORIGEN_IDPrecision(){
				    return null;
				}
				public String TORIGEN_IDDefault(){
				
					return "";
				
				}
				public String TORIGEN_IDComment(){
				
				    return "";
				
				}
				public String TORIGEN_IDPattern(){
				
					return "";
				
				}
				public String TORIGEN_IDOriginalDbColumnName(){
				
					return "TORIGEN_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal TFORMASFARMACEUTICAS_ID;

				public BigDecimal getTFORMASFARMACEUTICAS_ID () {
					return this.TFORMASFARMACEUTICAS_ID;
				}

				public Boolean TFORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean TFORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer TFORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String TFORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "TFORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal GENERICO_ID;

				public BigDecimal getGENERICO_ID () {
					return this.GENERICO_ID;
				}

				public Boolean GENERICO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_IDPrecision(){
				    return null;
				}
				public String GENERICO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_IDOriginalDbColumnName(){
				
					return "GENERICO_ID";
				
				}

				
			    public BigDecimal GENERICO_INSUMO_ID;

				public BigDecimal getGENERICO_INSUMO_ID () {
					return this.GENERICO_INSUMO_ID;
				}

				public Boolean GENERICO_INSUMO_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICO_INSUMO_IDIsKey(){
				    return false;
				}
				public Integer GENERICO_INSUMO_IDLength(){
				    return 0;
				}
				public Integer GENERICO_INSUMO_IDPrecision(){
				    return 0;
				}
				public String GENERICO_INSUMO_IDDefault(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDComment(){
				
				    return "";
				
				}
				public String GENERICO_INSUMO_IDPattern(){
				
					return "";
				
				}
				public String GENERICO_INSUMO_IDOriginalDbColumnName(){
				
					return "GENERICO_INSUMO_ID";
				
				}

				
			    public BigDecimal CIE10_ID;

				public BigDecimal getCIE10_ID () {
					return this.CIE10_ID;
				}

				public Boolean CIE10_IDIsNullable(){
				    return true;
				}
				public Boolean CIE10_IDIsKey(){
				    return false;
				}
				public Integer CIE10_IDLength(){
				    return 0;
				}
				public Integer CIE10_IDPrecision(){
				    return null;
				}
				public String CIE10_IDDefault(){
				
					return "";
				
				}
				public String CIE10_IDComment(){
				
				    return "";
				
				}
				public String CIE10_IDPattern(){
				
					return "";
				
				}
				public String CIE10_IDOriginalDbColumnName(){
				
					return "CIE10_ID";
				
				}

				
			    public String TDIAGNOSTICO;

				public String getTDIAGNOSTICO () {
					return this.TDIAGNOSTICO;
				}

				public Boolean TDIAGNOSTICOIsNullable(){
				    return true;
				}
				public Boolean TDIAGNOSTICOIsKey(){
				    return false;
				}
				public Integer TDIAGNOSTICOLength(){
				    return 50;
				}
				public Integer TDIAGNOSTICOPrecision(){
				    return 0;
				}
				public String TDIAGNOSTICODefault(){
				
					return null;
				
				}
				public String TDIAGNOSTICOComment(){
				
				    return "";
				
				}
				public String TDIAGNOSTICOPattern(){
				
					return "";
				
				}
				public String TDIAGNOSTICOOriginalDbColumnName(){
				
					return "TDIAGNOSTICO";
				
				}

				
			    public BigDecimal CANTENTREGADA;

				public BigDecimal getCANTENTREGADA () {
					return this.CANTENTREGADA;
				}

				public Boolean CANTENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTENTREGADALength(){
				    return 0;
				}
				public Integer CANTENTREGADAPrecision(){
				    return null;
				}
				public String CANTENTREGADADefault(){
				
					return "";
				
				}
				public String CANTENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTENTREGADAOriginalDbColumnName(){
				
					return "CANTENTREGADA";
				
				}

				
			    public java.util.Date FECHA_VALORACION;

				public java.util.Date getFECHA_VALORACION () {
					return this.FECHA_VALORACION;
				}

				public Boolean FECHA_VALORACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VALORACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VALORACIONLength(){
				    return 0;
				}
				public Integer FECHA_VALORACIONPrecision(){
				    return 0;
				}
				public String FECHA_VALORACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VALORACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VALORACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VALORACIONOriginalDbColumnName(){
				
					return "FECHA_VALORACION";
				
				}

				
			    public BigDecimal DIAGNOSTICOS_ID;

				public BigDecimal getDIAGNOSTICOS_ID () {
					return this.DIAGNOSTICOS_ID;
				}

				public Boolean DIAGNOSTICOS_IDIsNullable(){
				    return true;
				}
				public Boolean DIAGNOSTICOS_IDIsKey(){
				    return false;
				}
				public Integer DIAGNOSTICOS_IDLength(){
				    return 0;
				}
				public Integer DIAGNOSTICOS_IDPrecision(){
				    return null;
				}
				public String DIAGNOSTICOS_IDDefault(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDComment(){
				
				    return "";
				
				}
				public String DIAGNOSTICOS_IDPattern(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDOriginalDbColumnName(){
				
					return "DIAGNOSTICOS_ID";
				
				}

				
			    public String FINALIDADCONSULTA;

				public String getFINALIDADCONSULTA () {
					return this.FINALIDADCONSULTA;
				}

				public Boolean FINALIDADCONSULTAIsNullable(){
				    return true;
				}
				public Boolean FINALIDADCONSULTAIsKey(){
				    return false;
				}
				public Integer FINALIDADCONSULTALength(){
				    return 200;
				}
				public Integer FINALIDADCONSULTAPrecision(){
				    return 0;
				}
				public String FINALIDADCONSULTADefault(){
				
					return null;
				
				}
				public String FINALIDADCONSULTAComment(){
				
				    return "";
				
				}
				public String FINALIDADCONSULTAPattern(){
				
					return "";
				
				}
				public String FINALIDADCONSULTAOriginalDbColumnName(){
				
					return "FINALIDADCONSULTA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.DFORMULA_ID == null) ? 0 : this.DFORMULA_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tOracleInput_38Struct other = (after_tOracleInput_38Struct) obj;
		
						if (this.DFORMULA_ID == null) {
							if (other.DFORMULA_ID != null)
								return false;
						
						} else if (!this.DFORMULA_ID.equals(other.DFORMULA_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tOracleInput_38Struct other) {

		other.FORMULA_ID = this.FORMULA_ID;
	            other.FORMULA = this.FORMULA;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            other.FECHA_FORMULACION = this.FECHA_FORMULACION;
	            other.POSOLOGIA = this.POSOLOGIA;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CANTIDAD_SOLICITADA = this.CANTIDAD_SOLICITADA;
	            other.ESTADO_FORMULA = this.ESTADO_FORMULA;
	            other.DFORMULA_ID = this.DFORMULA_ID;
	            other.FORMEDINS_ID = this.FORMEDINS_ID;
	            other.TFORMULAS_ID = this.TFORMULAS_ID;
	            other.PROCESOSASISTENCIALES_ID = this.PROCESOSASISTENCIALES_ID;
	            other.UORG_ID = this.UORG_ID;
	            other.USUARIOS_ID = this.USUARIOS_ID;
	            other.ESPECIALIDADES_ID = this.ESPECIALIDADES_ID;
	            other.SERVICIOS_ID = this.SERVICIOS_ID;
	            other.TORIGEN_ID = this.TORIGEN_ID;
	            other.PRODUCTOS_ID = this.PRODUCTOS_ID;
	            other.FORMASFARMACEUTICAS_ID = this.FORMASFARMACEUTICAS_ID;
	            other.TFORMASFARMACEUTICAS_ID = this.TFORMASFARMACEUTICAS_ID;
	            other.GENERICO_ID = this.GENERICO_ID;
	            other.GENERICO_INSUMO_ID = this.GENERICO_INSUMO_ID;
	            other.CIE10_ID = this.CIE10_ID;
	            other.TDIAGNOSTICO = this.TDIAGNOSTICO;
	            other.CANTENTREGADA = this.CANTENTREGADA;
	            other.FECHA_VALORACION = this.FECHA_VALORACION;
	            other.DIAGNOSTICOS_ID = this.DIAGNOSTICOS_ID;
	            other.FINALIDADCONSULTA = this.FINALIDADCONSULTA;
	            
	}

	public void copyKeysDataTo(after_tOracleInput_38Struct other) {

		other.DFORMULA_ID = this.DFORMULA_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FORMULA = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_FORMULACION = readDate(dis);
					
					this.POSOLOGIA = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
						this.CANTIDAD_SOLICITADA = (BigDecimal) dis.readObject();
					
					this.ESTADO_FORMULA = readString(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
						this.FORMEDINS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMULAS_ID = (BigDecimal) dis.readObject();
					
						this.PROCESOSASISTENCIALES_ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.ESPECIALIDADES_ID = (BigDecimal) dis.readObject();
					
						this.SERVICIOS_ID = (BigDecimal) dis.readObject();
					
						this.TORIGEN_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_ID = (BigDecimal) dis.readObject();
					
						this.GENERICO_INSUMO_ID = (BigDecimal) dis.readObject();
					
						this.CIE10_ID = (BigDecimal) dis.readObject();
					
					this.TDIAGNOSTICO = readString(dis);
					
						this.CANTENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_VALORACION = readDate(dis);
					
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
					this.FINALIDADCONSULTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMULA_ID);
					
					// String
				
						writeString(this.FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_FORMULACION,dos);
					
					// String
				
						writeString(this.POSOLOGIA,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_SOLICITADA);
					
					// String
				
						writeString(this.ESTADO_FORMULA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMEDINS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMULAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PROCESOSASISTENCIALES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESPECIALIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SERVICIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TORIGEN_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICO_INSUMO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CIE10_ID);
					
					// String
				
						writeString(this.TDIAGNOSTICO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_VALORACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAGNOSTICOS_ID);
					
					// String
				
						writeString(this.FINALIDADCONSULTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMULA_ID="+String.valueOf(FORMULA_ID));
		sb.append(",FORMULA="+FORMULA);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHA_FORMULACION="+String.valueOf(FECHA_FORMULACION));
		sb.append(",POSOLOGIA="+POSOLOGIA);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CANTIDAD_SOLICITADA="+String.valueOf(CANTIDAD_SOLICITADA));
		sb.append(",ESTADO_FORMULA="+ESTADO_FORMULA);
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FORMEDINS_ID="+String.valueOf(FORMEDINS_ID));
		sb.append(",TFORMULAS_ID="+String.valueOf(TFORMULAS_ID));
		sb.append(",PROCESOSASISTENCIALES_ID="+String.valueOf(PROCESOSASISTENCIALES_ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",ESPECIALIDADES_ID="+String.valueOf(ESPECIALIDADES_ID));
		sb.append(",SERVICIOS_ID="+String.valueOf(SERVICIOS_ID));
		sb.append(",TORIGEN_ID="+String.valueOf(TORIGEN_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",TFORMASFARMACEUTICAS_ID="+String.valueOf(TFORMASFARMACEUTICAS_ID));
		sb.append(",GENERICO_ID="+String.valueOf(GENERICO_ID));
		sb.append(",GENERICO_INSUMO_ID="+String.valueOf(GENERICO_INSUMO_ID));
		sb.append(",CIE10_ID="+String.valueOf(CIE10_ID));
		sb.append(",TDIAGNOSTICO="+TDIAGNOSTICO);
		sb.append(",CANTENTREGADA="+String.valueOf(CANTENTREGADA));
		sb.append(",FECHA_VALORACION="+String.valueOf(FECHA_VALORACION));
		sb.append(",DIAGNOSTICOS_ID="+String.valueOf(DIAGNOSTICOS_ID));
		sb.append(",FINALIDADCONSULTA="+FINALIDADCONSULTA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tOracleInput_38Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.DFORMULA_ID, other.DFORMULA_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_38Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_38_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_50Process(globalMap);
		tOracleInput_44Process(globalMap);
		tOracleInput_26Process(globalMap);
		tOracleInput_51Process(globalMap);
		tOracleInput_29Process(globalMap);
		tOracleInput_28Process(globalMap);
		tOracleInput_52Process(globalMap);
		tOracleInput_1Process(globalMap);
		tOracleInput_3Process(globalMap);

		row10Struct row10 = new row10Struct();
out2Struct out2 = new out2Struct();
out5Struct out5 = new out5Struct();
out6Struct out6 = new out6Struct();
out7Struct out7 = new out7Struct();
out8Struct out8 = new out8Struct();
out9Struct out9 = new out9Struct();
out10Struct out10 = new out10Struct();
out11Struct out11 = new out11Struct();
out1Struct out1 = new out1Struct();













	
	/**
	 * [tOracleOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_9", false);
		start_Hash.put("tOracleOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out1");
					}
				
		int tos_count_tOracleOutput_9 = 0;
		






        int updateKeyCount_tOracleOutput_9 = 1;
        if(updateKeyCount_tOracleOutput_9 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_9 == 37 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_9 = 0;
    int nb_line_update_tOracleOutput_9 = 0;
    int nb_line_inserted_tOracleOutput_9 = 0;
    int nb_line_deleted_tOracleOutput_9 = 0;
    int nb_line_rejected_tOracleOutput_9 = 0;

    int tmp_batchUpdateCount_tOracleOutput_9 = 0;

    int deletedCount_tOracleOutput_9=0;
    int updatedCount_tOracleOutput_9=0;
    int insertedCount_tOracleOutput_9=0;
    int rowsToCommitCount_tOracleOutput_9=0;
    int rejectedCount_tOracleOutput_9=0;

    boolean whetherReject_tOracleOutput_9 = false;

    java.sql.Connection conn_tOracleOutput_9 = null;

    //optional table
    String dbschema_tOracleOutput_9 = null;
    String tableName_tOracleOutput_9 = null;
                    String driverClass_tOracleOutput_9 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_9);
                String url_tOracleOutput_9 = null;
                    url_tOracleOutput_9 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_9 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_9 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_9 = decryptedPassword_tOracleOutput_9;
                dbschema_tOracleOutput_9 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_9 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_9.put("user",dbUser_tOracleOutput_9);
                    atnParamsPrope_tOracleOutput_9.put("password",dbPwd_tOracleOutput_9);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_9.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_9 = java.sql.DriverManager.getConnection(url_tOracleOutput_9, atnParamsPrope_tOracleOutput_9);
        resourceMap.put("conn_tOracleOutput_9", conn_tOracleOutput_9);
            conn_tOracleOutput_9.setAutoCommit(false);
            int commitEvery_tOracleOutput_9 = 1000;
            int commitCounter_tOracleOutput_9 = 0;
        int count_tOracleOutput_9=0;

        if(dbschema_tOracleOutput_9 == null || dbschema_tOracleOutput_9.trim().length() == 0) {
            tableName_tOracleOutput_9 = ("BMED_FORMULACION");
        } else {
            tableName_tOracleOutput_9 = dbschema_tOracleOutput_9 + "." + ("BMED_FORMULACION");
        }
                java.sql.PreparedStatement pstmt_tOracleOutput_9 = conn_tOracleOutput_9.prepareStatement("SELECT COUNT(1) FROM " + tableName_tOracleOutput_9 + " WHERE DFORMULA_ID = ?");
                resourceMap.put("pstmt_tOracleOutput_9", pstmt_tOracleOutput_9);
                String insert_tOracleOutput_9 = "INSERT INTO " + tableName_tOracleOutput_9 + " (FORMULA,PERSONAS_ID,FECHA_FORMULACION,POSOLOGIA,FRECUENCIA,CANTIDAD_SOLICITADA,ESTADO_FORMULA,DFORMULA_ID,FORMEDINS_ID,TIPO_DISPENSACION,PROCESOSASISTENCIALES_ID,UORG_ID,USUARIOS_ID,ESPECIALIDAD_MEDICO,CODIGO_ESPECIALIDAD_MEDICO,AREA_ATENCION,SERVICIO_ATENCION,CAUSA_EXTERNA,PRODUCTOS_ID,FORMASFARMACEUTICAS_ID,GENERICO_ID,GENERICO_INSUMO_ID,CIE10_ID,CODIGO_SSMP,NIVEL_ATENCION,FORMA_FARMACEUTICA,NIVELES_USO,PRINCIPIO_ACTIVO,TIPO_DIAGNOSTICO,CANTENTREGADA,FECHA_VALORACION,FINALIDAD_CONSULTA,DIAG_RELACIONADO1,DIAG_RELACIONADO2,DIAG_RELACIONADO3,ESPECIALIDAD_MEDICO_ID,SERVICIO_ATENCION_ID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_9 = conn_tOracleOutput_9.prepareStatement(insert_tOracleOutput_9);
                resourceMap.put("pstmtInsert_tOracleOutput_9", pstmtInsert_tOracleOutput_9);
                String update_tOracleOutput_9 = "UPDATE " + tableName_tOracleOutput_9 + " SET FORMULA = ?,PERSONAS_ID = ?,FECHA_FORMULACION = ?,POSOLOGIA = ?,FRECUENCIA = ?,CANTIDAD_SOLICITADA = ?,ESTADO_FORMULA = ?,FORMEDINS_ID = ?,TIPO_DISPENSACION = ?,PROCESOSASISTENCIALES_ID = ?,UORG_ID = ?,USUARIOS_ID = ?,ESPECIALIDAD_MEDICO = ?,CODIGO_ESPECIALIDAD_MEDICO = ?,AREA_ATENCION = ?,SERVICIO_ATENCION = ?,CAUSA_EXTERNA = ?,PRODUCTOS_ID = ?,FORMASFARMACEUTICAS_ID = ?,GENERICO_ID = ?,GENERICO_INSUMO_ID = ?,CIE10_ID = ?,CODIGO_SSMP = ?,NIVEL_ATENCION = ?,FORMA_FARMACEUTICA = ?,NIVELES_USO = ?,PRINCIPIO_ACTIVO = ?,TIPO_DIAGNOSTICO = ?,CANTENTREGADA = ?,FECHA_VALORACION = ?,FINALIDAD_CONSULTA = ?,DIAG_RELACIONADO1 = ?,DIAG_RELACIONADO2 = ?,DIAG_RELACIONADO3 = ?,ESPECIALIDAD_MEDICO_ID = ?,SERVICIO_ATENCION_ID = ? WHERE DFORMULA_ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_9 = conn_tOracleOutput_9.prepareStatement(update_tOracleOutput_9);
                resourceMap.put("pstmtUpdate_tOracleOutput_9", pstmtUpdate_tOracleOutput_9);





 



/**
 * [tOracleOutput_9 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out11");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct> tHash_Lookup_row2 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct>) 
					globalMap.get( "tHash_Lookup_row2" ))
					;					
					
	

row2Struct row2HashKey = new row2Struct();
row2Struct row2Default = new row2Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
out1Struct out1_tmp = new out1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out10");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row1Struct> tHash_Lookup_row1 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row1Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row1Struct>) 
					globalMap.get( "tHash_Lookup_row1" ))
					;					
					
	

row1Struct row1HashKey = new row1Struct();
row1Struct row1Default = new row1Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
out11Struct out11_tmp = new out11Struct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out9");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct> tHash_Lookup_row17 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct>) 
					globalMap.get( "tHash_Lookup_row17" ))
					;					
					
	

row17Struct row17HashKey = new row17Struct();
row17Struct row17Default = new row17Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
out10Struct out10_tmp = new out10Struct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out8");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
					globalMap.get( "tHash_Lookup_row16" ))
					;					
					
	

row16Struct row16HashKey = new row16Struct();
row16Struct row16Default = new row16Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
out9Struct out9_tmp = new out9Struct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out7");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
					globalMap.get( "tHash_Lookup_row15" ))
					;					
					
	

row15Struct row15HashKey = new row15Struct();
row15Struct row15Default = new row15Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
out8Struct out8_tmp = new out8Struct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out6");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
					globalMap.get( "tHash_Lookup_row14" ))
					;					
					
	

row14Struct row14HashKey = new row14Struct();
row14Struct row14Default = new row14Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
out7Struct out7_tmp = new out7Struct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out5");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
					globalMap.get( "tHash_Lookup_row13" ))
					;					
					
	

row13Struct row13HashKey = new row13Struct();
row13Struct row13Default = new row13Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
out6Struct out6_tmp = new out6Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out2");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct> tHash_Lookup_row12 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct>) 
					globalMap.get( "tHash_Lookup_row12" ))
					;					
					
	

row12Struct row12HashKey = new row12Struct();
row12Struct row12Default = new row12Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
out5Struct out5_tmp = new out5Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
					globalMap.get( "tHash_Lookup_row11" ))
					;					
					
	

row11Struct row11HashKey = new row11Struct();
row11Struct row11Default = new row11Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
out2Struct out2_tmp = new out2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_38 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_38", false);
		start_Hash.put("tOracleInput_38", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_38";
	
	
		int tos_count_tOracleInput_38 = 0;
		
	


	
		    int nb_line_tOracleInput_38 = 0;
		    java.sql.Connection conn_tOracleInput_38 = null;
				conn_tOracleInput_38 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_38 = false;
				boolean isConnectionWrapped_tOracleInput_38 = !(conn_tOracleInput_38 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_38.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_38 = null;
                if (isConnectionWrapped_tOracleInput_38) {
					unwrappedOraConn_tOracleInput_38 = conn_tOracleInput_38.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_38 != null) {
                        isTimeZoneNull_tOracleInput_38 = (unwrappedOraConn_tOracleInput_38.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_38 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_38).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_38) {
					java.sql.Statement stmtGetTZ_tOracleInput_38 = conn_tOracleInput_38.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_38 = stmtGetTZ_tOracleInput_38.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_38 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_38.next()) {
						sessionTimezone_tOracleInput_38 = rsGetTZ_tOracleInput_38.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_38 && unwrappedOraConn_tOracleInput_38 != null) {
                        unwrappedOraConn_tOracleInput_38.setSessionTimeZone(sessionTimezone_tOracleInput_38);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_38).setSessionTimeZone(sessionTimezone_tOracleInput_38);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_38 = conn_tOracleInput_38.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_38.setFetchSize(1000);


		    String dbquery_tOracleInput_38 = "SELECT \n  dformmedin.id AS FORMULA_ID ,\n  formmedin.consecutivo AS FORMULA ,\n  procasis.personas_id AS PERSONAS_ID,"
+"\n  formu.fecha AS FECHA_FORMULACION ,\n  dformmedin.POSOLOGIA AS POSOLOGIA ,\n  NVL('Cada '  || dformmedin.frecuencia  |"
+"| ' hora(s)', ' ') AS FRECUENCIA ,\n  dformmedin.cantidad AS CANTIDAD_SOLICITADA ,\n  formmedin.estado AS ESTADO_FORMULA"
+" ,\n  dformmedin.ID AS DFORMULA_ID ,\n  formmedin.ID AS FORMEDINS_ID ,\n  formu.tformulas_id AS TFORMULAS_ID,\n  formu.p"
+"rocesosasistenciales_id ,\n  procasis.uorg_id AS UORG_ID ,\n  GUS.PERSONAS_ID AS USUARIOS_ID ,\n  esptrata.especialidade"
+"s_id ,\n  servtrata.servicios_id ,\n  formu.torigen_id ,\n  dformmedin.PRODUCTOS_ID, \n  dformmedin.formasfarmaceuticas_"
+"id AS FORMASFARMACEUTICAS_ID ,\n  formasfar.tformasfarmaceuticas_id,\n  formasfar.genericos_id  AS GENERICO_ID ,\n  NVL("
+"formasfar.genericos_id, formasfar.insumos_id) AS GENERICO_INSUMO_ID,\n  diag.CIE10_ID,\n  diag.TDIAGNOSTICO,\n  DFORMMED"
+"IN.CANTENTREGADA,\n  procasis.FFINAL AS FECHA_VALORACION,\n  diag.ID AS DIAGNOSTICOS_ID,\n  FNA.NOMBRE AS FINALIDADCONSU"
+"LTA\n\nFROM HCL_FORMMEDICAS formu  \nINNER JOIN HCL_FORMMEDINSUMOS formmedin ON formu.id = formmedin.formmedicas_id \nIN"
+"NER JOIN  HCL_DFORMMEDINSUMOS dformmedin ON  formmedin.id = dformmedin.formmedinsumos_id \nINNER JOIN HCL_PROCESOSASISTE"
+"NCIALES procasis ON procasis.ID = formu.PROCESOSASISTENCIALES_ID \nLEFT JOIN HCL_DIAGNOSTICOS diag ON diag.PROCESOSASIST"
+"ENCIALES_ID = procasis.ID \nINNER JOIN MED_FORMASFARMACEUTICAS formasfar    on formasfar.id = dformmedin.formasfarmaceut"
+"icas_id\nLEFT JOIN ADM_ESPTRATANTES esptrata ON esptrata.ID = procasis.ESPTRATANTES_ID \nLEFT JOIN ADM_SERVTRATANTES ser"
+"vtrata ON servtrata.id = esptrata.servtratantes_id\nleft join GEN_USUARIOS GUS ON GUS.ID = PROCASIS.USUARIOS_ID\n\nLEFT "
+"JOIN HCL_VALORACIONES VAL ON VAL.PROCESOSASISTENCIALES_ID = procasis.ID\nLEFT JOIN GEN_FINALIDADCONSULTA FNA ON FNA.ID ="
+" VAL.FINALIDADCONSULTA_ID\n "+ context.COND_HCL_FORMMEDICAS;
		    

		    globalMap.put("tOracleInput_38_QUERY",dbquery_tOracleInput_38);

		    java.sql.ResultSet rs_tOracleInput_38 = null;

		    try {
		    	rs_tOracleInput_38 = stmt_tOracleInput_38.executeQuery(dbquery_tOracleInput_38);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_38 = rs_tOracleInput_38.getMetaData();
		    	int colQtyInRs_tOracleInput_38 = rsmd_tOracleInput_38.getColumnCount();

		    String tmpContent_tOracleInput_38 = null;
		    
		    
		    while (rs_tOracleInput_38.next()) {
		        nb_line_tOracleInput_38++;
		        
							if(colQtyInRs_tOracleInput_38 < 1) {
								row10.FORMULA_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(1) != null) {
						row10.FORMULA_ID = rs_tOracleInput_38.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 2) {
								row10.FORMULA = null;
							} else {
	                         		
        	row10.FORMULA = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_38 < 3) {
								row10.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(3) != null) {
						row10.PERSONAS_ID = rs_tOracleInput_38.getBigDecimal(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 4) {
								row10.FECHA_FORMULACION = null;
							} else {
										
			row10.FECHA_FORMULACION = routines.system.JDBCUtil.getDate(rs_tOracleInput_38, 4);
		                    }
							if(colQtyInRs_tOracleInput_38 < 5) {
								row10.POSOLOGIA = null;
							} else {
	                         		
        	row10.POSOLOGIA = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_38 < 6) {
								row10.FRECUENCIA = null;
							} else {
	                         		
        	row10.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_38 < 7) {
								row10.CANTIDAD_SOLICITADA = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(7) != null) {
						row10.CANTIDAD_SOLICITADA = rs_tOracleInput_38.getBigDecimal(7);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 8) {
								row10.ESTADO_FORMULA = null;
							} else {
	                         		
        	row10.ESTADO_FORMULA = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_38 < 9) {
								row10.DFORMULA_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(9) != null) {
						row10.DFORMULA_ID = rs_tOracleInput_38.getBigDecimal(9);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 10) {
								row10.FORMEDINS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(10) != null) {
						row10.FORMEDINS_ID = rs_tOracleInput_38.getBigDecimal(10);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 11) {
								row10.TFORMULAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(11) != null) {
						row10.TFORMULAS_ID = rs_tOracleInput_38.getBigDecimal(11);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 12) {
								row10.PROCESOSASISTENCIALES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(12) != null) {
						row10.PROCESOSASISTENCIALES_ID = rs_tOracleInput_38.getBigDecimal(12);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 13) {
								row10.UORG_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(13) != null) {
						row10.UORG_ID = rs_tOracleInput_38.getBigDecimal(13);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 14) {
								row10.USUARIOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(14) != null) {
						row10.USUARIOS_ID = rs_tOracleInput_38.getBigDecimal(14);
					} else {
				
						row10.USUARIOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 15) {
								row10.ESPECIALIDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(15) != null) {
						row10.ESPECIALIDADES_ID = rs_tOracleInput_38.getBigDecimal(15);
					} else {
				
						row10.ESPECIALIDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 16) {
								row10.SERVICIOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(16) != null) {
						row10.SERVICIOS_ID = rs_tOracleInput_38.getBigDecimal(16);
					} else {
				
						row10.SERVICIOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 17) {
								row10.TORIGEN_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(17) != null) {
						row10.TORIGEN_ID = rs_tOracleInput_38.getBigDecimal(17);
					} else {
				
						row10.TORIGEN_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 18) {
								row10.PRODUCTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(18) != null) {
						row10.PRODUCTOS_ID = rs_tOracleInput_38.getBigDecimal(18);
					} else {
				
						row10.PRODUCTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 19) {
								row10.FORMASFARMACEUTICAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(19) != null) {
						row10.FORMASFARMACEUTICAS_ID = rs_tOracleInput_38.getBigDecimal(19);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 20) {
								row10.TFORMASFARMACEUTICAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(20) != null) {
						row10.TFORMASFARMACEUTICAS_ID = rs_tOracleInput_38.getBigDecimal(20);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 21) {
								row10.GENERICO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(21) != null) {
						row10.GENERICO_ID = rs_tOracleInput_38.getBigDecimal(21);
					} else {
				
						row10.GENERICO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 22) {
								row10.GENERICO_INSUMO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(22) != null) {
						row10.GENERICO_INSUMO_ID = rs_tOracleInput_38.getBigDecimal(22);
					} else {
				
						row10.GENERICO_INSUMO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 23) {
								row10.CIE10_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(23) != null) {
						row10.CIE10_ID = rs_tOracleInput_38.getBigDecimal(23);
					} else {
				
						row10.CIE10_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 24) {
								row10.TDIAGNOSTICO = null;
							} else {
	                         		
        	row10.TDIAGNOSTICO = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_38 < 25) {
								row10.CANTENTREGADA = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(25) != null) {
						row10.CANTENTREGADA = rs_tOracleInput_38.getBigDecimal(25);
					} else {
				
						row10.CANTENTREGADA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 26) {
								row10.FECHA_VALORACION = null;
							} else {
										
			row10.FECHA_VALORACION = routines.system.JDBCUtil.getDate(rs_tOracleInput_38, 26);
		                    }
							if(colQtyInRs_tOracleInput_38 < 27) {
								row10.DIAGNOSTICOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(27) != null) {
						row10.DIAGNOSTICOS_ID = rs_tOracleInput_38.getBigDecimal(27);
					} else {
				
						row10.DIAGNOSTICOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 28) {
								row10.FINALIDADCONSULTA = null;
							} else {
	                         		
        	row10.FINALIDADCONSULTA = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 28, false);
		                    }
					




 



/**
 * [tOracleInput_38 begin ] stop
 */
	
	/**
	 * [tOracleInput_38 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 


	tos_count_tOracleInput_38++;

/**
 * [tOracleInput_38 main ] stop
 */
	
	/**
	 * [tOracleInput_38 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
						row11Struct row11 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row11" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow11 = false;
       		  	    	
       		  	    	
 							row11Struct row11ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row11HashKey.ID = row10.SERVICIOS_ID ;
                        		    		

								
		                        	row11HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row11.lookup( row11HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row11Struct fromLookup_row11 = null;
							row11 = row11Default;
										 
							
								 
							
							
								if (tHash_Lookup_row11 !=null && tHash_Lookup_row11.hasNext()) { // G 099
								
							
								
								fromLookup_row11 = tHash_Lookup_row11.next();

							
							
								} // G 099
							
							

							if(fromLookup_row11 != null) {
								row11 = fromLookup_row11;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

out2 = null;


// # Output table : 'out2'
out2_tmp.FORMULA_ID = row10.FORMULA_ID ;
out2_tmp.FORMULA = row10.FORMULA ;
out2_tmp.PERSONAS_ID = row10.PERSONAS_ID ;
out2_tmp.FECHA_FORMULACION = row10.FECHA_FORMULACION ;
out2_tmp.POSOLOGIA = row10.POSOLOGIA ;
out2_tmp.FRECUENCIA = row10.FRECUENCIA ;
out2_tmp.CANTIDAD_SOLICITADA = row10.CANTIDAD_SOLICITADA ;
out2_tmp.ESTADO_FORMULA = row10.ESTADO_FORMULA ;
out2_tmp.DFORMULA_ID = row10.DFORMULA_ID ;
out2_tmp.FORMEDINS_ID = row10.FORMEDINS_ID ;
out2_tmp.TFORMULAS_ID = row10.TFORMULAS_ID ;
out2_tmp.PROCESOSASISTENCIALES_ID = row10.PROCESOSASISTENCIALES_ID ;
out2_tmp.UORG_ID = row10.UORG_ID ;
out2_tmp.USUARIOS_ID = row10.USUARIOS_ID ;
out2_tmp.ESPECIALIDADES_ID = row10.ESPECIALIDADES_ID ;
out2_tmp.SERVICIOS_ID = row10.SERVICIOS_ID ;
out2_tmp.TORIGEN_ID = row10.TORIGEN_ID ;
out2_tmp.PRODUCTOS_ID = row10.PRODUCTOS_ID ;
out2_tmp.FORMASFARMACEUTICAS_ID = row10.FORMASFARMACEUTICAS_ID ;
out2_tmp.TFORMASFARMACEUTICAS_ID = row10.TFORMASFARMACEUTICAS_ID ;
out2_tmp.GENERICO_ID = row10.GENERICO_ID ;
out2_tmp.GENERICO_INSUMO_ID = row10.GENERICO_INSUMO_ID ;
out2_tmp.CIE10_ID = row10.CIE10_ID ;
out2_tmp.TDIAGNOSTICO = row10.TDIAGNOSTICO ;
out2_tmp.CANTENTREGADA = row10.CANTENTREGADA ;
out2_tmp.FECHA_VALORACION = row10.FECHA_VALORACION ;
out2_tmp.DIAGNOSTICOS_ID = row10.DIAGNOSTICOS_ID ;
out2_tmp.FINALIDADCONSULTA = row10.FINALIDADCONSULTA ;
out2_tmp.SERVICIO_NOMBRE = row11.NOMBRE ;
out2_tmp.SERVICIO_SIGLA = row11.SIGLA ;
out2 = out2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "out2"
if(out2 != null) { 



	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
						row12Struct row12 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row12" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow12 = false;
       		  	    	
       		  	    	
 							row12Struct row12ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row12HashKey.ID = out2.ESPECIALIDADES_ID ;
                        		    		

								
		                        	row12HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row12.lookup( row12HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row12Struct fromLookup_row12 = null;
							row12 = row12Default;
										 
							
								 
							
							
								if (tHash_Lookup_row12 !=null && tHash_Lookup_row12.hasNext()) { // G 099
								
							
								
								fromLookup_row12 = tHash_Lookup_row12.next();

							
							
								} // G 099
							
							

							if(fromLookup_row12 != null) {
								row12 = fromLookup_row12;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

out5 = null;


// # Output table : 'out5'
out5_tmp.FORMULA_ID = out2.FORMULA_ID ;
out5_tmp.FORMULA = out2.FORMULA ;
out5_tmp.PERSONAS_ID = out2.PERSONAS_ID ;
out5_tmp.FECHA_FORMULACION = out2.FECHA_FORMULACION ;
out5_tmp.POSOLOGIA = out2.POSOLOGIA ;
out5_tmp.FRECUENCIA = out2.FRECUENCIA ;
out5_tmp.CANTIDAD_SOLICITADA = out2.CANTIDAD_SOLICITADA ;
out5_tmp.ESTADO_FORMULA = out2.ESTADO_FORMULA ;
out5_tmp.DFORMULA_ID = out2.DFORMULA_ID ;
out5_tmp.FORMEDINS_ID = out2.FORMEDINS_ID ;
out5_tmp.TFORMULAS_ID = out2.TFORMULAS_ID ;
out5_tmp.PROCESOSASISTENCIALES_ID = out2.PROCESOSASISTENCIALES_ID ;
out5_tmp.UORG_ID = out2.UORG_ID ;
out5_tmp.USUARIOS_ID = out2.USUARIOS_ID ;
out5_tmp.ESPECIALIDADES_ID = out2.ESPECIALIDADES_ID ;
out5_tmp.SERVICIOS_ID = out2.SERVICIOS_ID ;
out5_tmp.TORIGEN_ID = out2.TORIGEN_ID ;
out5_tmp.PRODUCTOS_ID = out2.PRODUCTOS_ID ;
out5_tmp.FORMASFARMACEUTICAS_ID = out2.FORMASFARMACEUTICAS_ID ;
out5_tmp.TFORMASFARMACEUTICAS_ID = out2.TFORMASFARMACEUTICAS_ID ;
out5_tmp.GENERICO_ID = out2.GENERICO_ID ;
out5_tmp.GENERICO_INSUMO_ID = out2.GENERICO_INSUMO_ID ;
out5_tmp.CIE10_ID = out2.CIE10_ID ;
out5_tmp.TDIAGNOSTICO = out2.TDIAGNOSTICO ;
out5_tmp.CANTENTREGADA = out2.CANTENTREGADA ;
out5_tmp.FECHA_VALORACION = out2.FECHA_VALORACION ;
out5_tmp.DIAGNOSTICOS_ID = out2.DIAGNOSTICOS_ID ;
out5_tmp.FINALIDADCONSULTA = out2.FINALIDADCONSULTA ;
out5_tmp.SERVICIO_NOMBRE = out2.SERVICIO_NOMBRE ;
out5_tmp.SERVICIO_SIGLA = out2.SERVICIO_SIGLA ;
out5_tmp.ESPECIALIDAD_MEDICO = row12.NOMBRE ;
out5_tmp.CODIGO_ESPECIALIDAD_MEDICO = row12.SIGLA ;
out5 = out5_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "out5"
if(out5 != null) { 



	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out5"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
						row13Struct row13 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row13HashKey.ID = out5.TFORMULAS_ID ;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								 
							
							
								if (tHash_Lookup_row13 !=null && tHash_Lookup_row13.hasNext()) { // G 099
								
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							
							
								} // G 099
							
							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

out6 = null;


// # Output table : 'out6'
out6_tmp.FORMULA_ID = out5.FORMULA_ID ;
out6_tmp.FORMULA = out5.FORMULA ;
out6_tmp.PERSONAS_ID = out5.PERSONAS_ID ;
out6_tmp.FECHA_FORMULACION = out5.FECHA_FORMULACION ;
out6_tmp.POSOLOGIA = out5.POSOLOGIA ;
out6_tmp.FRECUENCIA = out5.FRECUENCIA ;
out6_tmp.CANTIDAD_SOLICITADA = out5.CANTIDAD_SOLICITADA ;
out6_tmp.ESTADO_FORMULA = out5.ESTADO_FORMULA ;
out6_tmp.DFORMULA_ID = out5.DFORMULA_ID ;
out6_tmp.FORMEDINS_ID = out5.FORMEDINS_ID ;
out6_tmp.TFORMULAS_ID = out5.TFORMULAS_ID ;
out6_tmp.PROCESOSASISTENCIALES_ID = out5.PROCESOSASISTENCIALES_ID ;
out6_tmp.UORG_ID = out5.UORG_ID ;
out6_tmp.USUARIOS_ID = out5.USUARIOS_ID ;
out6_tmp.ESPECIALIDADES_ID = out5.ESPECIALIDADES_ID ;
out6_tmp.SERVICIOS_ID = out5.SERVICIOS_ID ;
out6_tmp.TORIGEN_ID = out5.TORIGEN_ID ;
out6_tmp.PRODUCTOS_ID = out5.PRODUCTOS_ID ;
out6_tmp.FORMASFARMACEUTICAS_ID = out5.FORMASFARMACEUTICAS_ID ;
out6_tmp.TFORMASFARMACEUTICAS_ID = out5.TFORMASFARMACEUTICAS_ID ;
out6_tmp.GENERICO_ID = out5.GENERICO_ID ;
out6_tmp.GENERICO_INSUMO_ID = out5.GENERICO_INSUMO_ID ;
out6_tmp.CIE10_ID = out5.CIE10_ID ;
out6_tmp.TDIAGNOSTICO = out5.TDIAGNOSTICO ;
out6_tmp.CANTENTREGADA = out5.CANTENTREGADA ;
out6_tmp.FECHA_VALORACION = out5.FECHA_VALORACION ;
out6_tmp.DIAGNOSTICOS_ID = out5.DIAGNOSTICOS_ID ;
out6_tmp.FINALIDADCONSULTA = out5.FINALIDADCONSULTA ;
out6_tmp.SERVICIO_NOMBRE = out5.SERVICIO_NOMBRE ;
out6_tmp.SERVICIO_SIGLA = out5.SERVICIO_SIGLA ;
out6_tmp.ESPECIALIDAD_MEDICO = out5.ESPECIALIDAD_MEDICO ;
out6_tmp.CODIGO_ESPECIALIDAD_MEDICO = out5.CODIGO_ESPECIALIDAD_MEDICO ;
out6_tmp.TIPO_DISPENSACION = row13.NOMBRE ;
out6 = out6_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "out6"
if(out6 != null) { 



	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
						row14Struct row14 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row14" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow14 = false;
       		  	    	
       		  	    	
 							row14Struct row14ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row14HashKey.ID = out6.TORIGEN_ID ;
                        		    		

								
		                        	row14HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row14.lookup( row14HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row14Struct fromLookup_row14 = null;
							row14 = row14Default;
										 
							
								 
							
							
								if (tHash_Lookup_row14 !=null && tHash_Lookup_row14.hasNext()) { // G 099
								
							
								
								fromLookup_row14 = tHash_Lookup_row14.next();

							
							
								} // G 099
							
							

							if(fromLookup_row14 != null) {
								row14 = fromLookup_row14;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

out7 = null;


// # Output table : 'out7'
out7_tmp.FORMULA_ID = out6.FORMULA_ID ;
out7_tmp.FORMULA = out6.FORMULA ;
out7_tmp.PERSONAS_ID = out6.PERSONAS_ID ;
out7_tmp.FECHA_FORMULACION = out6.FECHA_FORMULACION ;
out7_tmp.POSOLOGIA = out6.POSOLOGIA ;
out7_tmp.FRECUENCIA = out6.FRECUENCIA ;
out7_tmp.CANTIDAD_SOLICITADA = out6.CANTIDAD_SOLICITADA ;
out7_tmp.ESTADO_FORMULA = out6.ESTADO_FORMULA ;
out7_tmp.DFORMULA_ID = out6.DFORMULA_ID ;
out7_tmp.FORMEDINS_ID = out6.FORMEDINS_ID ;
out7_tmp.TFORMULAS_ID = out6.TFORMULAS_ID ;
out7_tmp.PROCESOSASISTENCIALES_ID = out6.PROCESOSASISTENCIALES_ID ;
out7_tmp.UORG_ID = out6.UORG_ID ;
out7_tmp.USUARIOS_ID = out6.USUARIOS_ID ;
out7_tmp.ESPECIALIDADES_ID = out6.ESPECIALIDADES_ID ;
out7_tmp.SERVICIOS_ID = out6.SERVICIOS_ID ;
out7_tmp.TORIGEN_ID = out6.TORIGEN_ID ;
out7_tmp.PRODUCTOS_ID = out6.PRODUCTOS_ID ;
out7_tmp.FORMASFARMACEUTICAS_ID = out6.FORMASFARMACEUTICAS_ID ;
out7_tmp.TFORMASFARMACEUTICAS_ID = out6.TFORMASFARMACEUTICAS_ID ;
out7_tmp.GENERICO_ID = out6.GENERICO_ID ;
out7_tmp.GENERICO_INSUMO_ID = out6.GENERICO_INSUMO_ID ;
out7_tmp.CIE10_ID = out6.CIE10_ID ;
out7_tmp.TDIAGNOSTICO = out6.TDIAGNOSTICO ;
out7_tmp.CANTENTREGADA = out6.CANTENTREGADA ;
out7_tmp.FECHA_VALORACION = out6.FECHA_VALORACION ;
out7_tmp.DIAGNOSTICOS_ID = out6.DIAGNOSTICOS_ID ;
out7_tmp.FINALIDADCONSULTA = out6.FINALIDADCONSULTA ;
out7_tmp.SERVICIO_NOMBRE = out6.SERVICIO_NOMBRE ;
out7_tmp.SERVICIO_SIGLA = out6.SERVICIO_SIGLA ;
out7_tmp.ESPECIALIDAD_MEDICO = out6.ESPECIALIDAD_MEDICO ;
out7_tmp.CODIGO_ESPECIALIDAD_MEDICO = out6.CODIGO_ESPECIALIDAD_MEDICO ;
out7_tmp.TIPO_DISPENSACION = out6.TIPO_DISPENSACION ;
out7_tmp.CAUSA_EXTERNA = row14.NOMBRE ;
out7 = out7_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "out7"
if(out7 != null) { 



	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out7"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
						row15Struct row15 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row15" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow15 = false;
       		  	    	
       		  	    	
 							row15Struct row15ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_8) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_8 = false;
								
                        		    		    row15HashKey.FORMASFARMACEUTICAS_ID = out7.FORMASFARMACEUTICAS_ID ;
                        		    		

								
		                        	row15HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row15.lookup( row15HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row15Struct fromLookup_row15 = null;
							row15 = row15Default;
										 
							
								 
							
							
								if (tHash_Lookup_row15 !=null && tHash_Lookup_row15.hasNext()) { // G 099
								
							
								
								fromLookup_row15 = tHash_Lookup_row15.next();

							
							
								} // G 099
							
							

							if(fromLookup_row15 != null) {
								row15 = fromLookup_row15;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

out8 = null;


// # Output table : 'out8'
out8_tmp.FORMULA_ID = out7.FORMULA_ID ;
out8_tmp.FORMULA = out7.FORMULA ;
out8_tmp.PERSONAS_ID = out7.PERSONAS_ID ;
out8_tmp.FECHA_FORMULACION = out7.FECHA_FORMULACION ;
out8_tmp.POSOLOGIA = out7.POSOLOGIA ;
out8_tmp.FRECUENCIA = out7.FRECUENCIA ;
out8_tmp.CANTIDAD_SOLICITADA = out7.CANTIDAD_SOLICITADA ;
out8_tmp.ESTADO_FORMULA = out7.ESTADO_FORMULA ;
out8_tmp.DFORMULA_ID = out7.DFORMULA_ID ;
out8_tmp.FORMEDINS_ID = out7.FORMEDINS_ID ;
out8_tmp.TFORMULAS_ID = out7.TFORMULAS_ID ;
out8_tmp.PROCESOSASISTENCIALES_ID = out7.PROCESOSASISTENCIALES_ID ;
out8_tmp.UORG_ID = out7.UORG_ID ;
out8_tmp.USUARIOS_ID = out7.USUARIOS_ID ;
out8_tmp.ESPECIALIDADES_ID = out7.ESPECIALIDADES_ID ;
out8_tmp.SERVICIOS_ID = out7.SERVICIOS_ID ;
out8_tmp.TORIGEN_ID = out7.TORIGEN_ID ;
out8_tmp.PRODUCTOS_ID = out7.PRODUCTOS_ID ;
out8_tmp.FORMASFARMACEUTICAS_ID = out7.FORMASFARMACEUTICAS_ID ;
out8_tmp.TFORMASFARMACEUTICAS_ID = out7.TFORMASFARMACEUTICAS_ID ;
out8_tmp.GENERICO_ID = out7.GENERICO_ID ;
out8_tmp.GENERICO_INSUMO_ID = out7.GENERICO_INSUMO_ID ;
out8_tmp.CIE10_ID = out7.CIE10_ID ;
out8_tmp.TDIAGNOSTICO = out7.TDIAGNOSTICO ;
out8_tmp.CANTENTREGADA = out7.CANTENTREGADA ;
out8_tmp.FECHA_VALORACION = out7.FECHA_VALORACION ;
out8_tmp.DIAGNOSTICOS_ID = out7.DIAGNOSTICOS_ID ;
out8_tmp.FINALIDADCONSULTA = out7.FINALIDADCONSULTA ;
out8_tmp.SERVICIO_NOMBRE = out7.SERVICIO_NOMBRE ;
out8_tmp.SERVICIO_SIGLA = out7.SERVICIO_SIGLA ;
out8_tmp.ESPECIALIDAD_MEDICO = out7.ESPECIALIDAD_MEDICO ;
out8_tmp.CODIGO_ESPECIALIDAD_MEDICO = out7.CODIGO_ESPECIALIDAD_MEDICO ;
out8_tmp.TIPO_DISPENSACION = out7.TIPO_DISPENSACION ;
out8_tmp.CAUSA_EXTERNA = out7.CAUSA_EXTERNA ;
out8_tmp.DACUERDOS_ID = row15.DACUERDOS_ID ;
out8_tmp.CODIGO_SSMP = row15.CODIGO_SSMP ;
out8_tmp.NIVEL_ATENCION = row15.NIVEL_ATENCION ;
out8 = out8_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "out8"
if(out8 != null) { 



	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out8"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
						row16Struct row16 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row16" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow16 = false;
       		  	    	
       		  	    	
 							row16Struct row16ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_9) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_9 = false;
								
                        		    		    row16HashKey.ID = out8.TFORMASFARMACEUTICAS_ID ;
                        		    		

								
		                        	row16HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row16.lookup( row16HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row16Struct fromLookup_row16 = null;
							row16 = row16Default;
										 
							
								 
							
							
								if (tHash_Lookup_row16 !=null && tHash_Lookup_row16.hasNext()) { // G 099
								
							
								
								fromLookup_row16 = tHash_Lookup_row16.next();

							
							
								} // G 099
							
							

							if(fromLookup_row16 != null) {
								row16 = fromLookup_row16;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

out9 = null;


// # Output table : 'out9'
out9_tmp.FORMULA_ID = out8.FORMULA_ID ;
out9_tmp.FORMULA = out8.FORMULA ;
out9_tmp.PERSONAS_ID = out8.PERSONAS_ID ;
out9_tmp.FECHA_FORMULACION = out8.FECHA_FORMULACION ;
out9_tmp.POSOLOGIA = out8.POSOLOGIA ;
out9_tmp.FRECUENCIA = out8.FRECUENCIA ;
out9_tmp.CANTIDAD_SOLICITADA = out8.CANTIDAD_SOLICITADA ;
out9_tmp.ESTADO_FORMULA = out8.ESTADO_FORMULA ;
out9_tmp.DFORMULA_ID = out8.DFORMULA_ID ;
out9_tmp.FORMEDINS_ID = out8.FORMEDINS_ID ;
out9_tmp.TFORMULAS_ID = out8.TFORMULAS_ID ;
out9_tmp.PROCESOSASISTENCIALES_ID = out8.PROCESOSASISTENCIALES_ID ;
out9_tmp.UORG_ID = out8.UORG_ID ;
out9_tmp.USUARIOS_ID = out8.USUARIOS_ID ;
out9_tmp.ESPECIALIDADES_ID = out8.ESPECIALIDADES_ID ;
out9_tmp.SERVICIOS_ID = out8.SERVICIOS_ID ;
out9_tmp.TORIGEN_ID = out8.TORIGEN_ID ;
out9_tmp.PRODUCTOS_ID = out8.PRODUCTOS_ID ;
out9_tmp.FORMASFARMACEUTICAS_ID = out8.FORMASFARMACEUTICAS_ID ;
out9_tmp.TFORMASFARMACEUTICAS_ID = out8.TFORMASFARMACEUTICAS_ID ;
out9_tmp.GENERICO_ID = out8.GENERICO_ID ;
out9_tmp.GENERICO_INSUMO_ID = out8.GENERICO_INSUMO_ID ;
out9_tmp.CIE10_ID = out8.CIE10_ID ;
out9_tmp.TDIAGNOSTICO = out8.TDIAGNOSTICO ;
out9_tmp.CANTENTREGADA = out8.CANTENTREGADA ;
out9_tmp.FECHA_VALORACION = out8.FECHA_VALORACION ;
out9_tmp.DIAGNOSTICOS_ID = out8.DIAGNOSTICOS_ID ;
out9_tmp.FINALIDADCONSULTA = out8.FINALIDADCONSULTA ;
out9_tmp.SERVICIO_NOMBRE = out8.SERVICIO_NOMBRE ;
out9_tmp.SERVICIO_SIGLA = out8.SERVICIO_SIGLA ;
out9_tmp.ESPECIALIDAD_MEDICO = out8.ESPECIALIDAD_MEDICO ;
out9_tmp.CODIGO_ESPECIALIDAD_MEDICO = out8.CODIGO_ESPECIALIDAD_MEDICO ;
out9_tmp.TIPO_DISPENSACION = out8.TIPO_DISPENSACION ;
out9_tmp.CAUSA_EXTERNA = out8.CAUSA_EXTERNA ;
out9_tmp.DACUERDOS_ID = out8.DACUERDOS_ID ;
out9_tmp.CODIGO_SSMP = out8.CODIGO_SSMP ;
out9_tmp.NIVEL_ATENCION = out8.NIVEL_ATENCION ;
out9_tmp.FORMA_FARMACEUTICA = row16.NOMBRE ;
out9 = out9_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "out9"
if(out9 != null) { 



	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out9"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
						row17Struct row17 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row17" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow17 = false;
       		  	    	
       		  	    	
 							row17Struct row17ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_10) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_10 = false;
								
                        		    		    row17HashKey.DACUERDOS_ID = out9.DACUERDOS_ID ;
                        		    		

								
		                        	row17HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row17.lookup( row17HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row17Struct fromLookup_row17 = null;
							row17 = row17Default;
										 
							
								 
							
							
								if (tHash_Lookup_row17 !=null && tHash_Lookup_row17.hasNext()) { // G 099
								
							
								
								fromLookup_row17 = tHash_Lookup_row17.next();

							
							
								} // G 099
							
							

							if(fromLookup_row17 != null) {
								row17 = fromLookup_row17;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

out10 = null;


// # Output table : 'out10'
out10_tmp.FORMULA_ID = out9.FORMULA_ID ;
out10_tmp.FORMULA = out9.FORMULA ;
out10_tmp.PERSONAS_ID = out9.PERSONAS_ID ;
out10_tmp.FECHA_FORMULACION = out9.FECHA_FORMULACION ;
out10_tmp.POSOLOGIA = out9.POSOLOGIA ;
out10_tmp.FRECUENCIA = out9.FRECUENCIA ;
out10_tmp.CANTIDAD_SOLICITADA = out9.CANTIDAD_SOLICITADA ;
out10_tmp.ESTADO_FORMULA = out9.ESTADO_FORMULA ;
out10_tmp.DFORMULA_ID = out9.DFORMULA_ID ;
out10_tmp.FORMEDINS_ID = out9.FORMEDINS_ID ;
out10_tmp.TFORMULAS_ID = out9.TFORMULAS_ID ;
out10_tmp.PROCESOSASISTENCIALES_ID = out9.PROCESOSASISTENCIALES_ID ;
out10_tmp.UORG_ID = out9.UORG_ID ;
out10_tmp.USUARIOS_ID = out9.USUARIOS_ID ;
out10_tmp.ESPECIALIDADES_ID = out9.ESPECIALIDADES_ID ;
out10_tmp.SERVICIOS_ID = out9.SERVICIOS_ID ;
out10_tmp.TORIGEN_ID = out9.TORIGEN_ID ;
out10_tmp.PRODUCTOS_ID = out9.PRODUCTOS_ID ;
out10_tmp.FORMASFARMACEUTICAS_ID = out9.FORMASFARMACEUTICAS_ID ;
out10_tmp.TFORMASFARMACEUTICAS_ID = out9.TFORMASFARMACEUTICAS_ID ;
out10_tmp.GENERICO_ID = out9.GENERICO_ID ;
out10_tmp.GENERICO_INSUMO_ID = out9.GENERICO_INSUMO_ID ;
out10_tmp.CIE10_ID = out9.CIE10_ID ;
out10_tmp.TDIAGNOSTICO = out9.TDIAGNOSTICO ;
out10_tmp.CANTENTREGADA = out9.CANTENTREGADA ;
out10_tmp.FECHA_VALORACION = out9.FECHA_VALORACION ;
out10_tmp.DIAGNOSTICOS_ID = out9.DIAGNOSTICOS_ID ;
out10_tmp.FINALIDADCONSULTA = out9.FINALIDADCONSULTA ;
out10_tmp.SERVICIO_NOMBRE = out9.SERVICIO_NOMBRE ;
out10_tmp.SERVICIO_SIGLA = out9.SERVICIO_SIGLA ;
out10_tmp.ESPECIALIDAD_MEDICO = out9.ESPECIALIDAD_MEDICO ;
out10_tmp.CODIGO_ESPECIALIDAD_MEDICO = out9.CODIGO_ESPECIALIDAD_MEDICO ;
out10_tmp.TIPO_DISPENSACION = out9.TIPO_DISPENSACION ;
out10_tmp.CAUSA_EXTERNA = out9.CAUSA_EXTERNA ;
out10_tmp.DACUERDOS_ID = out9.DACUERDOS_ID ;
out10_tmp.CODIGO_SSMP = out9.CODIGO_SSMP ;
out10_tmp.NIVEL_ATENCION = out9.NIVEL_ATENCION ;
out10_tmp.FORMA_FARMACEUTICA = out9.FORMA_FARMACEUTICA ;
out10_tmp.NIVELES_USO = row17.NIVELES_USO ;
out10 = out10_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "out10"
if(out10 != null) { 



	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out10"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
						row1Struct row1 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row1" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow1 = false;
       		  	    	
       		  	    	
 							row1Struct row1ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_11) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_11 = false;
								
                        		    		    row1HashKey.GENERICOS_ID = out10.GENERICO_ID ;
                        		    		

								
		                        	row1HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row1.lookup( row1HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row1Struct fromLookup_row1 = null;
							row1 = row1Default;
										 
							
								 
							
							
								if (tHash_Lookup_row1 !=null && tHash_Lookup_row1.hasNext()) { // G 099
								
							
								
								fromLookup_row1 = tHash_Lookup_row1.next();

							
							
								} // G 099
							
							

							if(fromLookup_row1 != null) {
								row1 = fromLookup_row1;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

out11 = null;


// # Output table : 'out11'
out11_tmp.FORMULA_ID = out10.FORMULA_ID ;
out11_tmp.FORMULA = out10.FORMULA ;
out11_tmp.PERSONAS_ID = out10.PERSONAS_ID ;
out11_tmp.FECHA_FORMULACION = out10.FECHA_FORMULACION ;
out11_tmp.POSOLOGIA = out10.POSOLOGIA ;
out11_tmp.FRECUENCIA = out10.FRECUENCIA ;
out11_tmp.CANTIDAD_SOLICITADA = out10.CANTIDAD_SOLICITADA ;
out11_tmp.ESTADO_FORMULA = out10.ESTADO_FORMULA ;
out11_tmp.DFORMULA_ID = out10.DFORMULA_ID ;
out11_tmp.FORMEDINS_ID = out10.FORMEDINS_ID ;
out11_tmp.TFORMULAS_ID = out10.TFORMULAS_ID ;
out11_tmp.PROCESOSASISTENCIALES_ID = out10.PROCESOSASISTENCIALES_ID ;
out11_tmp.UORG_ID = out10.UORG_ID ;
out11_tmp.USUARIOS_ID = out10.USUARIOS_ID ;
out11_tmp.ESPECIALIDADES_ID = out10.ESPECIALIDADES_ID ;
out11_tmp.SERVICIOS_ID = out10.SERVICIOS_ID ;
out11_tmp.TORIGEN_ID = out10.TORIGEN_ID ;
out11_tmp.PRODUCTOS_ID = out10.PRODUCTOS_ID ;
out11_tmp.FORMASFARMACEUTICAS_ID = out10.FORMASFARMACEUTICAS_ID ;
out11_tmp.TFORMASFARMACEUTICAS_ID = out10.TFORMASFARMACEUTICAS_ID ;
out11_tmp.GENERICO_ID = out10.GENERICO_ID ;
out11_tmp.GENERICO_INSUMO_ID = out10.GENERICO_INSUMO_ID ;
out11_tmp.CIE10_ID = out10.CIE10_ID ;
out11_tmp.TDIAGNOSTICO = out10.TDIAGNOSTICO ;
out11_tmp.CANTENTREGADA = out10.CANTENTREGADA ;
out11_tmp.FECHA_VALORACION = out10.FECHA_VALORACION ;
out11_tmp.DIAGNOSTICOS_ID = out10.DIAGNOSTICOS_ID ;
out11_tmp.FINALIDADCONSULTA = out10.FINALIDADCONSULTA ;
out11_tmp.SERVICIO_ATENCION = out10.SERVICIO_NOMBRE ;
out11_tmp.SERVICIO_SIGLA = out10.SERVICIO_SIGLA ;
out11_tmp.ESPECIALIDAD_MEDICO = out10.ESPECIALIDAD_MEDICO ;
out11_tmp.CODIGO_ESPECIALIDAD_MEDICO = out10.CODIGO_ESPECIALIDAD_MEDICO ;
out11_tmp.TIPO_DISPENSACION = out10.TIPO_DISPENSACION ;
out11_tmp.CAUSA_EXTERNA = out10.CAUSA_EXTERNA ;
out11_tmp.DACUERDOS_ID = out10.DACUERDOS_ID ;
out11_tmp.CODIGO_SSMP = out10.CODIGO_SSMP ;
out11_tmp.NIVEL_ATENCION = out10.NIVEL_ATENCION ;
out11_tmp.FORMA_FARMACEUTICA = out10.FORMA_FARMACEUTICA ;
out11_tmp.NIVELES_USO = out10.NIVELES_USO ;
out11_tmp.PRINCIPIO_ACTIVO = row1.NOMBRE ;
out11 = out11_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "out11"
if(out11 != null) { 



	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out11"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
						row2Struct row2 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row2" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow2 = false;
       		  	    	
       		  	    	
 							row2Struct row2ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row2HashKey.DIAGNOSTICOS_ID = out11.DIAGNOSTICOS_ID ;
                        		    		

								
		                        	row2HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row2.lookup( row2HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row2Struct fromLookup_row2 = null;
							row2 = row2Default;
										 
							
								 
							
							
								if (tHash_Lookup_row2 !=null && tHash_Lookup_row2.hasNext()) { // G 099
								
							
								
								fromLookup_row2 = tHash_Lookup_row2.next();

							
							
								} // G 099
							
							

							if(fromLookup_row2 != null) {
								row2 = fromLookup_row2;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

out1 = null;


// # Output table : 'out1'
out1_tmp.FORMULA = out11.FORMULA ;
out1_tmp.PERSONAS_ID = out11.PERSONAS_ID ;
out1_tmp.FECHA_FORMULACION = out11.FECHA_FORMULACION ;
out1_tmp.POSOLOGIA = out11.POSOLOGIA ;
out1_tmp.FRECUENCIA = out11.FRECUENCIA ;
out1_tmp.CANTIDAD_SOLICITADA = out11.CANTIDAD_SOLICITADA ;
out1_tmp.ESTADO_FORMULA = out11.ESTADO_FORMULA ;
out1_tmp.DFORMULA_ID = out11.DFORMULA_ID ;
out1_tmp.FORMEDINS_ID = out11.FORMEDINS_ID ;
out1_tmp.TIPO_DISPENSACION = out11.TIPO_DISPENSACION ;
out1_tmp.PROCESOSASISTENCIALES_ID = out11.PROCESOSASISTENCIALES_ID ;
out1_tmp.UORG_ID = out11.UORG_ID ;
out1_tmp.USUARIOS_ID = out11.USUARIOS_ID ;
out1_tmp.ESPECIALIDAD_MEDICO = out11.ESPECIALIDAD_MEDICO ;
out1_tmp.CODIGO_ESPECIALIDAD_MEDICO = out11.CODIGO_ESPECIALIDAD_MEDICO ;
out1_tmp.AREA_ATENCION = out11.SERVICIO_ATENCION ;
out1_tmp.SERVICIO_ATENCION = out11.SERVICIO_ATENCION ;
out1_tmp.CAUSA_EXTERNA = out11.CAUSA_EXTERNA ;
out1_tmp.PRODUCTOS_ID = out11.PRODUCTOS_ID ;
out1_tmp.FORMASFARMACEUTICAS_ID = out11.FORMASFARMACEUTICAS_ID ;
out1_tmp.GENERICO_ID = out11.GENERICO_ID ;
out1_tmp.GENERICO_INSUMO_ID = out11.GENERICO_INSUMO_ID ;
out1_tmp.CIE10_ID = out11.CIE10_ID ;
out1_tmp.CODIGO_SSMP = out11.CODIGO_SSMP ;
out1_tmp.NIVEL_ATENCION = out11.NIVEL_ATENCION ;
out1_tmp.FORMA_FARMACEUTICA = out11.FORMA_FARMACEUTICA ;
out1_tmp.NIVELES_USO = out11.NIVELES_USO ;
out1_tmp.PRINCIPIO_ACTIVO = out11.PRINCIPIO_ACTIVO ;
out1_tmp.TIPO_DIAGNOSTICO = out11.TDIAGNOSTICO ;
out1_tmp.CANTENTREGADA = out11.CANTENTREGADA ;
out1_tmp.FECHA_VALORACION = out11.FECHA_VALORACION ;
out1_tmp.FINALIDAD_CONSULTA = out11.FINALIDADCONSULTA ;
out1_tmp.DIAG_RELACIONADO1 = row2.UNO ;
out1_tmp.DIAG_RELACIONADO2 = row2.DOS ;
out1_tmp.DIAG_RELACIONADO3 = row2.TRES ;
out1_tmp.ESPECIALIDAD_MEDICO_ID = out11.ESPECIALIDADES_ID ;
out1_tmp.SERVICIO_ATENCION_ID = out11.SERVICIOS_ID ;
out1 = out1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "out1"
if(out1 != null) { 



	
	/**
	 * [tOracleOutput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out1"
						
						);
					}
					



        whetherReject_tOracleOutput_9 = false;
                    pstmt_tOracleOutput_9.setBigDecimal(1, out1.DFORMULA_ID);

            int checkCount_tOracleOutput_9 = -1;
            try (java.sql.ResultSet rs_tOracleOutput_9 = pstmt_tOracleOutput_9.executeQuery()) {
                while(rs_tOracleOutput_9.next()) {
                    checkCount_tOracleOutput_9 = rs_tOracleOutput_9.getInt(1);
                }
            }
            if(checkCount_tOracleOutput_9 > 0) {
                        if(out1.FORMULA == null) {
pstmtUpdate_tOracleOutput_9.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(1, out1.FORMULA);
}

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(2, out1.PERSONAS_ID);

                        if(out1.FECHA_FORMULACION != null) {
pstmtUpdate_tOracleOutput_9.setObject(3, new java.sql.Timestamp(out1.FECHA_FORMULACION.getTime()),java.sql.Types.DATE);
} else {
pstmtUpdate_tOracleOutput_9.setNull(3, java.sql.Types.DATE);
}

                        if(out1.POSOLOGIA == null) {
pstmtUpdate_tOracleOutput_9.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(4, out1.POSOLOGIA);
}

                        if(out1.FRECUENCIA == null) {
pstmtUpdate_tOracleOutput_9.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(5, out1.FRECUENCIA);
}

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(6, out1.CANTIDAD_SOLICITADA);

                        if(out1.ESTADO_FORMULA == null) {
pstmtUpdate_tOracleOutput_9.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(7, out1.ESTADO_FORMULA);
}

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(8, out1.FORMEDINS_ID);

                        if(out1.TIPO_DISPENSACION == null) {
pstmtUpdate_tOracleOutput_9.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(9, out1.TIPO_DISPENSACION);
}

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(10, out1.PROCESOSASISTENCIALES_ID);

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(11, out1.UORG_ID);

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(12, out1.USUARIOS_ID);

                        if(out1.ESPECIALIDAD_MEDICO == null) {
pstmtUpdate_tOracleOutput_9.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(13, out1.ESPECIALIDAD_MEDICO);
}

                        if(out1.CODIGO_ESPECIALIDAD_MEDICO == null) {
pstmtUpdate_tOracleOutput_9.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(14, out1.CODIGO_ESPECIALIDAD_MEDICO);
}

                        if(out1.AREA_ATENCION == null) {
pstmtUpdate_tOracleOutput_9.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(15, out1.AREA_ATENCION);
}

                        if(out1.SERVICIO_ATENCION == null) {
pstmtUpdate_tOracleOutput_9.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(16, out1.SERVICIO_ATENCION);
}

                        if(out1.CAUSA_EXTERNA == null) {
pstmtUpdate_tOracleOutput_9.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(17, out1.CAUSA_EXTERNA);
}

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(18, out1.PRODUCTOS_ID);

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(19, out1.FORMASFARMACEUTICAS_ID);

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(20, out1.GENERICO_ID);

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(21, out1.GENERICO_INSUMO_ID);

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(22, out1.CIE10_ID);

                        if(out1.CODIGO_SSMP == null) {
pstmtUpdate_tOracleOutput_9.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(23, out1.CODIGO_SSMP);
}

                        if(out1.NIVEL_ATENCION == null) {
pstmtUpdate_tOracleOutput_9.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(24, out1.NIVEL_ATENCION);
}

                        if(out1.FORMA_FARMACEUTICA == null) {
pstmtUpdate_tOracleOutput_9.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(25, out1.FORMA_FARMACEUTICA);
}

                        if(out1.NIVELES_USO == null) {
pstmtUpdate_tOracleOutput_9.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(26, out1.NIVELES_USO);
}

                        if(out1.PRINCIPIO_ACTIVO == null) {
pstmtUpdate_tOracleOutput_9.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(27, out1.PRINCIPIO_ACTIVO);
}

                        if(out1.TIPO_DIAGNOSTICO == null) {
pstmtUpdate_tOracleOutput_9.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(28, out1.TIPO_DIAGNOSTICO);
}

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(29, out1.CANTENTREGADA);

                        if(out1.FECHA_VALORACION != null) {
pstmtUpdate_tOracleOutput_9.setObject(30, new java.sql.Timestamp(out1.FECHA_VALORACION.getTime()),java.sql.Types.DATE);
} else {
pstmtUpdate_tOracleOutput_9.setNull(30, java.sql.Types.DATE);
}

                        if(out1.FINALIDAD_CONSULTA == null) {
pstmtUpdate_tOracleOutput_9.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_9.setString(31, out1.FINALIDAD_CONSULTA);
}

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(32, out1.DIAG_RELACIONADO1);

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(33, out1.DIAG_RELACIONADO2);

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(34, out1.DIAG_RELACIONADO3);

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(35, out1.ESPECIALIDAD_MEDICO_ID);

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(36, out1.SERVICIO_ATENCION_ID);

                        pstmtUpdate_tOracleOutput_9.setBigDecimal(37 + count_tOracleOutput_9, out1.DFORMULA_ID);

                try {
                    int processedCount_tOracleOutput_9 = pstmtUpdate_tOracleOutput_9.executeUpdate();
                    updatedCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                    rowsToCommitCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                    nb_line_tOracleOutput_9++;
                } catch(java.lang.Exception e_tOracleOutput_9) {
globalMap.put("tOracleOutput_9_ERROR_MESSAGE",e_tOracleOutput_9.getMessage());
                    whetherReject_tOracleOutput_9 = true;
                        nb_line_tOracleOutput_9++;
                            System.err.print(e_tOracleOutput_9.getMessage());
                }
            } else {
                        if(out1.FORMULA == null) {
pstmtInsert_tOracleOutput_9.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(1, out1.FORMULA);
}

                        pstmtInsert_tOracleOutput_9.setBigDecimal(2, out1.PERSONAS_ID);

                        if(out1.FECHA_FORMULACION != null) {
pstmtInsert_tOracleOutput_9.setObject(3, new java.sql.Timestamp(out1.FECHA_FORMULACION.getTime()),java.sql.Types.DATE);
} else {
pstmtInsert_tOracleOutput_9.setNull(3, java.sql.Types.DATE);
}

                        if(out1.POSOLOGIA == null) {
pstmtInsert_tOracleOutput_9.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(4, out1.POSOLOGIA);
}

                        if(out1.FRECUENCIA == null) {
pstmtInsert_tOracleOutput_9.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(5, out1.FRECUENCIA);
}

                        pstmtInsert_tOracleOutput_9.setBigDecimal(6, out1.CANTIDAD_SOLICITADA);

                        if(out1.ESTADO_FORMULA == null) {
pstmtInsert_tOracleOutput_9.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(7, out1.ESTADO_FORMULA);
}

                        pstmtInsert_tOracleOutput_9.setBigDecimal(8, out1.DFORMULA_ID);

                        pstmtInsert_tOracleOutput_9.setBigDecimal(9, out1.FORMEDINS_ID);

                        if(out1.TIPO_DISPENSACION == null) {
pstmtInsert_tOracleOutput_9.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(10, out1.TIPO_DISPENSACION);
}

                        pstmtInsert_tOracleOutput_9.setBigDecimal(11, out1.PROCESOSASISTENCIALES_ID);

                        pstmtInsert_tOracleOutput_9.setBigDecimal(12, out1.UORG_ID);

                        pstmtInsert_tOracleOutput_9.setBigDecimal(13, out1.USUARIOS_ID);

                        if(out1.ESPECIALIDAD_MEDICO == null) {
pstmtInsert_tOracleOutput_9.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(14, out1.ESPECIALIDAD_MEDICO);
}

                        if(out1.CODIGO_ESPECIALIDAD_MEDICO == null) {
pstmtInsert_tOracleOutput_9.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(15, out1.CODIGO_ESPECIALIDAD_MEDICO);
}

                        if(out1.AREA_ATENCION == null) {
pstmtInsert_tOracleOutput_9.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(16, out1.AREA_ATENCION);
}

                        if(out1.SERVICIO_ATENCION == null) {
pstmtInsert_tOracleOutput_9.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(17, out1.SERVICIO_ATENCION);
}

                        if(out1.CAUSA_EXTERNA == null) {
pstmtInsert_tOracleOutput_9.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(18, out1.CAUSA_EXTERNA);
}

                        pstmtInsert_tOracleOutput_9.setBigDecimal(19, out1.PRODUCTOS_ID);

                        pstmtInsert_tOracleOutput_9.setBigDecimal(20, out1.FORMASFARMACEUTICAS_ID);

                        pstmtInsert_tOracleOutput_9.setBigDecimal(21, out1.GENERICO_ID);

                        pstmtInsert_tOracleOutput_9.setBigDecimal(22, out1.GENERICO_INSUMO_ID);

                        pstmtInsert_tOracleOutput_9.setBigDecimal(23, out1.CIE10_ID);

                        if(out1.CODIGO_SSMP == null) {
pstmtInsert_tOracleOutput_9.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(24, out1.CODIGO_SSMP);
}

                        if(out1.NIVEL_ATENCION == null) {
pstmtInsert_tOracleOutput_9.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(25, out1.NIVEL_ATENCION);
}

                        if(out1.FORMA_FARMACEUTICA == null) {
pstmtInsert_tOracleOutput_9.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(26, out1.FORMA_FARMACEUTICA);
}

                        if(out1.NIVELES_USO == null) {
pstmtInsert_tOracleOutput_9.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(27, out1.NIVELES_USO);
}

                        if(out1.PRINCIPIO_ACTIVO == null) {
pstmtInsert_tOracleOutput_9.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(28, out1.PRINCIPIO_ACTIVO);
}

                        if(out1.TIPO_DIAGNOSTICO == null) {
pstmtInsert_tOracleOutput_9.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(29, out1.TIPO_DIAGNOSTICO);
}

                        pstmtInsert_tOracleOutput_9.setBigDecimal(30, out1.CANTENTREGADA);

                        if(out1.FECHA_VALORACION != null) {
pstmtInsert_tOracleOutput_9.setObject(31, new java.sql.Timestamp(out1.FECHA_VALORACION.getTime()),java.sql.Types.DATE);
} else {
pstmtInsert_tOracleOutput_9.setNull(31, java.sql.Types.DATE);
}

                        if(out1.FINALIDAD_CONSULTA == null) {
pstmtInsert_tOracleOutput_9.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_9.setString(32, out1.FINALIDAD_CONSULTA);
}

                        pstmtInsert_tOracleOutput_9.setBigDecimal(33, out1.DIAG_RELACIONADO1);

                        pstmtInsert_tOracleOutput_9.setBigDecimal(34, out1.DIAG_RELACIONADO2);

                        pstmtInsert_tOracleOutput_9.setBigDecimal(35, out1.DIAG_RELACIONADO3);

                        pstmtInsert_tOracleOutput_9.setBigDecimal(36, out1.ESPECIALIDAD_MEDICO_ID);

                        pstmtInsert_tOracleOutput_9.setBigDecimal(37, out1.SERVICIO_ATENCION_ID);

                try {
                    int processedCount_tOracleOutput_9 = pstmtInsert_tOracleOutput_9.executeUpdate();
                    insertedCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                    rowsToCommitCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                    nb_line_tOracleOutput_9++;
                } catch(java.lang.Exception e_tOracleOutput_9) {
globalMap.put("tOracleOutput_9_ERROR_MESSAGE",e_tOracleOutput_9.getMessage());
                    whetherReject_tOracleOutput_9 = true;
                        nb_line_tOracleOutput_9++;
                            System.err.print(e_tOracleOutput_9.getMessage());
                }
            }
                commitCounter_tOracleOutput_9++;
                if(commitEvery_tOracleOutput_9 <= commitCounter_tOracleOutput_9) {
                    if(rowsToCommitCount_tOracleOutput_9 != 0){
                    	
                    }
                    conn_tOracleOutput_9.commit();
                    if(rowsToCommitCount_tOracleOutput_9 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_9 = 0;
                    }
                    commitCounter_tOracleOutput_9=0;
                }

 


	tos_count_tOracleOutput_9++;

/**
 * [tOracleOutput_9 main ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_end ] stop
 */

} // End of branch "out1"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */

} // End of branch "out11"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */

} // End of branch "out10"




	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */

} // End of branch "out9"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */

} // End of branch "out8"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */

} // End of branch "out7"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */

} // End of branch "out6"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */

} // End of branch "out5"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */

} // End of branch "out2"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_38 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_38 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

}
}finally{
	if (rs_tOracleInput_38 != null) {
		rs_tOracleInput_38.close();
	}
	if (stmt_tOracleInput_38 != null) {
		stmt_tOracleInput_38.close();
	}
}

globalMap.put("tOracleInput_38_NB_LINE",nb_line_tOracleInput_38);
 

ok_Hash.put("tOracleInput_38", true);
end_Hash.put("tOracleInput_38", System.currentTimeMillis());




/**
 * [tOracleInput_38 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row11 != null) {
						tHash_Lookup_row11.endGet();
					}
					globalMap.remove( "tHash_Lookup_row11" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row12 != null) {
						tHash_Lookup_row12.endGet();
					}
					globalMap.remove( "tHash_Lookup_row12" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out2");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row13 != null) {
						tHash_Lookup_row13.endGet();
					}
					globalMap.remove( "tHash_Lookup_row13" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out5");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row14 != null) {
						tHash_Lookup_row14.endGet();
					}
					globalMap.remove( "tHash_Lookup_row14" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out6");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row15 != null) {
						tHash_Lookup_row15.endGet();
					}
					globalMap.remove( "tHash_Lookup_row15" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out7");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row16 != null) {
						tHash_Lookup_row16.endGet();
					}
					globalMap.remove( "tHash_Lookup_row16" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out8");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row17 != null) {
						tHash_Lookup_row17.endGet();
					}
					globalMap.remove( "tHash_Lookup_row17" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out9");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row1 != null) {
						tHash_Lookup_row1.endGet();
					}
					globalMap.remove( "tHash_Lookup_row1" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out10");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row2 != null) {
						tHash_Lookup_row2.endGet();
					}
					globalMap.remove( "tHash_Lookup_row2" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out11");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tOracleOutput_9 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_9 != null){
            pstmtUpdate_tOracleOutput_9.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_9");
        }
        if(pstmtInsert_tOracleOutput_9 != null){
            pstmtInsert_tOracleOutput_9.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_9");
        }
        if(pstmt_tOracleOutput_9 != null) {
            pstmt_tOracleOutput_9.close();
            resourceMap.remove("pstmt_tOracleOutput_9");
        }
    resourceMap.put("statementClosed_tOracleOutput_9", true);
		if(commitCounter_tOracleOutput_9 > 0 && rowsToCommitCount_tOracleOutput_9 != 0) {
			
		}
		conn_tOracleOutput_9.commit();
		if(commitCounter_tOracleOutput_9 > 0 && rowsToCommitCount_tOracleOutput_9 != 0) {
			
			rowsToCommitCount_tOracleOutput_9 = 0;
		}
		commitCounter_tOracleOutput_9 = 0;
		
		
		conn_tOracleOutput_9 .close();
		
		resourceMap.put("finish_tOracleOutput_9", true);
   	

	
	nb_line_deleted_tOracleOutput_9=nb_line_deleted_tOracleOutput_9+ deletedCount_tOracleOutput_9;
	nb_line_update_tOracleOutput_9=nb_line_update_tOracleOutput_9 + updatedCount_tOracleOutput_9;
	nb_line_inserted_tOracleOutput_9=nb_line_inserted_tOracleOutput_9 + insertedCount_tOracleOutput_9;
	nb_line_rejected_tOracleOutput_9=nb_line_rejected_tOracleOutput_9 + rejectedCount_tOracleOutput_9;
	
        globalMap.put("tOracleOutput_9_NB_LINE",nb_line_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_UPDATED",nb_line_update_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_9);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out1");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_9", true);
end_Hash.put("tOracleOutput_9", System.currentTimeMillis());




/**
 * [tOracleOutput_9 end ] stop
 */






























				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_38:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk7", 0, "ok");
								} 
							
							tHashInput_29Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row2"); 
				     			
					     			//free memory for "tMap_11"
					     			globalMap.remove("tHash_Lookup_row1"); 
				     			
					     			//free memory for "tMap_10"
					     			globalMap.remove("tHash_Lookup_row17"); 
				     			
					     			//free memory for "tMap_9"
					     			globalMap.remove("tHash_Lookup_row16"); 
				     			
					     			//free memory for "tMap_8"
					     			globalMap.remove("tHash_Lookup_row15"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row14"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row13"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row12"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row11"); 
				     			
				try{
					
	
	/**
	 * [tOracleInput_38 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tOracleOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_9") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_9 = null;
                if ((pstmtUpdateToClose_tOracleOutput_9 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_9")) != null) {
                    pstmtUpdateToClose_tOracleOutput_9.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_9 = null;
                if ((pstmtInsertToClose_tOracleOutput_9 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_9")) != null) {
                    pstmtInsertToClose_tOracleOutput_9.close();
                }
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_9 = null;
                if ((pstmtToClose_tOracleOutput_9 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_9")) != null) {
                    pstmtToClose_tOracleOutput_9.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_9") == null){
            java.sql.Connection ctn_tOracleOutput_9 = null;
            if((ctn_tOracleOutput_9 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_9")) != null){
                try {
                    ctn_tOracleOutput_9.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_9) {
                    String errorMessage_tOracleOutput_9 = "failed to close the connection in tOracleOutput_9 :" + sqlEx_tOracleOutput_9.getMessage();
                    System.err.println(errorMessage_tOracleOutput_9);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_9 finally ] stop
 */






























				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_38_SUBPROCESS_STATE", 1);
	}
	


public static class out3Struct implements routines.system.IPersistableRow<out3Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal DMOVIMIENTOS_ID;

				public BigDecimal getDMOVIMIENTOS_ID () {
					return this.DMOVIMIENTOS_ID;
				}

				public Boolean DMOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean DMOVIMIENTOS_IDIsKey(){
				    return true;
				}
				public Integer DMOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer DMOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String DMOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String DMOVIMIENTOS_IDComment(){
				
				    return "FK - MED_DMOVIMIENTOS";
				
				}
				public String DMOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String DMOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "DMOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "FK - MED_MOVIMIENTOS";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal CANTIDAD_DISPENSADA;

				public BigDecimal getCANTIDAD_DISPENSADA () {
					return this.CANTIDAD_DISPENSADA;
				}

				public Boolean CANTIDAD_DISPENSADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_DISPENSADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_DISPENSADALength(){
				    return 0;
				}
				public Integer CANTIDAD_DISPENSADAPrecision(){
				    return null;
				}
				public String CANTIDAD_DISPENSADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_DISPENSADAComment(){
				
				    return "Cantidad del detalle del movimiento";
				
				}
				public String CANTIDAD_DISPENSADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_DISPENSADAOriginalDbColumnName(){
				
					return "CANTIDAD_DISPENSADA";
				
				}

				
			    public BigDecimal VALOR_UNITARIO_ITEM;

				public BigDecimal getVALOR_UNITARIO_ITEM () {
					return this.VALOR_UNITARIO_ITEM;
				}

				public Boolean VALOR_UNITARIO_ITEMIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIO_ITEMIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIO_ITEMLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIO_ITEMPrecision(){
				    return null;
				}
				public String VALOR_UNITARIO_ITEMDefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIO_ITEMComment(){
				
				    return "Valor unitario";
				
				}
				public String VALOR_UNITARIO_ITEMPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIO_ITEMOriginalDbColumnName(){
				
					return "VALOR_UNITARIO_ITEM";
				
				}

				
			    public BigDecimal PORCENTAJE_IVA;

				public BigDecimal getPORCENTAJE_IVA () {
					return this.PORCENTAJE_IVA;
				}

				public Boolean PORCENTAJE_IVAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_IVAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_IVALength(){
				    return 0;
				}
				public Integer PORCENTAJE_IVAPrecision(){
				    return null;
				}
				public String PORCENTAJE_IVADefault(){
				
					return null;
				
				}
				public String PORCENTAJE_IVAComment(){
				
				    return "Porcentaje iva";
				
				}
				public String PORCENTAJE_IVAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_IVAOriginalDbColumnName(){
				
					return "PORCENTAJE_IVA";
				
				}

				
			    public BigDecimal VALOR_IVA_UNITARIO;

				public BigDecimal getVALOR_IVA_UNITARIO () {
					return this.VALOR_IVA_UNITARIO;
				}

				public Boolean VALOR_IVA_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_IVA_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_IVA_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_IVA_UNITARIOComment(){
				
				    return "Valor unitario iva";
				
				}
				public String VALOR_IVA_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_IVA_UNITARIO";
				
				}

				
			    public BigDecimal VALOR_INTERMEDIACION;

				public BigDecimal getVALOR_INTERMEDIACION () {
					return this.VALOR_INTERMEDIACION;
				}

				public Boolean VALOR_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_INTERMEDIACIONPrecision(){
				    return null;
				}
				public String VALOR_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_INTERMEDIACIONComment(){
				
				    return "Valor unitario de la intermediaci\uFFFDn";
				
				}
				public String VALOR_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_INTERMEDIACION";
				
				}

				
			    public BigDecimal PORCENTAJE_INTERMEDIACION;

				public BigDecimal getPORCENTAJE_INTERMEDIACION () {
					return this.PORCENTAJE_INTERMEDIACION;
				}

				public Boolean PORCENTAJE_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer PORCENTAJE_INTERMEDIACIONPrecision(){
				    return null;
				}
				public String PORCENTAJE_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String PORCENTAJE_INTERMEDIACIONComment(){
				
				    return "Porcentaje intermediaci\uFFFDn";
				
				}
				public String PORCENTAJE_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONOriginalDbColumnName(){
				
					return "PORCENTAJE_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_IVA_INTERMEDIACION;

				public BigDecimal getVALOR_IVA_INTERMEDIACION () {
					return this.VALOR_IVA_INTERMEDIACION;
				}

				public Boolean VALOR_IVA_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_IVA_INTERMEDIACIONPrecision(){
				    return null;
				}
				public String VALOR_IVA_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_INTERMEDIACIONComment(){
				
				    return "Valor iva intermediaci\uFFFDn";
				
				}
				public String VALOR_IVA_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_IVA_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_TOTAL_MEDICAMENTO;

				public BigDecimal getVALOR_TOTAL_MEDICAMENTO () {
					return this.VALOR_TOTAL_MEDICAMENTO;
				}

				public Boolean VALOR_TOTAL_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_MEDICAMENTOComment(){
				
				    return "Valor total del medicamento";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOOriginalDbColumnName(){
				
					return "VALOR_TOTAL_MEDICAMENTO";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INTERMEDIACION;

				public BigDecimal getVALOR_TOTAL_INTERMEDIACION () {
					return this.VALOR_TOTAL_INTERMEDIACION;
				}

				public Boolean VALOR_TOTAL_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONComment(){
				
				    return "Total intermediaci\uFFFDn (subtotal + subtotal iva de intermediaci\uFFFDn)";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INTERMEDIACION";
				
				}

				
			    public BigDecimal TOTAL_TRANSACCION_COMPLETA;

				public BigDecimal getTOTAL_TRANSACCION_COMPLETA () {
					return this.TOTAL_TRANSACCION_COMPLETA;
				}

				public Boolean TOTAL_TRANSACCION_COMPLETAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_TRANSACCION_COMPLETAIsKey(){
				    return false;
				}
				public Integer TOTAL_TRANSACCION_COMPLETALength(){
				    return 0;
				}
				public Integer TOTAL_TRANSACCION_COMPLETAPrecision(){
				    return null;
				}
				public String TOTAL_TRANSACCION_COMPLETADefault(){
				
					return null;
				
				}
				public String TOTAL_TRANSACCION_COMPLETAComment(){
				
				    return "Total final";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAPattern(){
				
					return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAOriginalDbColumnName(){
				
					return "TOTAL_TRANSACCION_COMPLETA";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return null;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return null;
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "FK - MED_HDCONTRATOS Para relacionar el detalle del historico del contrato cuando existe";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return null;
				
				}
				public String DFORMULA_IDComment(){
				
				    return "FK - MED_FORMMEDINSUMOS";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public java.util.Date FECHA_DISPENSACION;

				public java.util.Date getFECHA_DISPENSACION () {
					return this.FECHA_DISPENSACION;
				}

				public Boolean FECHA_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer FECHA_DISPENSACIONLength(){
				    return 7;
				}
				public Integer FECHA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String FECHA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String FECHA_DISPENSACIONComment(){
				
				    return "Fecha del movimiento";
				
				}
				public String FECHA_DISPENSACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_DISPENSACIONOriginalDbColumnName(){
				
					return "FECHA_DISPENSACION";
				
				}

				
			    public String HORA_DISPENSACION;

				public String getHORA_DISPENSACION () {
					return this.HORA_DISPENSACION;
				}

				public Boolean HORA_DISPENSACIONIsNullable(){
				    return true;
				}
				public Boolean HORA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer HORA_DISPENSACIONLength(){
				    return 8;
				}
				public Integer HORA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String HORA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String HORA_DISPENSACIONComment(){
				
				    return "Hora dispensaci\uFFFDn";
				
				}
				public String HORA_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String HORA_DISPENSACIONOriginalDbColumnName(){
				
					return "HORA_DISPENSACION";
				
				}

				
			    public BigDecimal VALOR_SUBTOTAL_FORMULA;

				public BigDecimal getVALOR_SUBTOTAL_FORMULA () {
					return this.VALOR_SUBTOTAL_FORMULA;
				}

				public Boolean VALOR_SUBTOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_SUBTOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_SUBTOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_SUBTOTAL_FORMULAPrecision(){
				    return null;
				}
				public String VALOR_SUBTOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_SUBTOTAL_FORMULAComment(){
				
				    return "Subtotal del movimiento";
				
				}
				public String VALOR_SUBTOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_SUBTOTAL_FORMULA";
				
				}

				
			    public BigDecimal VALOR_IVA_FORMULA;

				public BigDecimal getVALOR_IVA_FORMULA () {
					return this.VALOR_IVA_FORMULA;
				}

				public Boolean VALOR_IVA_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_IVA_FORMULAPrecision(){
				    return null;
				}
				public String VALOR_IVA_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_IVA_FORMULAComment(){
				
				    return "Valor total iva";
				
				}
				public String VALOR_IVA_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_FORMULAOriginalDbColumnName(){
				
					return "VALOR_IVA_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_FORMULA;

				public BigDecimal getVALOR_TOTAL_FORMULA () {
					return this.VALOR_TOTAL_FORMULA;
				}

				public Boolean VALOR_TOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_FORMULAPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_FORMULAComment(){
				
				    return "Valor total";
				
				}
				public String VALOR_TOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_FORMULA";
				
				}

				
			    public BigDecimal SUBTOTAL_INT_FORMULA;

				public BigDecimal getSUBTOTAL_INT_FORMULA () {
					return this.SUBTOTAL_INT_FORMULA;
				}

				public Boolean SUBTOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean SUBTOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer SUBTOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer SUBTOTAL_INT_FORMULAPrecision(){
				    return null;
				}
				public String SUBTOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String SUBTOTAL_INT_FORMULAComment(){
				
				    return "Subtotal de la intermediaci\uFFFDn";
				
				}
				public String SUBTOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String SUBTOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "SUBTOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_IVA_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_IVA_INT_FORMULA () {
					return this.VALOR_TOTAL_IVA_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULAPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_IVA_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAComment(){
				
				    return "Total del iva para la intermediaci\uFFFDn";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_IVA_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_INT_FORMULA () {
					return this.VALOR_TOTAL_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INT_FORMULAPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INT_FORMULAComment(){
				
				    return "Subtotal + Total del iva para la intermediaci\uFFFDn";
				
				}
				public String VALOR_TOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_FINAL_FORMULA;

				public BigDecimal getVALOR_FINAL_FORMULA () {
					return this.VALOR_FINAL_FORMULA;
				}

				public Boolean VALOR_FINAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_FINAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_FINAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_FINAL_FORMULAPrecision(){
				    return null;
				}
				public String VALOR_FINAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_FINAL_FORMULAComment(){
				
				    return " VALOR_TOTAL_FORMULA+  VALOR_TOTAL_IVA_INT_FORMULA + SUBTOTAL_INT_FORMULA";
				
				}
				public String VALOR_FINAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_FINAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_FINAL_FORMULA";
				
				}

				
			    public BigDecimal UORG_DISPENSA_ID;

				public BigDecimal getUORG_DISPENSA_ID () {
					return this.UORG_DISPENSA_ID;
				}

				public Boolean UORG_DISPENSA_IDIsNullable(){
				    return true;
				}
				public Boolean UORG_DISPENSA_IDIsKey(){
				    return false;
				}
				public Integer UORG_DISPENSA_IDLength(){
				    return 0;
				}
				public Integer UORG_DISPENSA_IDPrecision(){
				    return null;
				}
				public String UORG_DISPENSA_IDDefault(){
				
					return null;
				
				}
				public String UORG_DISPENSA_IDComment(){
				
				    return "Unidad organizacional que dispensa";
				
				}
				public String UORG_DISPENSA_IDPattern(){
				
					return "";
				
				}
				public String UORG_DISPENSA_IDOriginalDbColumnName(){
				
					return "UORG_DISPENSA_ID";
				
				}

				
			    public String BODEGA;

				public String getBODEGA () {
					return this.BODEGA;
				}

				public Boolean BODEGAIsNullable(){
				    return true;
				}
				public Boolean BODEGAIsKey(){
				    return false;
				}
				public Integer BODEGALength(){
				    return 150;
				}
				public Integer BODEGAPrecision(){
				    return 0;
				}
				public String BODEGADefault(){
				
					return null;
				
				}
				public String BODEGAComment(){
				
				    return "Nombre de la bodega";
				
				}
				public String BODEGAPattern(){
				
					return "";
				
				}
				public String BODEGAOriginalDbColumnName(){
				
					return "BODEGA";
				
				}

				
			    public java.util.Date FMOVIMIENTO;

				public java.util.Date getFMOVIMIENTO () {
					return this.FMOVIMIENTO;
				}

				public Boolean FMOVIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FMOVIMIENTOIsKey(){
				    return false;
				}
				public Integer FMOVIMIENTOLength(){
				    return 7;
				}
				public Integer FMOVIMIENTOPrecision(){
				    return 0;
				}
				public String FMOVIMIENTODefault(){
				
					return null;
				
				}
				public String FMOVIMIENTOComment(){
				
				    return "Fecha del movimiento";
				
				}
				public String FMOVIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMOVIMIENTOOriginalDbColumnName(){
				
					return "FMOVIMIENTO";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "FK - GEN_PERSONAS (Responsable del movimiento)";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 25;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "Lote del inventario";
				
				}
				public String LOTEPattern(){
				
					return "";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public java.util.Date FVENCIMIENTO;

				public java.util.Date getFVENCIMIENTO () {
					return this.FVENCIMIENTO;
				}

				public Boolean FVENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FVENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FVENCIMIENTOLength(){
				    return 7;
				}
				public Integer FVENCIMIENTOPrecision(){
				    return 0;
				}
				public String FVENCIMIENTODefault(){
				
					return null;
				
				}
				public String FVENCIMIENTOComment(){
				
				    return "Fecha de vencimiento";
				
				}
				public String FVENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVENCIMIENTOOriginalDbColumnName(){
				
					return "FVENCIMIENTO";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return false;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return null;
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "FK - MED_PRODUCTOS";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public String TIPO_MEDICAMENTO;

				public String getTIPO_MEDICAMENTO () {
					return this.TIPO_MEDICAMENTO;
				}

				public Boolean TIPO_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_MEDICAMENTOLength(){
				    return 200;
				}
				public Integer TIPO_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String TIPO_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String TIPO_MEDICAMENTOComment(){
				
				    return "Tipo de medicamento";
				
				}
				public String TIPO_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_MEDICAMENTOOriginalDbColumnName(){
				
					return "TIPO_MEDICAMENTO";
				
				}

				
			    public String CODIGO_OPERADOR_MEDICAMENTO;

				public String getCODIGO_OPERADOR_MEDICAMENTO () {
					return this.CODIGO_OPERADOR_MEDICAMENTO;
				}

				public Boolean CODIGO_OPERADOR_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADOR_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADOR_MEDICAMENTOLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADOR_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADOR_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOComment(){
				
				    return "C\uFFFDdigo operador medicamento";
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOOriginalDbColumnName(){
				
					return "CODIGO_OPERADOR_MEDICAMENTO";
				
				}

				
			    public String CARACTERISTICAS_MEDICAMENTO;

				public String getCARACTERISTICAS_MEDICAMENTO () {
					return this.CARACTERISTICAS_MEDICAMENTO;
				}

				public Boolean CARACTERISTICAS_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAS_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICAS_MEDICAMENTOLength(){
				    return 4000;
				}
				public Integer CARACTERISTICAS_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String CARACTERISTICAS_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String CARACTERISTICAS_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAS_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICAS_MEDICAMENTOOriginalDbColumnName(){
				
					return "CARACTERISTICAS_MEDICAMENTO";
				
				}

				
			    public String USUARIO_DESPACHADOR;

				public String getUSUARIO_DESPACHADOR () {
					return this.USUARIO_DESPACHADOR;
				}

				public Boolean USUARIO_DESPACHADORIsNullable(){
				    return false;
				}
				public Boolean USUARIO_DESPACHADORIsKey(){
				    return false;
				}
				public Integer USUARIO_DESPACHADORLength(){
				    return 50;
				}
				public Integer USUARIO_DESPACHADORPrecision(){
				    return 0;
				}
				public String USUARIO_DESPACHADORDefault(){
				
					return null;
				
				}
				public String USUARIO_DESPACHADORComment(){
				
				    return "Nombre de usuario ";
				
				}
				public String USUARIO_DESPACHADORPattern(){
				
					return "";
				
				}
				public String USUARIO_DESPACHADOROriginalDbColumnName(){
				
					return "USUARIO_DESPACHADOR";
				
				}

				
			    public String CODIGOBARRAS;

				public String getCODIGOBARRAS () {
					return this.CODIGOBARRAS;
				}

				public Boolean CODIGOBARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGOBARRASIsKey(){
				    return false;
				}
				public Integer CODIGOBARRASLength(){
				    return null;
				}
				public Integer CODIGOBARRASPrecision(){
				    return null;
				}
				public String CODIGOBARRASDefault(){
				
					return null;
				
				}
				public String CODIGOBARRASComment(){
				
				    return "";
				
				}
				public String CODIGOBARRASPattern(){
				
					return "";
				
				}
				public String CODIGOBARRASOriginalDbColumnName(){
				
					return "CODIGOBARRAS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.DMOVIMIENTOS_ID == null) ? 0 : this.DMOVIMIENTOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final out3Struct other = (out3Struct) obj;
		
						if (this.DMOVIMIENTOS_ID == null) {
							if (other.DMOVIMIENTOS_ID != null)
								return false;
						
						} else if (!this.DMOVIMIENTOS_ID.equals(other.DMOVIMIENTOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(out3Struct other) {

		other.DMOVIMIENTOS_ID = this.DMOVIMIENTOS_ID;
	            other.MOVIMIENTOS_ID = this.MOVIMIENTOS_ID;
	            other.CANTIDAD_DISPENSADA = this.CANTIDAD_DISPENSADA;
	            other.VALOR_UNITARIO_ITEM = this.VALOR_UNITARIO_ITEM;
	            other.PORCENTAJE_IVA = this.PORCENTAJE_IVA;
	            other.VALOR_IVA_UNITARIO = this.VALOR_IVA_UNITARIO;
	            other.VALOR_INTERMEDIACION = this.VALOR_INTERMEDIACION;
	            other.PORCENTAJE_INTERMEDIACION = this.PORCENTAJE_INTERMEDIACION;
	            other.VALOR_IVA_INTERMEDIACION = this.VALOR_IVA_INTERMEDIACION;
	            other.VALOR_TOTAL_MEDICAMENTO = this.VALOR_TOTAL_MEDICAMENTO;
	            other.VALOR_TOTAL_INTERMEDIACION = this.VALOR_TOTAL_INTERMEDIACION;
	            other.TOTAL_TRANSACCION_COMPLETA = this.TOTAL_TRANSACCION_COMPLETA;
	            other.HDCONTRATOS_ID = this.HDCONTRATOS_ID;
	            other.DFORMULA_ID = this.DFORMULA_ID;
	            other.FECHA_DISPENSACION = this.FECHA_DISPENSACION;
	            other.HORA_DISPENSACION = this.HORA_DISPENSACION;
	            other.VALOR_SUBTOTAL_FORMULA = this.VALOR_SUBTOTAL_FORMULA;
	            other.VALOR_IVA_FORMULA = this.VALOR_IVA_FORMULA;
	            other.VALOR_TOTAL_FORMULA = this.VALOR_TOTAL_FORMULA;
	            other.SUBTOTAL_INT_FORMULA = this.SUBTOTAL_INT_FORMULA;
	            other.VALOR_TOTAL_IVA_INT_FORMULA = this.VALOR_TOTAL_IVA_INT_FORMULA;
	            other.VALOR_TOTAL_INT_FORMULA = this.VALOR_TOTAL_INT_FORMULA;
	            other.VALOR_FINAL_FORMULA = this.VALOR_FINAL_FORMULA;
	            other.UORG_DISPENSA_ID = this.UORG_DISPENSA_ID;
	            other.BODEGA = this.BODEGA;
	            other.FMOVIMIENTO = this.FMOVIMIENTO;
	            other.USUARIOS_ID = this.USUARIOS_ID;
	            other.LOTE = this.LOTE;
	            other.FVENCIMIENTO = this.FVENCIMIENTO;
	            other.PRODUCTOS_ID = this.PRODUCTOS_ID;
	            other.TIPO_MEDICAMENTO = this.TIPO_MEDICAMENTO;
	            other.CODIGO_OPERADOR_MEDICAMENTO = this.CODIGO_OPERADOR_MEDICAMENTO;
	            other.CARACTERISTICAS_MEDICAMENTO = this.CARACTERISTICAS_MEDICAMENTO;
	            other.USUARIO_DESPACHADOR = this.USUARIO_DESPACHADOR;
	            other.CODIGOBARRAS = this.CODIGOBARRAS;
	            
	}

	public void copyKeysDataTo(out3Struct other) {

		other.DMOVIMIENTOS_ID = this.DMOVIMIENTOS_ID;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FVENCIMIENTO = readDate(dis);
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.TIPO_MEDICAMENTO = readString(dis);
					
					this.CODIGO_OPERADOR_MEDICAMENTO = readString(dis);
					
					this.CARACTERISTICAS_MEDICAMENTO = readString(dis);
					
					this.USUARIO_DESPACHADOR = readString(dis);
					
					this.CODIGOBARRAS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FVENCIMIENTO = readDate(dis);
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.TIPO_MEDICAMENTO = readString(dis);
					
					this.CODIGO_OPERADOR_MEDICAMENTO = readString(dis);
					
					this.CARACTERISTICAS_MEDICAMENTO = readString(dis);
					
					this.USUARIO_DESPACHADOR = readString(dis);
					
					this.CODIGOBARRAS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FVENCIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// String
				
						writeString(this.TIPO_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.USUARIO_DESPACHADOR,dos);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FVENCIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// String
				
						writeString(this.TIPO_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.USUARIO_DESPACHADOR,dos);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DMOVIMIENTOS_ID="+String.valueOf(DMOVIMIENTOS_ID));
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",CANTIDAD_DISPENSADA="+String.valueOf(CANTIDAD_DISPENSADA));
		sb.append(",VALOR_UNITARIO_ITEM="+String.valueOf(VALOR_UNITARIO_ITEM));
		sb.append(",PORCENTAJE_IVA="+String.valueOf(PORCENTAJE_IVA));
		sb.append(",VALOR_IVA_UNITARIO="+String.valueOf(VALOR_IVA_UNITARIO));
		sb.append(",VALOR_INTERMEDIACION="+String.valueOf(VALOR_INTERMEDIACION));
		sb.append(",PORCENTAJE_INTERMEDIACION="+String.valueOf(PORCENTAJE_INTERMEDIACION));
		sb.append(",VALOR_IVA_INTERMEDIACION="+String.valueOf(VALOR_IVA_INTERMEDIACION));
		sb.append(",VALOR_TOTAL_MEDICAMENTO="+String.valueOf(VALOR_TOTAL_MEDICAMENTO));
		sb.append(",VALOR_TOTAL_INTERMEDIACION="+String.valueOf(VALOR_TOTAL_INTERMEDIACION));
		sb.append(",TOTAL_TRANSACCION_COMPLETA="+String.valueOf(TOTAL_TRANSACCION_COMPLETA));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FECHA_DISPENSACION="+String.valueOf(FECHA_DISPENSACION));
		sb.append(",HORA_DISPENSACION="+HORA_DISPENSACION);
		sb.append(",VALOR_SUBTOTAL_FORMULA="+String.valueOf(VALOR_SUBTOTAL_FORMULA));
		sb.append(",VALOR_IVA_FORMULA="+String.valueOf(VALOR_IVA_FORMULA));
		sb.append(",VALOR_TOTAL_FORMULA="+String.valueOf(VALOR_TOTAL_FORMULA));
		sb.append(",SUBTOTAL_INT_FORMULA="+String.valueOf(SUBTOTAL_INT_FORMULA));
		sb.append(",VALOR_TOTAL_IVA_INT_FORMULA="+String.valueOf(VALOR_TOTAL_IVA_INT_FORMULA));
		sb.append(",VALOR_TOTAL_INT_FORMULA="+String.valueOf(VALOR_TOTAL_INT_FORMULA));
		sb.append(",VALOR_FINAL_FORMULA="+String.valueOf(VALOR_FINAL_FORMULA));
		sb.append(",UORG_DISPENSA_ID="+String.valueOf(UORG_DISPENSA_ID));
		sb.append(",BODEGA="+BODEGA);
		sb.append(",FMOVIMIENTO="+String.valueOf(FMOVIMIENTO));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",LOTE="+LOTE);
		sb.append(",FVENCIMIENTO="+String.valueOf(FVENCIMIENTO));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",TIPO_MEDICAMENTO="+TIPO_MEDICAMENTO);
		sb.append(",CODIGO_OPERADOR_MEDICAMENTO="+CODIGO_OPERADOR_MEDICAMENTO);
		sb.append(",CARACTERISTICAS_MEDICAMENTO="+CARACTERISTICAS_MEDICAMENTO);
		sb.append(",USUARIO_DESPACHADOR="+USUARIO_DESPACHADOR);
		sb.append(",CODIGOBARRAS="+CODIGOBARRAS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out3Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.DMOVIMIENTOS_ID, other.DMOVIMIENTOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out15Struct implements routines.system.IPersistableRow<out15Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal DMOVIMIENTOS_ID;

				public BigDecimal getDMOVIMIENTOS_ID () {
					return this.DMOVIMIENTOS_ID;
				}

				public Boolean DMOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean DMOVIMIENTOS_IDIsKey(){
				    return true;
				}
				public Integer DMOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer DMOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String DMOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String DMOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String DMOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String DMOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "DMOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal CANTIDAD_DISPENSADA;

				public BigDecimal getCANTIDAD_DISPENSADA () {
					return this.CANTIDAD_DISPENSADA;
				}

				public Boolean CANTIDAD_DISPENSADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_DISPENSADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_DISPENSADALength(){
				    return 0;
				}
				public Integer CANTIDAD_DISPENSADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_DISPENSADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_DISPENSADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_DISPENSADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_DISPENSADAOriginalDbColumnName(){
				
					return "CANTIDAD_DISPENSADA";
				
				}

				
			    public BigDecimal VALOR_UNITARIO_ITEM;

				public BigDecimal getVALOR_UNITARIO_ITEM () {
					return this.VALOR_UNITARIO_ITEM;
				}

				public Boolean VALOR_UNITARIO_ITEMIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIO_ITEMIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIO_ITEMLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIO_ITEMPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIO_ITEMDefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIO_ITEMComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIO_ITEMPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIO_ITEMOriginalDbColumnName(){
				
					return "VALOR_UNITARIO_ITEM";
				
				}

				
			    public BigDecimal PORCENTAJE_IVA;

				public BigDecimal getPORCENTAJE_IVA () {
					return this.PORCENTAJE_IVA;
				}

				public Boolean PORCENTAJE_IVAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_IVAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_IVALength(){
				    return 0;
				}
				public Integer PORCENTAJE_IVAPrecision(){
				    return 0;
				}
				public String PORCENTAJE_IVADefault(){
				
					return null;
				
				}
				public String PORCENTAJE_IVAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_IVAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_IVAOriginalDbColumnName(){
				
					return "PORCENTAJE_IVA";
				
				}

				
			    public BigDecimal VALOR_IVA_UNITARIO;

				public BigDecimal getVALOR_IVA_UNITARIO () {
					return this.VALOR_IVA_UNITARIO;
				}

				public Boolean VALOR_IVA_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_IVA_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_IVA_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_IVA_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_IVA_UNITARIO";
				
				}

				
			    public BigDecimal VALOR_INTERMEDIACION;

				public BigDecimal getVALOR_INTERMEDIACION () {
					return this.VALOR_INTERMEDIACION;
				}

				public Boolean VALOR_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_INTERMEDIACION";
				
				}

				
			    public BigDecimal PORCENTAJE_INTERMEDIACION;

				public BigDecimal getPORCENTAJE_INTERMEDIACION () {
					return this.PORCENTAJE_INTERMEDIACION;
				}

				public Boolean PORCENTAJE_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer PORCENTAJE_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String PORCENTAJE_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String PORCENTAJE_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONOriginalDbColumnName(){
				
					return "PORCENTAJE_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_IVA_INTERMEDIACION;

				public BigDecimal getVALOR_IVA_INTERMEDIACION () {
					return this.VALOR_IVA_INTERMEDIACION;
				}

				public Boolean VALOR_IVA_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_IVA_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_IVA_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_IVA_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_TOTAL_MEDICAMENTO;

				public BigDecimal getVALOR_TOTAL_MEDICAMENTO () {
					return this.VALOR_TOTAL_MEDICAMENTO;
				}

				public Boolean VALOR_TOTAL_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOOriginalDbColumnName(){
				
					return "VALOR_TOTAL_MEDICAMENTO";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INTERMEDIACION;

				public BigDecimal getVALOR_TOTAL_INTERMEDIACION () {
					return this.VALOR_TOTAL_INTERMEDIACION;
				}

				public Boolean VALOR_TOTAL_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INTERMEDIACION";
				
				}

				
			    public BigDecimal TOTAL_TRANSACCION_COMPLETA;

				public BigDecimal getTOTAL_TRANSACCION_COMPLETA () {
					return this.TOTAL_TRANSACCION_COMPLETA;
				}

				public Boolean TOTAL_TRANSACCION_COMPLETAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_TRANSACCION_COMPLETAIsKey(){
				    return false;
				}
				public Integer TOTAL_TRANSACCION_COMPLETALength(){
				    return 0;
				}
				public Integer TOTAL_TRANSACCION_COMPLETAPrecision(){
				    return 0;
				}
				public String TOTAL_TRANSACCION_COMPLETADefault(){
				
					return null;
				
				}
				public String TOTAL_TRANSACCION_COMPLETAComment(){
				
				    return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAPattern(){
				
					return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAOriginalDbColumnName(){
				
					return "TOTAL_TRANSACCION_COMPLETA";
				
				}

				
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return 0;
				}
				public String INVENTARIOS_IDDefault(){
				
					return null;
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return 0;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return null;
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return 0;
				}
				public String DFORMULA_IDDefault(){
				
					return null;
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public java.util.Date FECHA_DISPENSACION;

				public java.util.Date getFECHA_DISPENSACION () {
					return this.FECHA_DISPENSACION;
				}

				public Boolean FECHA_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer FECHA_DISPENSACIONLength(){
				    return 0;
				}
				public Integer FECHA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String FECHA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String FECHA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String FECHA_DISPENSACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_DISPENSACIONOriginalDbColumnName(){
				
					return "FECHA_DISPENSACION";
				
				}

				
			    public String HORA_DISPENSACION;

				public String getHORA_DISPENSACION () {
					return this.HORA_DISPENSACION;
				}

				public Boolean HORA_DISPENSACIONIsNullable(){
				    return true;
				}
				public Boolean HORA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer HORA_DISPENSACIONLength(){
				    return 8;
				}
				public Integer HORA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String HORA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String HORA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String HORA_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String HORA_DISPENSACIONOriginalDbColumnName(){
				
					return "HORA_DISPENSACION";
				
				}

				
			    public BigDecimal VALOR_SUBTOTAL_FORMULA;

				public BigDecimal getVALOR_SUBTOTAL_FORMULA () {
					return this.VALOR_SUBTOTAL_FORMULA;
				}

				public Boolean VALOR_SUBTOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_SUBTOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_SUBTOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_SUBTOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_SUBTOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_SUBTOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_SUBTOTAL_FORMULA";
				
				}

				
			    public BigDecimal VALOR_IVA_FORMULA;

				public BigDecimal getVALOR_IVA_FORMULA () {
					return this.VALOR_IVA_FORMULA;
				}

				public Boolean VALOR_IVA_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_IVA_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_IVA_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_IVA_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_FORMULAOriginalDbColumnName(){
				
					return "VALOR_IVA_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_FORMULA;

				public BigDecimal getVALOR_TOTAL_FORMULA () {
					return this.VALOR_TOTAL_FORMULA;
				}

				public Boolean VALOR_TOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_FORMULA";
				
				}

				
			    public BigDecimal SUBTOTAL_INT_FORMULA;

				public BigDecimal getSUBTOTAL_INT_FORMULA () {
					return this.SUBTOTAL_INT_FORMULA;
				}

				public Boolean SUBTOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean SUBTOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer SUBTOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer SUBTOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String SUBTOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String SUBTOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String SUBTOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String SUBTOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "SUBTOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_IVA_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_IVA_INT_FORMULA () {
					return this.VALOR_TOTAL_IVA_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_IVA_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_IVA_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_INT_FORMULA () {
					return this.VALOR_TOTAL_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_FINAL_FORMULA;

				public BigDecimal getVALOR_FINAL_FORMULA () {
					return this.VALOR_FINAL_FORMULA;
				}

				public Boolean VALOR_FINAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_FINAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_FINAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_FINAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_FINAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_FINAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_FINAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_FINAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_FINAL_FORMULA";
				
				}

				
			    public BigDecimal UORG_DISPENSA_ID;

				public BigDecimal getUORG_DISPENSA_ID () {
					return this.UORG_DISPENSA_ID;
				}

				public Boolean UORG_DISPENSA_IDIsNullable(){
				    return true;
				}
				public Boolean UORG_DISPENSA_IDIsKey(){
				    return false;
				}
				public Integer UORG_DISPENSA_IDLength(){
				    return 0;
				}
				public Integer UORG_DISPENSA_IDPrecision(){
				    return 0;
				}
				public String UORG_DISPENSA_IDDefault(){
				
					return null;
				
				}
				public String UORG_DISPENSA_IDComment(){
				
				    return "";
				
				}
				public String UORG_DISPENSA_IDPattern(){
				
					return "";
				
				}
				public String UORG_DISPENSA_IDOriginalDbColumnName(){
				
					return "UORG_DISPENSA_ID";
				
				}

				
			    public String BODEGA;

				public String getBODEGA () {
					return this.BODEGA;
				}

				public Boolean BODEGAIsNullable(){
				    return true;
				}
				public Boolean BODEGAIsKey(){
				    return false;
				}
				public Integer BODEGALength(){
				    return 150;
				}
				public Integer BODEGAPrecision(){
				    return 0;
				}
				public String BODEGADefault(){
				
					return null;
				
				}
				public String BODEGAComment(){
				
				    return "";
				
				}
				public String BODEGAPattern(){
				
					return "";
				
				}
				public String BODEGAOriginalDbColumnName(){
				
					return "BODEGA";
				
				}

				
			    public java.util.Date FMOVIMIENTO;

				public java.util.Date getFMOVIMIENTO () {
					return this.FMOVIMIENTO;
				}

				public Boolean FMOVIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FMOVIMIENTOIsKey(){
				    return false;
				}
				public Integer FMOVIMIENTOLength(){
				    return 0;
				}
				public Integer FMOVIMIENTOPrecision(){
				    return 0;
				}
				public String FMOVIMIENTODefault(){
				
					return null;
				
				}
				public String FMOVIMIENTOComment(){
				
				    return "";
				
				}
				public String FMOVIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMOVIMIENTOOriginalDbColumnName(){
				
					return "FMOVIMIENTO";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return false;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 25;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public java.util.Date FECHA_VENCIMIENTO;

				public java.util.Date getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String CODIGOBARRAS;

				public String getCODIGOBARRAS () {
					return this.CODIGOBARRAS;
				}

				public Boolean CODIGOBARRASIsNullable(){
				    return false;
				}
				public Boolean CODIGOBARRASIsKey(){
				    return false;
				}
				public Integer CODIGOBARRASLength(){
				    return 500;
				}
				public Integer CODIGOBARRASPrecision(){
				    return 0;
				}
				public String CODIGOBARRASDefault(){
				
					return null;
				
				}
				public String CODIGOBARRASComment(){
				
				    return "";
				
				}
				public String CODIGOBARRASPattern(){
				
					return "";
				
				}
				public String CODIGOBARRASOriginalDbColumnName(){
				
					return "CODIGOBARRAS";
				
				}

				
			    public String CODIGO_OPERADOR_MEDICAMENTO;

				public String getCODIGO_OPERADOR_MEDICAMENTO () {
					return this.CODIGO_OPERADOR_MEDICAMENTO;
				}

				public Boolean CODIGO_OPERADOR_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADOR_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADOR_MEDICAMENTOLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADOR_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADOR_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOOriginalDbColumnName(){
				
					return "CODIGO_OPERADOR_MEDICAMENTO";
				
				}

				
			    public String TIPO_MEDICAMENTO;

				public String getTIPO_MEDICAMENTO () {
					return this.TIPO_MEDICAMENTO;
				}

				public Boolean TIPO_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_MEDICAMENTOLength(){
				    return 200;
				}
				public Integer TIPO_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String TIPO_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String TIPO_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_MEDICAMENTOOriginalDbColumnName(){
				
					return "TIPO_MEDICAMENTO";
				
				}

				
			    public String CARACTERISTICAS_MEDICAMENTO;

				public String getCARACTERISTICAS_MEDICAMENTO () {
					return this.CARACTERISTICAS_MEDICAMENTO;
				}

				public Boolean CARACTERISTICAS_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAS_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICAS_MEDICAMENTOLength(){
				    return 4000;
				}
				public Integer CARACTERISTICAS_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String CARACTERISTICAS_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String CARACTERISTICAS_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAS_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICAS_MEDICAMENTOOriginalDbColumnName(){
				
					return "CARACTERISTICAS_MEDICAMENTO";
				
				}

				
			    public String USUARIO_DESPACHADOR;

				public String getUSUARIO_DESPACHADOR () {
					return this.USUARIO_DESPACHADOR;
				}

				public Boolean USUARIO_DESPACHADORIsNullable(){
				    return false;
				}
				public Boolean USUARIO_DESPACHADORIsKey(){
				    return false;
				}
				public Integer USUARIO_DESPACHADORLength(){
				    return 50;
				}
				public Integer USUARIO_DESPACHADORPrecision(){
				    return 0;
				}
				public String USUARIO_DESPACHADORDefault(){
				
					return null;
				
				}
				public String USUARIO_DESPACHADORComment(){
				
				    return "Nombre de usuario ";
				
				}
				public String USUARIO_DESPACHADORPattern(){
				
					return "";
				
				}
				public String USUARIO_DESPACHADOROriginalDbColumnName(){
				
					return "USUARIO_DESPACHADOR";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
					this.CODIGOBARRAS = readString(dis);
					
					this.CODIGO_OPERADOR_MEDICAMENTO = readString(dis);
					
					this.TIPO_MEDICAMENTO = readString(dis);
					
					this.CARACTERISTICAS_MEDICAMENTO = readString(dis);
					
					this.USUARIO_DESPACHADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
					this.CODIGOBARRAS = readString(dis);
					
					this.CODIGO_OPERADOR_MEDICAMENTO = readString(dis);
					
					this.TIPO_MEDICAMENTO = readString(dis);
					
					this.CARACTERISTICAS_MEDICAMENTO = readString(dis);
					
					this.USUARIO_DESPACHADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.TIPO_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.USUARIO_DESPACHADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.TIPO_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.USUARIO_DESPACHADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DMOVIMIENTOS_ID="+String.valueOf(DMOVIMIENTOS_ID));
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",CANTIDAD_DISPENSADA="+String.valueOf(CANTIDAD_DISPENSADA));
		sb.append(",VALOR_UNITARIO_ITEM="+String.valueOf(VALOR_UNITARIO_ITEM));
		sb.append(",PORCENTAJE_IVA="+String.valueOf(PORCENTAJE_IVA));
		sb.append(",VALOR_IVA_UNITARIO="+String.valueOf(VALOR_IVA_UNITARIO));
		sb.append(",VALOR_INTERMEDIACION="+String.valueOf(VALOR_INTERMEDIACION));
		sb.append(",PORCENTAJE_INTERMEDIACION="+String.valueOf(PORCENTAJE_INTERMEDIACION));
		sb.append(",VALOR_IVA_INTERMEDIACION="+String.valueOf(VALOR_IVA_INTERMEDIACION));
		sb.append(",VALOR_TOTAL_MEDICAMENTO="+String.valueOf(VALOR_TOTAL_MEDICAMENTO));
		sb.append(",VALOR_TOTAL_INTERMEDIACION="+String.valueOf(VALOR_TOTAL_INTERMEDIACION));
		sb.append(",TOTAL_TRANSACCION_COMPLETA="+String.valueOf(TOTAL_TRANSACCION_COMPLETA));
		sb.append(",INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FECHA_DISPENSACION="+String.valueOf(FECHA_DISPENSACION));
		sb.append(",HORA_DISPENSACION="+HORA_DISPENSACION);
		sb.append(",VALOR_SUBTOTAL_FORMULA="+String.valueOf(VALOR_SUBTOTAL_FORMULA));
		sb.append(",VALOR_IVA_FORMULA="+String.valueOf(VALOR_IVA_FORMULA));
		sb.append(",VALOR_TOTAL_FORMULA="+String.valueOf(VALOR_TOTAL_FORMULA));
		sb.append(",SUBTOTAL_INT_FORMULA="+String.valueOf(SUBTOTAL_INT_FORMULA));
		sb.append(",VALOR_TOTAL_IVA_INT_FORMULA="+String.valueOf(VALOR_TOTAL_IVA_INT_FORMULA));
		sb.append(",VALOR_TOTAL_INT_FORMULA="+String.valueOf(VALOR_TOTAL_INT_FORMULA));
		sb.append(",VALOR_FINAL_FORMULA="+String.valueOf(VALOR_FINAL_FORMULA));
		sb.append(",UORG_DISPENSA_ID="+String.valueOf(UORG_DISPENSA_ID));
		sb.append(",BODEGA="+BODEGA);
		sb.append(",FMOVIMIENTO="+String.valueOf(FMOVIMIENTO));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+String.valueOf(FECHA_VENCIMIENTO));
		sb.append(",CODIGOBARRAS="+CODIGOBARRAS);
		sb.append(",CODIGO_OPERADOR_MEDICAMENTO="+CODIGO_OPERADOR_MEDICAMENTO);
		sb.append(",TIPO_MEDICAMENTO="+TIPO_MEDICAMENTO);
		sb.append(",CARACTERISTICAS_MEDICAMENTO="+CARACTERISTICAS_MEDICAMENTO);
		sb.append(",USUARIO_DESPACHADOR="+USUARIO_DESPACHADOR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out14Struct implements routines.system.IPersistableRow<out14Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal DMOVIMIENTOS_ID;

				public BigDecimal getDMOVIMIENTOS_ID () {
					return this.DMOVIMIENTOS_ID;
				}

				public Boolean DMOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean DMOVIMIENTOS_IDIsKey(){
				    return true;
				}
				public Integer DMOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer DMOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String DMOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String DMOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String DMOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String DMOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "DMOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal CANTIDAD_DISPENSADA;

				public BigDecimal getCANTIDAD_DISPENSADA () {
					return this.CANTIDAD_DISPENSADA;
				}

				public Boolean CANTIDAD_DISPENSADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_DISPENSADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_DISPENSADALength(){
				    return 0;
				}
				public Integer CANTIDAD_DISPENSADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_DISPENSADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_DISPENSADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_DISPENSADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_DISPENSADAOriginalDbColumnName(){
				
					return "CANTIDAD_DISPENSADA";
				
				}

				
			    public BigDecimal VALOR_UNITARIO_ITEM;

				public BigDecimal getVALOR_UNITARIO_ITEM () {
					return this.VALOR_UNITARIO_ITEM;
				}

				public Boolean VALOR_UNITARIO_ITEMIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIO_ITEMIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIO_ITEMLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIO_ITEMPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIO_ITEMDefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIO_ITEMComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIO_ITEMPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIO_ITEMOriginalDbColumnName(){
				
					return "VALOR_UNITARIO_ITEM";
				
				}

				
			    public BigDecimal PORCENTAJE_IVA;

				public BigDecimal getPORCENTAJE_IVA () {
					return this.PORCENTAJE_IVA;
				}

				public Boolean PORCENTAJE_IVAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_IVAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_IVALength(){
				    return 0;
				}
				public Integer PORCENTAJE_IVAPrecision(){
				    return 0;
				}
				public String PORCENTAJE_IVADefault(){
				
					return null;
				
				}
				public String PORCENTAJE_IVAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_IVAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_IVAOriginalDbColumnName(){
				
					return "PORCENTAJE_IVA";
				
				}

				
			    public BigDecimal VALOR_IVA_UNITARIO;

				public BigDecimal getVALOR_IVA_UNITARIO () {
					return this.VALOR_IVA_UNITARIO;
				}

				public Boolean VALOR_IVA_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_IVA_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_IVA_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_IVA_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_IVA_UNITARIO";
				
				}

				
			    public BigDecimal VALOR_INTERMEDIACION;

				public BigDecimal getVALOR_INTERMEDIACION () {
					return this.VALOR_INTERMEDIACION;
				}

				public Boolean VALOR_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_INTERMEDIACION";
				
				}

				
			    public BigDecimal PORCENTAJE_INTERMEDIACION;

				public BigDecimal getPORCENTAJE_INTERMEDIACION () {
					return this.PORCENTAJE_INTERMEDIACION;
				}

				public Boolean PORCENTAJE_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer PORCENTAJE_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String PORCENTAJE_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String PORCENTAJE_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONOriginalDbColumnName(){
				
					return "PORCENTAJE_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_IVA_INTERMEDIACION;

				public BigDecimal getVALOR_IVA_INTERMEDIACION () {
					return this.VALOR_IVA_INTERMEDIACION;
				}

				public Boolean VALOR_IVA_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_IVA_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_IVA_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_IVA_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_TOTAL_MEDICAMENTO;

				public BigDecimal getVALOR_TOTAL_MEDICAMENTO () {
					return this.VALOR_TOTAL_MEDICAMENTO;
				}

				public Boolean VALOR_TOTAL_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOOriginalDbColumnName(){
				
					return "VALOR_TOTAL_MEDICAMENTO";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INTERMEDIACION;

				public BigDecimal getVALOR_TOTAL_INTERMEDIACION () {
					return this.VALOR_TOTAL_INTERMEDIACION;
				}

				public Boolean VALOR_TOTAL_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INTERMEDIACION";
				
				}

				
			    public BigDecimal TOTAL_TRANSACCION_COMPLETA;

				public BigDecimal getTOTAL_TRANSACCION_COMPLETA () {
					return this.TOTAL_TRANSACCION_COMPLETA;
				}

				public Boolean TOTAL_TRANSACCION_COMPLETAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_TRANSACCION_COMPLETAIsKey(){
				    return false;
				}
				public Integer TOTAL_TRANSACCION_COMPLETALength(){
				    return 0;
				}
				public Integer TOTAL_TRANSACCION_COMPLETAPrecision(){
				    return 0;
				}
				public String TOTAL_TRANSACCION_COMPLETADefault(){
				
					return null;
				
				}
				public String TOTAL_TRANSACCION_COMPLETAComment(){
				
				    return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAPattern(){
				
					return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAOriginalDbColumnName(){
				
					return "TOTAL_TRANSACCION_COMPLETA";
				
				}

				
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return 0;
				}
				public String INVENTARIOS_IDDefault(){
				
					return null;
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return 0;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return null;
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return 0;
				}
				public String DFORMULA_IDDefault(){
				
					return null;
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public java.util.Date FECHA_DISPENSACION;

				public java.util.Date getFECHA_DISPENSACION () {
					return this.FECHA_DISPENSACION;
				}

				public Boolean FECHA_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer FECHA_DISPENSACIONLength(){
				    return 0;
				}
				public Integer FECHA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String FECHA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String FECHA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String FECHA_DISPENSACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_DISPENSACIONOriginalDbColumnName(){
				
					return "FECHA_DISPENSACION";
				
				}

				
			    public String HORA_DISPENSACION;

				public String getHORA_DISPENSACION () {
					return this.HORA_DISPENSACION;
				}

				public Boolean HORA_DISPENSACIONIsNullable(){
				    return true;
				}
				public Boolean HORA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer HORA_DISPENSACIONLength(){
				    return 8;
				}
				public Integer HORA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String HORA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String HORA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String HORA_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String HORA_DISPENSACIONOriginalDbColumnName(){
				
					return "HORA_DISPENSACION";
				
				}

				
			    public BigDecimal VALOR_SUBTOTAL_FORMULA;

				public BigDecimal getVALOR_SUBTOTAL_FORMULA () {
					return this.VALOR_SUBTOTAL_FORMULA;
				}

				public Boolean VALOR_SUBTOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_SUBTOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_SUBTOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_SUBTOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_SUBTOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_SUBTOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_SUBTOTAL_FORMULA";
				
				}

				
			    public BigDecimal VALOR_IVA_FORMULA;

				public BigDecimal getVALOR_IVA_FORMULA () {
					return this.VALOR_IVA_FORMULA;
				}

				public Boolean VALOR_IVA_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_IVA_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_IVA_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_IVA_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_FORMULAOriginalDbColumnName(){
				
					return "VALOR_IVA_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_FORMULA;

				public BigDecimal getVALOR_TOTAL_FORMULA () {
					return this.VALOR_TOTAL_FORMULA;
				}

				public Boolean VALOR_TOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_FORMULA";
				
				}

				
			    public BigDecimal SUBTOTAL_INT_FORMULA;

				public BigDecimal getSUBTOTAL_INT_FORMULA () {
					return this.SUBTOTAL_INT_FORMULA;
				}

				public Boolean SUBTOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean SUBTOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer SUBTOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer SUBTOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String SUBTOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String SUBTOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String SUBTOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String SUBTOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "SUBTOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_IVA_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_IVA_INT_FORMULA () {
					return this.VALOR_TOTAL_IVA_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_IVA_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_IVA_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_INT_FORMULA () {
					return this.VALOR_TOTAL_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_FINAL_FORMULA;

				public BigDecimal getVALOR_FINAL_FORMULA () {
					return this.VALOR_FINAL_FORMULA;
				}

				public Boolean VALOR_FINAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_FINAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_FINAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_FINAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_FINAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_FINAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_FINAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_FINAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_FINAL_FORMULA";
				
				}

				
			    public BigDecimal UORG_DISPENSA_ID;

				public BigDecimal getUORG_DISPENSA_ID () {
					return this.UORG_DISPENSA_ID;
				}

				public Boolean UORG_DISPENSA_IDIsNullable(){
				    return true;
				}
				public Boolean UORG_DISPENSA_IDIsKey(){
				    return false;
				}
				public Integer UORG_DISPENSA_IDLength(){
				    return 0;
				}
				public Integer UORG_DISPENSA_IDPrecision(){
				    return 0;
				}
				public String UORG_DISPENSA_IDDefault(){
				
					return null;
				
				}
				public String UORG_DISPENSA_IDComment(){
				
				    return "";
				
				}
				public String UORG_DISPENSA_IDPattern(){
				
					return "";
				
				}
				public String UORG_DISPENSA_IDOriginalDbColumnName(){
				
					return "UORG_DISPENSA_ID";
				
				}

				
			    public String BODEGA;

				public String getBODEGA () {
					return this.BODEGA;
				}

				public Boolean BODEGAIsNullable(){
				    return true;
				}
				public Boolean BODEGAIsKey(){
				    return false;
				}
				public Integer BODEGALength(){
				    return 150;
				}
				public Integer BODEGAPrecision(){
				    return 0;
				}
				public String BODEGADefault(){
				
					return null;
				
				}
				public String BODEGAComment(){
				
				    return "";
				
				}
				public String BODEGAPattern(){
				
					return "";
				
				}
				public String BODEGAOriginalDbColumnName(){
				
					return "BODEGA";
				
				}

				
			    public java.util.Date FMOVIMIENTO;

				public java.util.Date getFMOVIMIENTO () {
					return this.FMOVIMIENTO;
				}

				public Boolean FMOVIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FMOVIMIENTOIsKey(){
				    return false;
				}
				public Integer FMOVIMIENTOLength(){
				    return 0;
				}
				public Integer FMOVIMIENTOPrecision(){
				    return 0;
				}
				public String FMOVIMIENTODefault(){
				
					return null;
				
				}
				public String FMOVIMIENTOComment(){
				
				    return "";
				
				}
				public String FMOVIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMOVIMIENTOOriginalDbColumnName(){
				
					return "FMOVIMIENTO";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return false;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 25;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public java.util.Date FECHA_VENCIMIENTO;

				public java.util.Date getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String CODIGOBARRAS;

				public String getCODIGOBARRAS () {
					return this.CODIGOBARRAS;
				}

				public Boolean CODIGOBARRASIsNullable(){
				    return false;
				}
				public Boolean CODIGOBARRASIsKey(){
				    return false;
				}
				public Integer CODIGOBARRASLength(){
				    return 500;
				}
				public Integer CODIGOBARRASPrecision(){
				    return 0;
				}
				public String CODIGOBARRASDefault(){
				
					return null;
				
				}
				public String CODIGOBARRASComment(){
				
				    return "";
				
				}
				public String CODIGOBARRASPattern(){
				
					return "";
				
				}
				public String CODIGOBARRASOriginalDbColumnName(){
				
					return "CODIGOBARRAS";
				
				}

				
			    public String CODIGO_OPERADOR_MEDICAMENTO;

				public String getCODIGO_OPERADOR_MEDICAMENTO () {
					return this.CODIGO_OPERADOR_MEDICAMENTO;
				}

				public Boolean CODIGO_OPERADOR_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADOR_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADOR_MEDICAMENTOLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADOR_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADOR_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOOriginalDbColumnName(){
				
					return "CODIGO_OPERADOR_MEDICAMENTO";
				
				}

				
			    public String TIPO_MEDICAMENTO;

				public String getTIPO_MEDICAMENTO () {
					return this.TIPO_MEDICAMENTO;
				}

				public Boolean TIPO_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_MEDICAMENTOLength(){
				    return 200;
				}
				public Integer TIPO_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String TIPO_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String TIPO_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_MEDICAMENTOOriginalDbColumnName(){
				
					return "TIPO_MEDICAMENTO";
				
				}

				
			    public String CARACTERISTICAS_MEDICAMENTO;

				public String getCARACTERISTICAS_MEDICAMENTO () {
					return this.CARACTERISTICAS_MEDICAMENTO;
				}

				public Boolean CARACTERISTICAS_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAS_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICAS_MEDICAMENTOLength(){
				    return 4000;
				}
				public Integer CARACTERISTICAS_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String CARACTERISTICAS_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String CARACTERISTICAS_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAS_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICAS_MEDICAMENTOOriginalDbColumnName(){
				
					return "CARACTERISTICAS_MEDICAMENTO";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
					this.CODIGOBARRAS = readString(dis);
					
					this.CODIGO_OPERADOR_MEDICAMENTO = readString(dis);
					
					this.TIPO_MEDICAMENTO = readString(dis);
					
					this.CARACTERISTICAS_MEDICAMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
					this.CODIGOBARRAS = readString(dis);
					
					this.CODIGO_OPERADOR_MEDICAMENTO = readString(dis);
					
					this.TIPO_MEDICAMENTO = readString(dis);
					
					this.CARACTERISTICAS_MEDICAMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.TIPO_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS_MEDICAMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.TIPO_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS_MEDICAMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DMOVIMIENTOS_ID="+String.valueOf(DMOVIMIENTOS_ID));
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",CANTIDAD_DISPENSADA="+String.valueOf(CANTIDAD_DISPENSADA));
		sb.append(",VALOR_UNITARIO_ITEM="+String.valueOf(VALOR_UNITARIO_ITEM));
		sb.append(",PORCENTAJE_IVA="+String.valueOf(PORCENTAJE_IVA));
		sb.append(",VALOR_IVA_UNITARIO="+String.valueOf(VALOR_IVA_UNITARIO));
		sb.append(",VALOR_INTERMEDIACION="+String.valueOf(VALOR_INTERMEDIACION));
		sb.append(",PORCENTAJE_INTERMEDIACION="+String.valueOf(PORCENTAJE_INTERMEDIACION));
		sb.append(",VALOR_IVA_INTERMEDIACION="+String.valueOf(VALOR_IVA_INTERMEDIACION));
		sb.append(",VALOR_TOTAL_MEDICAMENTO="+String.valueOf(VALOR_TOTAL_MEDICAMENTO));
		sb.append(",VALOR_TOTAL_INTERMEDIACION="+String.valueOf(VALOR_TOTAL_INTERMEDIACION));
		sb.append(",TOTAL_TRANSACCION_COMPLETA="+String.valueOf(TOTAL_TRANSACCION_COMPLETA));
		sb.append(",INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FECHA_DISPENSACION="+String.valueOf(FECHA_DISPENSACION));
		sb.append(",HORA_DISPENSACION="+HORA_DISPENSACION);
		sb.append(",VALOR_SUBTOTAL_FORMULA="+String.valueOf(VALOR_SUBTOTAL_FORMULA));
		sb.append(",VALOR_IVA_FORMULA="+String.valueOf(VALOR_IVA_FORMULA));
		sb.append(",VALOR_TOTAL_FORMULA="+String.valueOf(VALOR_TOTAL_FORMULA));
		sb.append(",SUBTOTAL_INT_FORMULA="+String.valueOf(SUBTOTAL_INT_FORMULA));
		sb.append(",VALOR_TOTAL_IVA_INT_FORMULA="+String.valueOf(VALOR_TOTAL_IVA_INT_FORMULA));
		sb.append(",VALOR_TOTAL_INT_FORMULA="+String.valueOf(VALOR_TOTAL_INT_FORMULA));
		sb.append(",VALOR_FINAL_FORMULA="+String.valueOf(VALOR_FINAL_FORMULA));
		sb.append(",UORG_DISPENSA_ID="+String.valueOf(UORG_DISPENSA_ID));
		sb.append(",BODEGA="+BODEGA);
		sb.append(",FMOVIMIENTO="+String.valueOf(FMOVIMIENTO));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+String.valueOf(FECHA_VENCIMIENTO));
		sb.append(",CODIGOBARRAS="+CODIGOBARRAS);
		sb.append(",CODIGO_OPERADOR_MEDICAMENTO="+CODIGO_OPERADOR_MEDICAMENTO);
		sb.append(",TIPO_MEDICAMENTO="+TIPO_MEDICAMENTO);
		sb.append(",CARACTERISTICAS_MEDICAMENTO="+CARACTERISTICAS_MEDICAMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out13Struct implements routines.system.IPersistableRow<out13Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal DMOVIMIENTOS_ID;

				public BigDecimal getDMOVIMIENTOS_ID () {
					return this.DMOVIMIENTOS_ID;
				}

				public Boolean DMOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean DMOVIMIENTOS_IDIsKey(){
				    return true;
				}
				public Integer DMOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer DMOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String DMOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String DMOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String DMOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String DMOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "DMOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal CANTIDAD_DISPENSADA;

				public BigDecimal getCANTIDAD_DISPENSADA () {
					return this.CANTIDAD_DISPENSADA;
				}

				public Boolean CANTIDAD_DISPENSADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_DISPENSADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_DISPENSADALength(){
				    return 0;
				}
				public Integer CANTIDAD_DISPENSADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_DISPENSADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_DISPENSADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_DISPENSADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_DISPENSADAOriginalDbColumnName(){
				
					return "CANTIDAD_DISPENSADA";
				
				}

				
			    public BigDecimal VALOR_UNITARIO_ITEM;

				public BigDecimal getVALOR_UNITARIO_ITEM () {
					return this.VALOR_UNITARIO_ITEM;
				}

				public Boolean VALOR_UNITARIO_ITEMIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIO_ITEMIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIO_ITEMLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIO_ITEMPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIO_ITEMDefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIO_ITEMComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIO_ITEMPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIO_ITEMOriginalDbColumnName(){
				
					return "VALOR_UNITARIO_ITEM";
				
				}

				
			    public BigDecimal PORCENTAJE_IVA;

				public BigDecimal getPORCENTAJE_IVA () {
					return this.PORCENTAJE_IVA;
				}

				public Boolean PORCENTAJE_IVAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_IVAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_IVALength(){
				    return 0;
				}
				public Integer PORCENTAJE_IVAPrecision(){
				    return 0;
				}
				public String PORCENTAJE_IVADefault(){
				
					return null;
				
				}
				public String PORCENTAJE_IVAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_IVAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_IVAOriginalDbColumnName(){
				
					return "PORCENTAJE_IVA";
				
				}

				
			    public BigDecimal VALOR_IVA_UNITARIO;

				public BigDecimal getVALOR_IVA_UNITARIO () {
					return this.VALOR_IVA_UNITARIO;
				}

				public Boolean VALOR_IVA_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_IVA_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_IVA_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_IVA_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_IVA_UNITARIO";
				
				}

				
			    public BigDecimal VALOR_INTERMEDIACION;

				public BigDecimal getVALOR_INTERMEDIACION () {
					return this.VALOR_INTERMEDIACION;
				}

				public Boolean VALOR_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_INTERMEDIACION";
				
				}

				
			    public BigDecimal PORCENTAJE_INTERMEDIACION;

				public BigDecimal getPORCENTAJE_INTERMEDIACION () {
					return this.PORCENTAJE_INTERMEDIACION;
				}

				public Boolean PORCENTAJE_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer PORCENTAJE_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String PORCENTAJE_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String PORCENTAJE_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONOriginalDbColumnName(){
				
					return "PORCENTAJE_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_IVA_INTERMEDIACION;

				public BigDecimal getVALOR_IVA_INTERMEDIACION () {
					return this.VALOR_IVA_INTERMEDIACION;
				}

				public Boolean VALOR_IVA_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_IVA_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_IVA_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_IVA_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_TOTAL_MEDICAMENTO;

				public BigDecimal getVALOR_TOTAL_MEDICAMENTO () {
					return this.VALOR_TOTAL_MEDICAMENTO;
				}

				public Boolean VALOR_TOTAL_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOOriginalDbColumnName(){
				
					return "VALOR_TOTAL_MEDICAMENTO";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INTERMEDIACION;

				public BigDecimal getVALOR_TOTAL_INTERMEDIACION () {
					return this.VALOR_TOTAL_INTERMEDIACION;
				}

				public Boolean VALOR_TOTAL_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INTERMEDIACION";
				
				}

				
			    public BigDecimal TOTAL_TRANSACCION_COMPLETA;

				public BigDecimal getTOTAL_TRANSACCION_COMPLETA () {
					return this.TOTAL_TRANSACCION_COMPLETA;
				}

				public Boolean TOTAL_TRANSACCION_COMPLETAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_TRANSACCION_COMPLETAIsKey(){
				    return false;
				}
				public Integer TOTAL_TRANSACCION_COMPLETALength(){
				    return 0;
				}
				public Integer TOTAL_TRANSACCION_COMPLETAPrecision(){
				    return 0;
				}
				public String TOTAL_TRANSACCION_COMPLETADefault(){
				
					return null;
				
				}
				public String TOTAL_TRANSACCION_COMPLETAComment(){
				
				    return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAPattern(){
				
					return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAOriginalDbColumnName(){
				
					return "TOTAL_TRANSACCION_COMPLETA";
				
				}

				
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return 0;
				}
				public String INVENTARIOS_IDDefault(){
				
					return null;
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return 0;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return null;
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return 0;
				}
				public String DFORMULA_IDDefault(){
				
					return null;
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public java.util.Date FECHA_DISPENSACION;

				public java.util.Date getFECHA_DISPENSACION () {
					return this.FECHA_DISPENSACION;
				}

				public Boolean FECHA_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer FECHA_DISPENSACIONLength(){
				    return 0;
				}
				public Integer FECHA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String FECHA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String FECHA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String FECHA_DISPENSACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_DISPENSACIONOriginalDbColumnName(){
				
					return "FECHA_DISPENSACION";
				
				}

				
			    public String HORA_DISPENSACION;

				public String getHORA_DISPENSACION () {
					return this.HORA_DISPENSACION;
				}

				public Boolean HORA_DISPENSACIONIsNullable(){
				    return true;
				}
				public Boolean HORA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer HORA_DISPENSACIONLength(){
				    return 8;
				}
				public Integer HORA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String HORA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String HORA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String HORA_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String HORA_DISPENSACIONOriginalDbColumnName(){
				
					return "HORA_DISPENSACION";
				
				}

				
			    public BigDecimal VALOR_SUBTOTAL_FORMULA;

				public BigDecimal getVALOR_SUBTOTAL_FORMULA () {
					return this.VALOR_SUBTOTAL_FORMULA;
				}

				public Boolean VALOR_SUBTOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_SUBTOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_SUBTOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_SUBTOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_SUBTOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_SUBTOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_SUBTOTAL_FORMULA";
				
				}

				
			    public BigDecimal VALOR_IVA_FORMULA;

				public BigDecimal getVALOR_IVA_FORMULA () {
					return this.VALOR_IVA_FORMULA;
				}

				public Boolean VALOR_IVA_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_IVA_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_IVA_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_IVA_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_FORMULAOriginalDbColumnName(){
				
					return "VALOR_IVA_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_FORMULA;

				public BigDecimal getVALOR_TOTAL_FORMULA () {
					return this.VALOR_TOTAL_FORMULA;
				}

				public Boolean VALOR_TOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_FORMULA";
				
				}

				
			    public BigDecimal SUBTOTAL_INT_FORMULA;

				public BigDecimal getSUBTOTAL_INT_FORMULA () {
					return this.SUBTOTAL_INT_FORMULA;
				}

				public Boolean SUBTOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean SUBTOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer SUBTOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer SUBTOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String SUBTOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String SUBTOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String SUBTOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String SUBTOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "SUBTOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_IVA_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_IVA_INT_FORMULA () {
					return this.VALOR_TOTAL_IVA_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_IVA_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_IVA_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_INT_FORMULA () {
					return this.VALOR_TOTAL_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_FINAL_FORMULA;

				public BigDecimal getVALOR_FINAL_FORMULA () {
					return this.VALOR_FINAL_FORMULA;
				}

				public Boolean VALOR_FINAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_FINAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_FINAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_FINAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_FINAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_FINAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_FINAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_FINAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_FINAL_FORMULA";
				
				}

				
			    public BigDecimal UORG_DISPENSA_ID;

				public BigDecimal getUORG_DISPENSA_ID () {
					return this.UORG_DISPENSA_ID;
				}

				public Boolean UORG_DISPENSA_IDIsNullable(){
				    return true;
				}
				public Boolean UORG_DISPENSA_IDIsKey(){
				    return false;
				}
				public Integer UORG_DISPENSA_IDLength(){
				    return 0;
				}
				public Integer UORG_DISPENSA_IDPrecision(){
				    return 0;
				}
				public String UORG_DISPENSA_IDDefault(){
				
					return null;
				
				}
				public String UORG_DISPENSA_IDComment(){
				
				    return "";
				
				}
				public String UORG_DISPENSA_IDPattern(){
				
					return "";
				
				}
				public String UORG_DISPENSA_IDOriginalDbColumnName(){
				
					return "UORG_DISPENSA_ID";
				
				}

				
			    public String BODEGA;

				public String getBODEGA () {
					return this.BODEGA;
				}

				public Boolean BODEGAIsNullable(){
				    return true;
				}
				public Boolean BODEGAIsKey(){
				    return false;
				}
				public Integer BODEGALength(){
				    return 150;
				}
				public Integer BODEGAPrecision(){
				    return 0;
				}
				public String BODEGADefault(){
				
					return null;
				
				}
				public String BODEGAComment(){
				
				    return "";
				
				}
				public String BODEGAPattern(){
				
					return "";
				
				}
				public String BODEGAOriginalDbColumnName(){
				
					return "BODEGA";
				
				}

				
			    public java.util.Date FMOVIMIENTO;

				public java.util.Date getFMOVIMIENTO () {
					return this.FMOVIMIENTO;
				}

				public Boolean FMOVIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FMOVIMIENTOIsKey(){
				    return false;
				}
				public Integer FMOVIMIENTOLength(){
				    return 0;
				}
				public Integer FMOVIMIENTOPrecision(){
				    return 0;
				}
				public String FMOVIMIENTODefault(){
				
					return null;
				
				}
				public String FMOVIMIENTOComment(){
				
				    return "";
				
				}
				public String FMOVIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMOVIMIENTOOriginalDbColumnName(){
				
					return "FMOVIMIENTO";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return false;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 25;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public java.util.Date FECHA_VENCIMIENTO;

				public java.util.Date getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String CODIGOBARRAS;

				public String getCODIGOBARRAS () {
					return this.CODIGOBARRAS;
				}

				public Boolean CODIGOBARRASIsNullable(){
				    return false;
				}
				public Boolean CODIGOBARRASIsKey(){
				    return false;
				}
				public Integer CODIGOBARRASLength(){
				    return 500;
				}
				public Integer CODIGOBARRASPrecision(){
				    return 0;
				}
				public String CODIGOBARRASDefault(){
				
					return null;
				
				}
				public String CODIGOBARRASComment(){
				
				    return "";
				
				}
				public String CODIGOBARRASPattern(){
				
					return "";
				
				}
				public String CODIGOBARRASOriginalDbColumnName(){
				
					return "CODIGOBARRAS";
				
				}

				
			    public String CODIGO_OPERADOR_MEDICAMENTO;

				public String getCODIGO_OPERADOR_MEDICAMENTO () {
					return this.CODIGO_OPERADOR_MEDICAMENTO;
				}

				public Boolean CODIGO_OPERADOR_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADOR_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADOR_MEDICAMENTOLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADOR_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADOR_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOOriginalDbColumnName(){
				
					return "CODIGO_OPERADOR_MEDICAMENTO";
				
				}

				
			    public String TIPO_MEDICAMENTO;

				public String getTIPO_MEDICAMENTO () {
					return this.TIPO_MEDICAMENTO;
				}

				public Boolean TIPO_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_MEDICAMENTOLength(){
				    return 200;
				}
				public Integer TIPO_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String TIPO_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String TIPO_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_MEDICAMENTOOriginalDbColumnName(){
				
					return "TIPO_MEDICAMENTO";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
					this.CODIGOBARRAS = readString(dis);
					
					this.CODIGO_OPERADOR_MEDICAMENTO = readString(dis);
					
					this.TIPO_MEDICAMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
					this.CODIGOBARRAS = readString(dis);
					
					this.CODIGO_OPERADOR_MEDICAMENTO = readString(dis);
					
					this.TIPO_MEDICAMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.TIPO_MEDICAMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR_MEDICAMENTO,dos);
					
					// String
				
						writeString(this.TIPO_MEDICAMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DMOVIMIENTOS_ID="+String.valueOf(DMOVIMIENTOS_ID));
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",CANTIDAD_DISPENSADA="+String.valueOf(CANTIDAD_DISPENSADA));
		sb.append(",VALOR_UNITARIO_ITEM="+String.valueOf(VALOR_UNITARIO_ITEM));
		sb.append(",PORCENTAJE_IVA="+String.valueOf(PORCENTAJE_IVA));
		sb.append(",VALOR_IVA_UNITARIO="+String.valueOf(VALOR_IVA_UNITARIO));
		sb.append(",VALOR_INTERMEDIACION="+String.valueOf(VALOR_INTERMEDIACION));
		sb.append(",PORCENTAJE_INTERMEDIACION="+String.valueOf(PORCENTAJE_INTERMEDIACION));
		sb.append(",VALOR_IVA_INTERMEDIACION="+String.valueOf(VALOR_IVA_INTERMEDIACION));
		sb.append(",VALOR_TOTAL_MEDICAMENTO="+String.valueOf(VALOR_TOTAL_MEDICAMENTO));
		sb.append(",VALOR_TOTAL_INTERMEDIACION="+String.valueOf(VALOR_TOTAL_INTERMEDIACION));
		sb.append(",TOTAL_TRANSACCION_COMPLETA="+String.valueOf(TOTAL_TRANSACCION_COMPLETA));
		sb.append(",INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FECHA_DISPENSACION="+String.valueOf(FECHA_DISPENSACION));
		sb.append(",HORA_DISPENSACION="+HORA_DISPENSACION);
		sb.append(",VALOR_SUBTOTAL_FORMULA="+String.valueOf(VALOR_SUBTOTAL_FORMULA));
		sb.append(",VALOR_IVA_FORMULA="+String.valueOf(VALOR_IVA_FORMULA));
		sb.append(",VALOR_TOTAL_FORMULA="+String.valueOf(VALOR_TOTAL_FORMULA));
		sb.append(",SUBTOTAL_INT_FORMULA="+String.valueOf(SUBTOTAL_INT_FORMULA));
		sb.append(",VALOR_TOTAL_IVA_INT_FORMULA="+String.valueOf(VALOR_TOTAL_IVA_INT_FORMULA));
		sb.append(",VALOR_TOTAL_INT_FORMULA="+String.valueOf(VALOR_TOTAL_INT_FORMULA));
		sb.append(",VALOR_FINAL_FORMULA="+String.valueOf(VALOR_FINAL_FORMULA));
		sb.append(",UORG_DISPENSA_ID="+String.valueOf(UORG_DISPENSA_ID));
		sb.append(",BODEGA="+BODEGA);
		sb.append(",FMOVIMIENTO="+String.valueOf(FMOVIMIENTO));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+String.valueOf(FECHA_VENCIMIENTO));
		sb.append(",CODIGOBARRAS="+CODIGOBARRAS);
		sb.append(",CODIGO_OPERADOR_MEDICAMENTO="+CODIGO_OPERADOR_MEDICAMENTO);
		sb.append(",TIPO_MEDICAMENTO="+TIPO_MEDICAMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out12Struct implements routines.system.IPersistableRow<out12Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal DMOVIMIENTOS_ID;

				public BigDecimal getDMOVIMIENTOS_ID () {
					return this.DMOVIMIENTOS_ID;
				}

				public Boolean DMOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean DMOVIMIENTOS_IDIsKey(){
				    return true;
				}
				public Integer DMOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer DMOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String DMOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String DMOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String DMOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String DMOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "DMOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal CANTIDAD_DISPENSADA;

				public BigDecimal getCANTIDAD_DISPENSADA () {
					return this.CANTIDAD_DISPENSADA;
				}

				public Boolean CANTIDAD_DISPENSADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_DISPENSADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_DISPENSADALength(){
				    return 0;
				}
				public Integer CANTIDAD_DISPENSADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_DISPENSADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_DISPENSADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_DISPENSADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_DISPENSADAOriginalDbColumnName(){
				
					return "CANTIDAD_DISPENSADA";
				
				}

				
			    public BigDecimal VALOR_UNITARIO_ITEM;

				public BigDecimal getVALOR_UNITARIO_ITEM () {
					return this.VALOR_UNITARIO_ITEM;
				}

				public Boolean VALOR_UNITARIO_ITEMIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIO_ITEMIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIO_ITEMLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIO_ITEMPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIO_ITEMDefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIO_ITEMComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIO_ITEMPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIO_ITEMOriginalDbColumnName(){
				
					return "VALOR_UNITARIO_ITEM";
				
				}

				
			    public BigDecimal PORCENTAJE_IVA;

				public BigDecimal getPORCENTAJE_IVA () {
					return this.PORCENTAJE_IVA;
				}

				public Boolean PORCENTAJE_IVAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_IVAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_IVALength(){
				    return 0;
				}
				public Integer PORCENTAJE_IVAPrecision(){
				    return 0;
				}
				public String PORCENTAJE_IVADefault(){
				
					return null;
				
				}
				public String PORCENTAJE_IVAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_IVAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_IVAOriginalDbColumnName(){
				
					return "PORCENTAJE_IVA";
				
				}

				
			    public BigDecimal VALOR_IVA_UNITARIO;

				public BigDecimal getVALOR_IVA_UNITARIO () {
					return this.VALOR_IVA_UNITARIO;
				}

				public Boolean VALOR_IVA_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_IVA_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_IVA_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_IVA_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_IVA_UNITARIO";
				
				}

				
			    public BigDecimal VALOR_INTERMEDIACION;

				public BigDecimal getVALOR_INTERMEDIACION () {
					return this.VALOR_INTERMEDIACION;
				}

				public Boolean VALOR_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_INTERMEDIACION";
				
				}

				
			    public BigDecimal PORCENTAJE_INTERMEDIACION;

				public BigDecimal getPORCENTAJE_INTERMEDIACION () {
					return this.PORCENTAJE_INTERMEDIACION;
				}

				public Boolean PORCENTAJE_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer PORCENTAJE_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String PORCENTAJE_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String PORCENTAJE_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONOriginalDbColumnName(){
				
					return "PORCENTAJE_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_IVA_INTERMEDIACION;

				public BigDecimal getVALOR_IVA_INTERMEDIACION () {
					return this.VALOR_IVA_INTERMEDIACION;
				}

				public Boolean VALOR_IVA_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_IVA_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_IVA_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_IVA_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_TOTAL_MEDICAMENTO;

				public BigDecimal getVALOR_TOTAL_MEDICAMENTO () {
					return this.VALOR_TOTAL_MEDICAMENTO;
				}

				public Boolean VALOR_TOTAL_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOOriginalDbColumnName(){
				
					return "VALOR_TOTAL_MEDICAMENTO";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INTERMEDIACION;

				public BigDecimal getVALOR_TOTAL_INTERMEDIACION () {
					return this.VALOR_TOTAL_INTERMEDIACION;
				}

				public Boolean VALOR_TOTAL_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INTERMEDIACION";
				
				}

				
			    public BigDecimal TOTAL_TRANSACCION_COMPLETA;

				public BigDecimal getTOTAL_TRANSACCION_COMPLETA () {
					return this.TOTAL_TRANSACCION_COMPLETA;
				}

				public Boolean TOTAL_TRANSACCION_COMPLETAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_TRANSACCION_COMPLETAIsKey(){
				    return false;
				}
				public Integer TOTAL_TRANSACCION_COMPLETALength(){
				    return 0;
				}
				public Integer TOTAL_TRANSACCION_COMPLETAPrecision(){
				    return 0;
				}
				public String TOTAL_TRANSACCION_COMPLETADefault(){
				
					return null;
				
				}
				public String TOTAL_TRANSACCION_COMPLETAComment(){
				
				    return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAPattern(){
				
					return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAOriginalDbColumnName(){
				
					return "TOTAL_TRANSACCION_COMPLETA";
				
				}

				
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return 0;
				}
				public String INVENTARIOS_IDDefault(){
				
					return null;
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return 0;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return null;
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return 0;
				}
				public String DFORMULA_IDDefault(){
				
					return null;
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public java.util.Date FECHA_DISPENSACION;

				public java.util.Date getFECHA_DISPENSACION () {
					return this.FECHA_DISPENSACION;
				}

				public Boolean FECHA_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer FECHA_DISPENSACIONLength(){
				    return 0;
				}
				public Integer FECHA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String FECHA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String FECHA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String FECHA_DISPENSACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_DISPENSACIONOriginalDbColumnName(){
				
					return "FECHA_DISPENSACION";
				
				}

				
			    public String HORA_DISPENSACION;

				public String getHORA_DISPENSACION () {
					return this.HORA_DISPENSACION;
				}

				public Boolean HORA_DISPENSACIONIsNullable(){
				    return true;
				}
				public Boolean HORA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer HORA_DISPENSACIONLength(){
				    return 8;
				}
				public Integer HORA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String HORA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String HORA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String HORA_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String HORA_DISPENSACIONOriginalDbColumnName(){
				
					return "HORA_DISPENSACION";
				
				}

				
			    public BigDecimal VALOR_SUBTOTAL_FORMULA;

				public BigDecimal getVALOR_SUBTOTAL_FORMULA () {
					return this.VALOR_SUBTOTAL_FORMULA;
				}

				public Boolean VALOR_SUBTOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_SUBTOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_SUBTOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_SUBTOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_SUBTOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_SUBTOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_SUBTOTAL_FORMULA";
				
				}

				
			    public BigDecimal VALOR_IVA_FORMULA;

				public BigDecimal getVALOR_IVA_FORMULA () {
					return this.VALOR_IVA_FORMULA;
				}

				public Boolean VALOR_IVA_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_IVA_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_IVA_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_IVA_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_FORMULAOriginalDbColumnName(){
				
					return "VALOR_IVA_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_FORMULA;

				public BigDecimal getVALOR_TOTAL_FORMULA () {
					return this.VALOR_TOTAL_FORMULA;
				}

				public Boolean VALOR_TOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_FORMULA";
				
				}

				
			    public BigDecimal SUBTOTAL_INT_FORMULA;

				public BigDecimal getSUBTOTAL_INT_FORMULA () {
					return this.SUBTOTAL_INT_FORMULA;
				}

				public Boolean SUBTOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean SUBTOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer SUBTOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer SUBTOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String SUBTOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String SUBTOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String SUBTOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String SUBTOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "SUBTOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_IVA_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_IVA_INT_FORMULA () {
					return this.VALOR_TOTAL_IVA_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_IVA_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_IVA_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_INT_FORMULA () {
					return this.VALOR_TOTAL_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_FINAL_FORMULA;

				public BigDecimal getVALOR_FINAL_FORMULA () {
					return this.VALOR_FINAL_FORMULA;
				}

				public Boolean VALOR_FINAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_FINAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_FINAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_FINAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_FINAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_FINAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_FINAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_FINAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_FINAL_FORMULA";
				
				}

				
			    public BigDecimal UORG_DISPENSA_ID;

				public BigDecimal getUORG_DISPENSA_ID () {
					return this.UORG_DISPENSA_ID;
				}

				public Boolean UORG_DISPENSA_IDIsNullable(){
				    return true;
				}
				public Boolean UORG_DISPENSA_IDIsKey(){
				    return false;
				}
				public Integer UORG_DISPENSA_IDLength(){
				    return 0;
				}
				public Integer UORG_DISPENSA_IDPrecision(){
				    return 0;
				}
				public String UORG_DISPENSA_IDDefault(){
				
					return null;
				
				}
				public String UORG_DISPENSA_IDComment(){
				
				    return "";
				
				}
				public String UORG_DISPENSA_IDPattern(){
				
					return "";
				
				}
				public String UORG_DISPENSA_IDOriginalDbColumnName(){
				
					return "UORG_DISPENSA_ID";
				
				}

				
			    public String BODEGA;

				public String getBODEGA () {
					return this.BODEGA;
				}

				public Boolean BODEGAIsNullable(){
				    return true;
				}
				public Boolean BODEGAIsKey(){
				    return false;
				}
				public Integer BODEGALength(){
				    return 150;
				}
				public Integer BODEGAPrecision(){
				    return 0;
				}
				public String BODEGADefault(){
				
					return null;
				
				}
				public String BODEGAComment(){
				
				    return "";
				
				}
				public String BODEGAPattern(){
				
					return "";
				
				}
				public String BODEGAOriginalDbColumnName(){
				
					return "BODEGA";
				
				}

				
			    public java.util.Date FMOVIMIENTO;

				public java.util.Date getFMOVIMIENTO () {
					return this.FMOVIMIENTO;
				}

				public Boolean FMOVIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FMOVIMIENTOIsKey(){
				    return false;
				}
				public Integer FMOVIMIENTOLength(){
				    return 0;
				}
				public Integer FMOVIMIENTOPrecision(){
				    return 0;
				}
				public String FMOVIMIENTODefault(){
				
					return null;
				
				}
				public String FMOVIMIENTOComment(){
				
				    return "";
				
				}
				public String FMOVIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMOVIMIENTOOriginalDbColumnName(){
				
					return "FMOVIMIENTO";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return false;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 25;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public java.util.Date FECHA_VENCIMIENTO;

				public java.util.Date getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String CODIGOBARRAS;

				public String getCODIGOBARRAS () {
					return this.CODIGOBARRAS;
				}

				public Boolean CODIGOBARRASIsNullable(){
				    return false;
				}
				public Boolean CODIGOBARRASIsKey(){
				    return false;
				}
				public Integer CODIGOBARRASLength(){
				    return 500;
				}
				public Integer CODIGOBARRASPrecision(){
				    return 0;
				}
				public String CODIGOBARRASDefault(){
				
					return null;
				
				}
				public String CODIGOBARRASComment(){
				
				    return "";
				
				}
				public String CODIGOBARRASPattern(){
				
					return "";
				
				}
				public String CODIGOBARRASOriginalDbColumnName(){
				
					return "CODIGOBARRAS";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
					this.CODIGOBARRAS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
					this.CODIGOBARRAS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.CODIGOBARRAS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DMOVIMIENTOS_ID="+String.valueOf(DMOVIMIENTOS_ID));
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",CANTIDAD_DISPENSADA="+String.valueOf(CANTIDAD_DISPENSADA));
		sb.append(",VALOR_UNITARIO_ITEM="+String.valueOf(VALOR_UNITARIO_ITEM));
		sb.append(",PORCENTAJE_IVA="+String.valueOf(PORCENTAJE_IVA));
		sb.append(",VALOR_IVA_UNITARIO="+String.valueOf(VALOR_IVA_UNITARIO));
		sb.append(",VALOR_INTERMEDIACION="+String.valueOf(VALOR_INTERMEDIACION));
		sb.append(",PORCENTAJE_INTERMEDIACION="+String.valueOf(PORCENTAJE_INTERMEDIACION));
		sb.append(",VALOR_IVA_INTERMEDIACION="+String.valueOf(VALOR_IVA_INTERMEDIACION));
		sb.append(",VALOR_TOTAL_MEDICAMENTO="+String.valueOf(VALOR_TOTAL_MEDICAMENTO));
		sb.append(",VALOR_TOTAL_INTERMEDIACION="+String.valueOf(VALOR_TOTAL_INTERMEDIACION));
		sb.append(",TOTAL_TRANSACCION_COMPLETA="+String.valueOf(TOTAL_TRANSACCION_COMPLETA));
		sb.append(",INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FECHA_DISPENSACION="+String.valueOf(FECHA_DISPENSACION));
		sb.append(",HORA_DISPENSACION="+HORA_DISPENSACION);
		sb.append(",VALOR_SUBTOTAL_FORMULA="+String.valueOf(VALOR_SUBTOTAL_FORMULA));
		sb.append(",VALOR_IVA_FORMULA="+String.valueOf(VALOR_IVA_FORMULA));
		sb.append(",VALOR_TOTAL_FORMULA="+String.valueOf(VALOR_TOTAL_FORMULA));
		sb.append(",SUBTOTAL_INT_FORMULA="+String.valueOf(SUBTOTAL_INT_FORMULA));
		sb.append(",VALOR_TOTAL_IVA_INT_FORMULA="+String.valueOf(VALOR_TOTAL_IVA_INT_FORMULA));
		sb.append(",VALOR_TOTAL_INT_FORMULA="+String.valueOf(VALOR_TOTAL_INT_FORMULA));
		sb.append(",VALOR_FINAL_FORMULA="+String.valueOf(VALOR_FINAL_FORMULA));
		sb.append(",UORG_DISPENSA_ID="+String.valueOf(UORG_DISPENSA_ID));
		sb.append(",BODEGA="+BODEGA);
		sb.append(",FMOVIMIENTO="+String.valueOf(FMOVIMIENTO));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+String.valueOf(FECHA_VENCIMIENTO));
		sb.append(",CODIGOBARRAS="+CODIGOBARRAS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row166Struct implements routines.system.IPersistableRow<row166Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal DMOVIMIENTOS_ID;

				public BigDecimal getDMOVIMIENTOS_ID () {
					return this.DMOVIMIENTOS_ID;
				}

				public Boolean DMOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean DMOVIMIENTOS_IDIsKey(){
				    return true;
				}
				public Integer DMOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer DMOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String DMOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String DMOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String DMOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String DMOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "DMOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal CANTIDAD_DISPENSADA;

				public BigDecimal getCANTIDAD_DISPENSADA () {
					return this.CANTIDAD_DISPENSADA;
				}

				public Boolean CANTIDAD_DISPENSADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_DISPENSADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_DISPENSADALength(){
				    return 0;
				}
				public Integer CANTIDAD_DISPENSADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_DISPENSADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_DISPENSADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_DISPENSADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_DISPENSADAOriginalDbColumnName(){
				
					return "CANTIDAD_DISPENSADA";
				
				}

				
			    public BigDecimal VALOR_UNITARIO_ITEM;

				public BigDecimal getVALOR_UNITARIO_ITEM () {
					return this.VALOR_UNITARIO_ITEM;
				}

				public Boolean VALOR_UNITARIO_ITEMIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIO_ITEMIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIO_ITEMLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIO_ITEMPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIO_ITEMDefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIO_ITEMComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIO_ITEMPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIO_ITEMOriginalDbColumnName(){
				
					return "VALOR_UNITARIO_ITEM";
				
				}

				
			    public BigDecimal PORCENTAJE_IVA;

				public BigDecimal getPORCENTAJE_IVA () {
					return this.PORCENTAJE_IVA;
				}

				public Boolean PORCENTAJE_IVAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_IVAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_IVALength(){
				    return 0;
				}
				public Integer PORCENTAJE_IVAPrecision(){
				    return 0;
				}
				public String PORCENTAJE_IVADefault(){
				
					return null;
				
				}
				public String PORCENTAJE_IVAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_IVAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_IVAOriginalDbColumnName(){
				
					return "PORCENTAJE_IVA";
				
				}

				
			    public BigDecimal VALOR_IVA_UNITARIO;

				public BigDecimal getVALOR_IVA_UNITARIO () {
					return this.VALOR_IVA_UNITARIO;
				}

				public Boolean VALOR_IVA_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_IVA_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_IVA_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_IVA_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_IVA_UNITARIO";
				
				}

				
			    public BigDecimal VALOR_INTERMEDIACION;

				public BigDecimal getVALOR_INTERMEDIACION () {
					return this.VALOR_INTERMEDIACION;
				}

				public Boolean VALOR_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_INTERMEDIACION";
				
				}

				
			    public BigDecimal PORCENTAJE_INTERMEDIACION;

				public BigDecimal getPORCENTAJE_INTERMEDIACION () {
					return this.PORCENTAJE_INTERMEDIACION;
				}

				public Boolean PORCENTAJE_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer PORCENTAJE_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String PORCENTAJE_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String PORCENTAJE_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONOriginalDbColumnName(){
				
					return "PORCENTAJE_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_IVA_INTERMEDIACION;

				public BigDecimal getVALOR_IVA_INTERMEDIACION () {
					return this.VALOR_IVA_INTERMEDIACION;
				}

				public Boolean VALOR_IVA_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_IVA_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_IVA_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_IVA_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_TOTAL_MEDICAMENTO;

				public BigDecimal getVALOR_TOTAL_MEDICAMENTO () {
					return this.VALOR_TOTAL_MEDICAMENTO;
				}

				public Boolean VALOR_TOTAL_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOOriginalDbColumnName(){
				
					return "VALOR_TOTAL_MEDICAMENTO";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INTERMEDIACION;

				public BigDecimal getVALOR_TOTAL_INTERMEDIACION () {
					return this.VALOR_TOTAL_INTERMEDIACION;
				}

				public Boolean VALOR_TOTAL_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INTERMEDIACION";
				
				}

				
			    public BigDecimal TOTAL_TRANSACCION_COMPLETA;

				public BigDecimal getTOTAL_TRANSACCION_COMPLETA () {
					return this.TOTAL_TRANSACCION_COMPLETA;
				}

				public Boolean TOTAL_TRANSACCION_COMPLETAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_TRANSACCION_COMPLETAIsKey(){
				    return false;
				}
				public Integer TOTAL_TRANSACCION_COMPLETALength(){
				    return 0;
				}
				public Integer TOTAL_TRANSACCION_COMPLETAPrecision(){
				    return 0;
				}
				public String TOTAL_TRANSACCION_COMPLETADefault(){
				
					return null;
				
				}
				public String TOTAL_TRANSACCION_COMPLETAComment(){
				
				    return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAPattern(){
				
					return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAOriginalDbColumnName(){
				
					return "TOTAL_TRANSACCION_COMPLETA";
				
				}

				
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return 0;
				}
				public String INVENTARIOS_IDDefault(){
				
					return null;
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return 0;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return null;
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return 0;
				}
				public String DFORMULA_IDDefault(){
				
					return null;
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public java.util.Date FECHA_DISPENSACION;

				public java.util.Date getFECHA_DISPENSACION () {
					return this.FECHA_DISPENSACION;
				}

				public Boolean FECHA_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer FECHA_DISPENSACIONLength(){
				    return 0;
				}
				public Integer FECHA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String FECHA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String FECHA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String FECHA_DISPENSACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_DISPENSACIONOriginalDbColumnName(){
				
					return "FECHA_DISPENSACION";
				
				}

				
			    public String HORA_DISPENSACION;

				public String getHORA_DISPENSACION () {
					return this.HORA_DISPENSACION;
				}

				public Boolean HORA_DISPENSACIONIsNullable(){
				    return true;
				}
				public Boolean HORA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer HORA_DISPENSACIONLength(){
				    return 8;
				}
				public Integer HORA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String HORA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String HORA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String HORA_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String HORA_DISPENSACIONOriginalDbColumnName(){
				
					return "HORA_DISPENSACION";
				
				}

				
			    public BigDecimal VALOR_SUBTOTAL_FORMULA;

				public BigDecimal getVALOR_SUBTOTAL_FORMULA () {
					return this.VALOR_SUBTOTAL_FORMULA;
				}

				public Boolean VALOR_SUBTOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_SUBTOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_SUBTOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_SUBTOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_SUBTOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_SUBTOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_SUBTOTAL_FORMULA";
				
				}

				
			    public BigDecimal VALOR_IVA_FORMULA;

				public BigDecimal getVALOR_IVA_FORMULA () {
					return this.VALOR_IVA_FORMULA;
				}

				public Boolean VALOR_IVA_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_IVA_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_IVA_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_IVA_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_FORMULAOriginalDbColumnName(){
				
					return "VALOR_IVA_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_FORMULA;

				public BigDecimal getVALOR_TOTAL_FORMULA () {
					return this.VALOR_TOTAL_FORMULA;
				}

				public Boolean VALOR_TOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_FORMULA";
				
				}

				
			    public BigDecimal SUBTOTAL_INT_FORMULA;

				public BigDecimal getSUBTOTAL_INT_FORMULA () {
					return this.SUBTOTAL_INT_FORMULA;
				}

				public Boolean SUBTOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean SUBTOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer SUBTOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer SUBTOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String SUBTOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String SUBTOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String SUBTOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String SUBTOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "SUBTOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_IVA_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_IVA_INT_FORMULA () {
					return this.VALOR_TOTAL_IVA_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_IVA_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_IVA_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_INT_FORMULA () {
					return this.VALOR_TOTAL_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_FINAL_FORMULA;

				public BigDecimal getVALOR_FINAL_FORMULA () {
					return this.VALOR_FINAL_FORMULA;
				}

				public Boolean VALOR_FINAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_FINAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_FINAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_FINAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_FINAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_FINAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_FINAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_FINAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_FINAL_FORMULA";
				
				}

				
			    public BigDecimal UORG_DISPENSA_ID;

				public BigDecimal getUORG_DISPENSA_ID () {
					return this.UORG_DISPENSA_ID;
				}

				public Boolean UORG_DISPENSA_IDIsNullable(){
				    return true;
				}
				public Boolean UORG_DISPENSA_IDIsKey(){
				    return false;
				}
				public Integer UORG_DISPENSA_IDLength(){
				    return 0;
				}
				public Integer UORG_DISPENSA_IDPrecision(){
				    return 0;
				}
				public String UORG_DISPENSA_IDDefault(){
				
					return null;
				
				}
				public String UORG_DISPENSA_IDComment(){
				
				    return "";
				
				}
				public String UORG_DISPENSA_IDPattern(){
				
					return "";
				
				}
				public String UORG_DISPENSA_IDOriginalDbColumnName(){
				
					return "UORG_DISPENSA_ID";
				
				}

				
			    public String BODEGA;

				public String getBODEGA () {
					return this.BODEGA;
				}

				public Boolean BODEGAIsNullable(){
				    return true;
				}
				public Boolean BODEGAIsKey(){
				    return false;
				}
				public Integer BODEGALength(){
				    return 150;
				}
				public Integer BODEGAPrecision(){
				    return 0;
				}
				public String BODEGADefault(){
				
					return null;
				
				}
				public String BODEGAComment(){
				
				    return "";
				
				}
				public String BODEGAPattern(){
				
					return "";
				
				}
				public String BODEGAOriginalDbColumnName(){
				
					return "BODEGA";
				
				}

				
			    public java.util.Date FMOVIMIENTO;

				public java.util.Date getFMOVIMIENTO () {
					return this.FMOVIMIENTO;
				}

				public Boolean FMOVIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FMOVIMIENTOIsKey(){
				    return false;
				}
				public Integer FMOVIMIENTOLength(){
				    return 0;
				}
				public Integer FMOVIMIENTOPrecision(){
				    return 0;
				}
				public String FMOVIMIENTODefault(){
				
					return null;
				
				}
				public String FMOVIMIENTOComment(){
				
				    return "";
				
				}
				public String FMOVIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMOVIMIENTOOriginalDbColumnName(){
				
					return "FMOVIMIENTO";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DMOVIMIENTOS_ID="+String.valueOf(DMOVIMIENTOS_ID));
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",CANTIDAD_DISPENSADA="+String.valueOf(CANTIDAD_DISPENSADA));
		sb.append(",VALOR_UNITARIO_ITEM="+String.valueOf(VALOR_UNITARIO_ITEM));
		sb.append(",PORCENTAJE_IVA="+String.valueOf(PORCENTAJE_IVA));
		sb.append(",VALOR_IVA_UNITARIO="+String.valueOf(VALOR_IVA_UNITARIO));
		sb.append(",VALOR_INTERMEDIACION="+String.valueOf(VALOR_INTERMEDIACION));
		sb.append(",PORCENTAJE_INTERMEDIACION="+String.valueOf(PORCENTAJE_INTERMEDIACION));
		sb.append(",VALOR_IVA_INTERMEDIACION="+String.valueOf(VALOR_IVA_INTERMEDIACION));
		sb.append(",VALOR_TOTAL_MEDICAMENTO="+String.valueOf(VALOR_TOTAL_MEDICAMENTO));
		sb.append(",VALOR_TOTAL_INTERMEDIACION="+String.valueOf(VALOR_TOTAL_INTERMEDIACION));
		sb.append(",TOTAL_TRANSACCION_COMPLETA="+String.valueOf(TOTAL_TRANSACCION_COMPLETA));
		sb.append(",INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FECHA_DISPENSACION="+String.valueOf(FECHA_DISPENSACION));
		sb.append(",HORA_DISPENSACION="+HORA_DISPENSACION);
		sb.append(",VALOR_SUBTOTAL_FORMULA="+String.valueOf(VALOR_SUBTOTAL_FORMULA));
		sb.append(",VALOR_IVA_FORMULA="+String.valueOf(VALOR_IVA_FORMULA));
		sb.append(",VALOR_TOTAL_FORMULA="+String.valueOf(VALOR_TOTAL_FORMULA));
		sb.append(",SUBTOTAL_INT_FORMULA="+String.valueOf(SUBTOTAL_INT_FORMULA));
		sb.append(",VALOR_TOTAL_IVA_INT_FORMULA="+String.valueOf(VALOR_TOTAL_IVA_INT_FORMULA));
		sb.append(",VALOR_TOTAL_INT_FORMULA="+String.valueOf(VALOR_TOTAL_INT_FORMULA));
		sb.append(",VALOR_FINAL_FORMULA="+String.valueOf(VALOR_FINAL_FORMULA));
		sb.append(",UORG_DISPENSA_ID="+String.valueOf(UORG_DISPENSA_ID));
		sb.append(",BODEGA="+BODEGA);
		sb.append(",FMOVIMIENTO="+String.valueOf(FMOVIMIENTO));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row166Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_29Struct implements routines.system.IPersistableRow<after_tHashInput_29Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal DMOVIMIENTOS_ID;

				public BigDecimal getDMOVIMIENTOS_ID () {
					return this.DMOVIMIENTOS_ID;
				}

				public Boolean DMOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean DMOVIMIENTOS_IDIsKey(){
				    return true;
				}
				public Integer DMOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer DMOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String DMOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String DMOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String DMOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String DMOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "DMOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal CANTIDAD_DISPENSADA;

				public BigDecimal getCANTIDAD_DISPENSADA () {
					return this.CANTIDAD_DISPENSADA;
				}

				public Boolean CANTIDAD_DISPENSADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_DISPENSADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_DISPENSADALength(){
				    return 0;
				}
				public Integer CANTIDAD_DISPENSADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_DISPENSADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_DISPENSADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_DISPENSADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_DISPENSADAOriginalDbColumnName(){
				
					return "CANTIDAD_DISPENSADA";
				
				}

				
			    public BigDecimal VALOR_UNITARIO_ITEM;

				public BigDecimal getVALOR_UNITARIO_ITEM () {
					return this.VALOR_UNITARIO_ITEM;
				}

				public Boolean VALOR_UNITARIO_ITEMIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIO_ITEMIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIO_ITEMLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIO_ITEMPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIO_ITEMDefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIO_ITEMComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIO_ITEMPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIO_ITEMOriginalDbColumnName(){
				
					return "VALOR_UNITARIO_ITEM";
				
				}

				
			    public BigDecimal PORCENTAJE_IVA;

				public BigDecimal getPORCENTAJE_IVA () {
					return this.PORCENTAJE_IVA;
				}

				public Boolean PORCENTAJE_IVAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_IVAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_IVALength(){
				    return 0;
				}
				public Integer PORCENTAJE_IVAPrecision(){
				    return 0;
				}
				public String PORCENTAJE_IVADefault(){
				
					return null;
				
				}
				public String PORCENTAJE_IVAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_IVAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_IVAOriginalDbColumnName(){
				
					return "PORCENTAJE_IVA";
				
				}

				
			    public BigDecimal VALOR_IVA_UNITARIO;

				public BigDecimal getVALOR_IVA_UNITARIO () {
					return this.VALOR_IVA_UNITARIO;
				}

				public Boolean VALOR_IVA_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_IVA_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_IVA_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_IVA_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_IVA_UNITARIO";
				
				}

				
			    public BigDecimal VALOR_INTERMEDIACION;

				public BigDecimal getVALOR_INTERMEDIACION () {
					return this.VALOR_INTERMEDIACION;
				}

				public Boolean VALOR_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_INTERMEDIACION";
				
				}

				
			    public BigDecimal PORCENTAJE_INTERMEDIACION;

				public BigDecimal getPORCENTAJE_INTERMEDIACION () {
					return this.PORCENTAJE_INTERMEDIACION;
				}

				public Boolean PORCENTAJE_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer PORCENTAJE_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String PORCENTAJE_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String PORCENTAJE_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONOriginalDbColumnName(){
				
					return "PORCENTAJE_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_IVA_INTERMEDIACION;

				public BigDecimal getVALOR_IVA_INTERMEDIACION () {
					return this.VALOR_IVA_INTERMEDIACION;
				}

				public Boolean VALOR_IVA_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_IVA_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_IVA_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_IVA_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_TOTAL_MEDICAMENTO;

				public BigDecimal getVALOR_TOTAL_MEDICAMENTO () {
					return this.VALOR_TOTAL_MEDICAMENTO;
				}

				public Boolean VALOR_TOTAL_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOOriginalDbColumnName(){
				
					return "VALOR_TOTAL_MEDICAMENTO";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INTERMEDIACION;

				public BigDecimal getVALOR_TOTAL_INTERMEDIACION () {
					return this.VALOR_TOTAL_INTERMEDIACION;
				}

				public Boolean VALOR_TOTAL_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INTERMEDIACION";
				
				}

				
			    public BigDecimal TOTAL_TRANSACCION_COMPLETA;

				public BigDecimal getTOTAL_TRANSACCION_COMPLETA () {
					return this.TOTAL_TRANSACCION_COMPLETA;
				}

				public Boolean TOTAL_TRANSACCION_COMPLETAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_TRANSACCION_COMPLETAIsKey(){
				    return false;
				}
				public Integer TOTAL_TRANSACCION_COMPLETALength(){
				    return 0;
				}
				public Integer TOTAL_TRANSACCION_COMPLETAPrecision(){
				    return 0;
				}
				public String TOTAL_TRANSACCION_COMPLETADefault(){
				
					return null;
				
				}
				public String TOTAL_TRANSACCION_COMPLETAComment(){
				
				    return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAPattern(){
				
					return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAOriginalDbColumnName(){
				
					return "TOTAL_TRANSACCION_COMPLETA";
				
				}

				
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return 0;
				}
				public String INVENTARIOS_IDDefault(){
				
					return null;
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return 0;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return null;
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return 0;
				}
				public String DFORMULA_IDDefault(){
				
					return null;
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public java.util.Date FECHA_DISPENSACION;

				public java.util.Date getFECHA_DISPENSACION () {
					return this.FECHA_DISPENSACION;
				}

				public Boolean FECHA_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer FECHA_DISPENSACIONLength(){
				    return 0;
				}
				public Integer FECHA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String FECHA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String FECHA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String FECHA_DISPENSACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_DISPENSACIONOriginalDbColumnName(){
				
					return "FECHA_DISPENSACION";
				
				}

				
			    public String HORA_DISPENSACION;

				public String getHORA_DISPENSACION () {
					return this.HORA_DISPENSACION;
				}

				public Boolean HORA_DISPENSACIONIsNullable(){
				    return true;
				}
				public Boolean HORA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer HORA_DISPENSACIONLength(){
				    return 8;
				}
				public Integer HORA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String HORA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String HORA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String HORA_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String HORA_DISPENSACIONOriginalDbColumnName(){
				
					return "HORA_DISPENSACION";
				
				}

				
			    public BigDecimal VALOR_SUBTOTAL_FORMULA;

				public BigDecimal getVALOR_SUBTOTAL_FORMULA () {
					return this.VALOR_SUBTOTAL_FORMULA;
				}

				public Boolean VALOR_SUBTOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_SUBTOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_SUBTOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_SUBTOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_SUBTOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_SUBTOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_SUBTOTAL_FORMULA";
				
				}

				
			    public BigDecimal VALOR_IVA_FORMULA;

				public BigDecimal getVALOR_IVA_FORMULA () {
					return this.VALOR_IVA_FORMULA;
				}

				public Boolean VALOR_IVA_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_IVA_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_IVA_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_IVA_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_FORMULAOriginalDbColumnName(){
				
					return "VALOR_IVA_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_FORMULA;

				public BigDecimal getVALOR_TOTAL_FORMULA () {
					return this.VALOR_TOTAL_FORMULA;
				}

				public Boolean VALOR_TOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_FORMULA";
				
				}

				
			    public BigDecimal SUBTOTAL_INT_FORMULA;

				public BigDecimal getSUBTOTAL_INT_FORMULA () {
					return this.SUBTOTAL_INT_FORMULA;
				}

				public Boolean SUBTOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean SUBTOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer SUBTOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer SUBTOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String SUBTOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String SUBTOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String SUBTOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String SUBTOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "SUBTOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_IVA_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_IVA_INT_FORMULA () {
					return this.VALOR_TOTAL_IVA_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_IVA_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_IVA_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_INT_FORMULA () {
					return this.VALOR_TOTAL_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_FINAL_FORMULA;

				public BigDecimal getVALOR_FINAL_FORMULA () {
					return this.VALOR_FINAL_FORMULA;
				}

				public Boolean VALOR_FINAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_FINAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_FINAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_FINAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_FINAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_FINAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_FINAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_FINAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_FINAL_FORMULA";
				
				}

				
			    public BigDecimal UORG_DISPENSA_ID;

				public BigDecimal getUORG_DISPENSA_ID () {
					return this.UORG_DISPENSA_ID;
				}

				public Boolean UORG_DISPENSA_IDIsNullable(){
				    return true;
				}
				public Boolean UORG_DISPENSA_IDIsKey(){
				    return false;
				}
				public Integer UORG_DISPENSA_IDLength(){
				    return 0;
				}
				public Integer UORG_DISPENSA_IDPrecision(){
				    return 0;
				}
				public String UORG_DISPENSA_IDDefault(){
				
					return null;
				
				}
				public String UORG_DISPENSA_IDComment(){
				
				    return "";
				
				}
				public String UORG_DISPENSA_IDPattern(){
				
					return "";
				
				}
				public String UORG_DISPENSA_IDOriginalDbColumnName(){
				
					return "UORG_DISPENSA_ID";
				
				}

				
			    public String BODEGA;

				public String getBODEGA () {
					return this.BODEGA;
				}

				public Boolean BODEGAIsNullable(){
				    return true;
				}
				public Boolean BODEGAIsKey(){
				    return false;
				}
				public Integer BODEGALength(){
				    return 150;
				}
				public Integer BODEGAPrecision(){
				    return 0;
				}
				public String BODEGADefault(){
				
					return null;
				
				}
				public String BODEGAComment(){
				
				    return "";
				
				}
				public String BODEGAPattern(){
				
					return "";
				
				}
				public String BODEGAOriginalDbColumnName(){
				
					return "BODEGA";
				
				}

				
			    public java.util.Date FMOVIMIENTO;

				public java.util.Date getFMOVIMIENTO () {
					return this.FMOVIMIENTO;
				}

				public Boolean FMOVIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FMOVIMIENTOIsKey(){
				    return false;
				}
				public Integer FMOVIMIENTOLength(){
				    return 0;
				}
				public Integer FMOVIMIENTOPrecision(){
				    return 0;
				}
				public String FMOVIMIENTODefault(){
				
					return null;
				
				}
				public String FMOVIMIENTOComment(){
				
				    return "";
				
				}
				public String FMOVIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMOVIMIENTOOriginalDbColumnName(){
				
					return "FMOVIMIENTO";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.DMOVIMIENTOS_ID == null) ? 0 : this.DMOVIMIENTOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tHashInput_29Struct other = (after_tHashInput_29Struct) obj;
		
						if (this.DMOVIMIENTOS_ID == null) {
							if (other.DMOVIMIENTOS_ID != null)
								return false;
						
						} else if (!this.DMOVIMIENTOS_ID.equals(other.DMOVIMIENTOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tHashInput_29Struct other) {

		other.DMOVIMIENTOS_ID = this.DMOVIMIENTOS_ID;
	            other.MOVIMIENTOS_ID = this.MOVIMIENTOS_ID;
	            other.CANTIDAD_DISPENSADA = this.CANTIDAD_DISPENSADA;
	            other.VALOR_UNITARIO_ITEM = this.VALOR_UNITARIO_ITEM;
	            other.PORCENTAJE_IVA = this.PORCENTAJE_IVA;
	            other.VALOR_IVA_UNITARIO = this.VALOR_IVA_UNITARIO;
	            other.VALOR_INTERMEDIACION = this.VALOR_INTERMEDIACION;
	            other.PORCENTAJE_INTERMEDIACION = this.PORCENTAJE_INTERMEDIACION;
	            other.VALOR_IVA_INTERMEDIACION = this.VALOR_IVA_INTERMEDIACION;
	            other.VALOR_TOTAL_MEDICAMENTO = this.VALOR_TOTAL_MEDICAMENTO;
	            other.VALOR_TOTAL_INTERMEDIACION = this.VALOR_TOTAL_INTERMEDIACION;
	            other.TOTAL_TRANSACCION_COMPLETA = this.TOTAL_TRANSACCION_COMPLETA;
	            other.INVENTARIOS_ID = this.INVENTARIOS_ID;
	            other.HDCONTRATOS_ID = this.HDCONTRATOS_ID;
	            other.DFORMULA_ID = this.DFORMULA_ID;
	            other.FECHA_DISPENSACION = this.FECHA_DISPENSACION;
	            other.HORA_DISPENSACION = this.HORA_DISPENSACION;
	            other.VALOR_SUBTOTAL_FORMULA = this.VALOR_SUBTOTAL_FORMULA;
	            other.VALOR_IVA_FORMULA = this.VALOR_IVA_FORMULA;
	            other.VALOR_TOTAL_FORMULA = this.VALOR_TOTAL_FORMULA;
	            other.SUBTOTAL_INT_FORMULA = this.SUBTOTAL_INT_FORMULA;
	            other.VALOR_TOTAL_IVA_INT_FORMULA = this.VALOR_TOTAL_IVA_INT_FORMULA;
	            other.VALOR_TOTAL_INT_FORMULA = this.VALOR_TOTAL_INT_FORMULA;
	            other.VALOR_FINAL_FORMULA = this.VALOR_FINAL_FORMULA;
	            other.UORG_DISPENSA_ID = this.UORG_DISPENSA_ID;
	            other.BODEGA = this.BODEGA;
	            other.FMOVIMIENTO = this.FMOVIMIENTO;
	            other.USUARIOS_ID = this.USUARIOS_ID;
	            
	}

	public void copyKeysDataTo(after_tHashInput_29Struct other) {

		other.DMOVIMIENTOS_ID = this.DMOVIMIENTOS_ID;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DMOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_DISPENSADA = (BigDecimal) dis.readObject();
					
						this.VALOR_UNITARIO_ITEM = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_IVA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_UNITARIO = (BigDecimal) dis.readObject();
					
						this.VALOR_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) dis.readObject();
					
						this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) dis.readObject();
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.HORA_DISPENSACION = readString(dis);
					
						this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_IVA_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) dis.readObject();
					
						this.VALOR_FINAL_FORMULA = (BigDecimal) dis.readObject();
					
						this.UORG_DISPENSA_ID = (BigDecimal) dis.readObject();
					
					this.BODEGA = readString(dis);
					
					this.FMOVIMIENTO = readDate(dis);
					
						this.USUARIOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DMOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_DISPENSADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_UNITARIO_ITEM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_IVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_UNITARIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// String
				
						writeString(this.HORA_DISPENSACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_IVA_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_FINAL_FORMULA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_DISPENSA_ID);
					
					// String
				
						writeString(this.BODEGA,dos);
					
					// java.util.Date
				
						writeDate(this.FMOVIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DMOVIMIENTOS_ID="+String.valueOf(DMOVIMIENTOS_ID));
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",CANTIDAD_DISPENSADA="+String.valueOf(CANTIDAD_DISPENSADA));
		sb.append(",VALOR_UNITARIO_ITEM="+String.valueOf(VALOR_UNITARIO_ITEM));
		sb.append(",PORCENTAJE_IVA="+String.valueOf(PORCENTAJE_IVA));
		sb.append(",VALOR_IVA_UNITARIO="+String.valueOf(VALOR_IVA_UNITARIO));
		sb.append(",VALOR_INTERMEDIACION="+String.valueOf(VALOR_INTERMEDIACION));
		sb.append(",PORCENTAJE_INTERMEDIACION="+String.valueOf(PORCENTAJE_INTERMEDIACION));
		sb.append(",VALOR_IVA_INTERMEDIACION="+String.valueOf(VALOR_IVA_INTERMEDIACION));
		sb.append(",VALOR_TOTAL_MEDICAMENTO="+String.valueOf(VALOR_TOTAL_MEDICAMENTO));
		sb.append(",VALOR_TOTAL_INTERMEDIACION="+String.valueOf(VALOR_TOTAL_INTERMEDIACION));
		sb.append(",TOTAL_TRANSACCION_COMPLETA="+String.valueOf(TOTAL_TRANSACCION_COMPLETA));
		sb.append(",INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FECHA_DISPENSACION="+String.valueOf(FECHA_DISPENSACION));
		sb.append(",HORA_DISPENSACION="+HORA_DISPENSACION);
		sb.append(",VALOR_SUBTOTAL_FORMULA="+String.valueOf(VALOR_SUBTOTAL_FORMULA));
		sb.append(",VALOR_IVA_FORMULA="+String.valueOf(VALOR_IVA_FORMULA));
		sb.append(",VALOR_TOTAL_FORMULA="+String.valueOf(VALOR_TOTAL_FORMULA));
		sb.append(",SUBTOTAL_INT_FORMULA="+String.valueOf(SUBTOTAL_INT_FORMULA));
		sb.append(",VALOR_TOTAL_IVA_INT_FORMULA="+String.valueOf(VALOR_TOTAL_IVA_INT_FORMULA));
		sb.append(",VALOR_TOTAL_INT_FORMULA="+String.valueOf(VALOR_TOTAL_INT_FORMULA));
		sb.append(",VALOR_FINAL_FORMULA="+String.valueOf(VALOR_FINAL_FORMULA));
		sb.append(",UORG_DISPENSA_ID="+String.valueOf(UORG_DISPENSA_ID));
		sb.append(",BODEGA="+BODEGA);
		sb.append(",FMOVIMIENTO="+String.valueOf(FMOVIMIENTO));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_29Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.DMOVIMIENTOS_ID, other.DMOVIMIENTOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_29Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_29_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_7Process(globalMap);
		tOracleInput_33Process(globalMap);
		tOracleInput_53Process(globalMap);
		tOracleInput_2Process(globalMap);

		row166Struct row166 = new row166Struct();
out12Struct out12 = new out12Struct();
out13Struct out13 = new out13Struct();
out14Struct out14 = new out14Struct();
out15Struct out15 = new out15Struct();
out3Struct out3 = new out3Struct();









	
	/**
	 * [tOracleOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_7", false);
		start_Hash.put("tOracleOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out3");
					}
				
		int tos_count_tOracleOutput_7 = 0;
		






        int updateKeyCount_tOracleOutput_7 = 1;
        if(updateKeyCount_tOracleOutput_7 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_7 == 35 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_7 = 0;
    int nb_line_update_tOracleOutput_7 = 0;
    int nb_line_inserted_tOracleOutput_7 = 0;
    int nb_line_deleted_tOracleOutput_7 = 0;
    int nb_line_rejected_tOracleOutput_7 = 0;

    int tmp_batchUpdateCount_tOracleOutput_7 = 0;

    int deletedCount_tOracleOutput_7=0;
    int updatedCount_tOracleOutput_7=0;
    int insertedCount_tOracleOutput_7=0;
    int rowsToCommitCount_tOracleOutput_7=0;
    int rejectedCount_tOracleOutput_7=0;

    boolean whetherReject_tOracleOutput_7 = false;

    java.sql.Connection conn_tOracleOutput_7 = null;

    //optional table
    String dbschema_tOracleOutput_7 = null;
    String tableName_tOracleOutput_7 = null;
                    String driverClass_tOracleOutput_7 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_7);
                String url_tOracleOutput_7 = null;
                    url_tOracleOutput_7 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_7 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_7 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_7 = decryptedPassword_tOracleOutput_7;
                dbschema_tOracleOutput_7 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_7 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_7.put("user",dbUser_tOracleOutput_7);
                    atnParamsPrope_tOracleOutput_7.put("password",dbPwd_tOracleOutput_7);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_7.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_7 = java.sql.DriverManager.getConnection(url_tOracleOutput_7, atnParamsPrope_tOracleOutput_7);
        resourceMap.put("conn_tOracleOutput_7", conn_tOracleOutput_7);
            conn_tOracleOutput_7.setAutoCommit(false);
            int commitEvery_tOracleOutput_7 = 1000;
            int commitCounter_tOracleOutput_7 = 0;
        int count_tOracleOutput_7=0;

        if(dbschema_tOracleOutput_7 == null || dbschema_tOracleOutput_7.trim().length() == 0) {
            tableName_tOracleOutput_7 = ("BMED_MOVIMIENTOS");
        } else {
            tableName_tOracleOutput_7 = dbschema_tOracleOutput_7 + "." + ("BMED_MOVIMIENTOS");
        }
                java.sql.PreparedStatement pstmt_tOracleOutput_7 = conn_tOracleOutput_7.prepareStatement("SELECT COUNT(1) FROM " + tableName_tOracleOutput_7 + " WHERE DMOVIMIENTOS_ID = ?");
                resourceMap.put("pstmt_tOracleOutput_7", pstmt_tOracleOutput_7);
                String insert_tOracleOutput_7 = "INSERT INTO " + tableName_tOracleOutput_7 + " (DMOVIMIENTOS_ID,MOVIMIENTOS_ID,CANTIDAD_DISPENSADA,VALOR_UNITARIO_ITEM,PORCENTAJE_IVA,VALOR_IVA_UNITARIO,VALOR_INTERMEDIACION,PORCENTAJE_INTERMEDIACION,VALOR_IVA_INTERMEDIACION,VALOR_TOTAL_MEDICAMENTO,VALOR_TOTAL_INTERMEDIACION,TOTAL_TRANSACCION_COMPLETA,HDCONTRATOS_ID,DFORMULA_ID,FECHA_DISPENSACION,HORA_DISPENSACION,VALOR_SUBTOTAL_FORMULA,VALOR_IVA_FORMULA,VALOR_TOTAL_FORMULA,SUBTOTAL_INT_FORMULA,VALOR_TOTAL_IVA_INT_FORMULA,VALOR_TOTAL_INT_FORMULA,VALOR_FINAL_FORMULA,UORG_DISPENSA_ID,BODEGA,FMOVIMIENTO,USUARIOS_ID,LOTE,FVENCIMIENTO,PRODUCTOS_ID,TIPO_MEDICAMENTO,CODIGO_OPERADOR_MEDICAMENTO,CARACTERISTICAS_MEDICAMENTO,USUARIO_DESPACHADOR,CODIGOBARRAS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_7 = conn_tOracleOutput_7.prepareStatement(insert_tOracleOutput_7);
                resourceMap.put("pstmtInsert_tOracleOutput_7", pstmtInsert_tOracleOutput_7);
                String update_tOracleOutput_7 = "UPDATE " + tableName_tOracleOutput_7 + " SET MOVIMIENTOS_ID = ?,CANTIDAD_DISPENSADA = ?,VALOR_UNITARIO_ITEM = ?,PORCENTAJE_IVA = ?,VALOR_IVA_UNITARIO = ?,VALOR_INTERMEDIACION = ?,PORCENTAJE_INTERMEDIACION = ?,VALOR_IVA_INTERMEDIACION = ?,VALOR_TOTAL_MEDICAMENTO = ?,VALOR_TOTAL_INTERMEDIACION = ?,TOTAL_TRANSACCION_COMPLETA = ?,HDCONTRATOS_ID = ?,DFORMULA_ID = ?,FECHA_DISPENSACION = ?,HORA_DISPENSACION = ?,VALOR_SUBTOTAL_FORMULA = ?,VALOR_IVA_FORMULA = ?,VALOR_TOTAL_FORMULA = ?,SUBTOTAL_INT_FORMULA = ?,VALOR_TOTAL_IVA_INT_FORMULA = ?,VALOR_TOTAL_INT_FORMULA = ?,VALOR_FINAL_FORMULA = ?,UORG_DISPENSA_ID = ?,BODEGA = ?,FMOVIMIENTO = ?,USUARIOS_ID = ?,LOTE = ?,FVENCIMIENTO = ?,PRODUCTOS_ID = ?,TIPO_MEDICAMENTO = ?,CODIGO_OPERADOR_MEDICAMENTO = ?,CARACTERISTICAS_MEDICAMENTO = ?,USUARIO_DESPACHADOR = ?,CODIGOBARRAS = ? WHERE DMOVIMIENTOS_ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_7 = conn_tOracleOutput_7.prepareStatement(update_tOracleOutput_7);
                resourceMap.put("pstmtUpdate_tOracleOutput_7", pstmtUpdate_tOracleOutput_7);





 



/**
 * [tOracleOutput_7 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out15");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
out3Struct out3_tmp = new out3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tMap_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_16", false);
		start_Hash.put("tMap_16", System.currentTimeMillis());
		
	
	currentComponent="tMap_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out14");
					}
				
		int tos_count_tMap_16 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct> tHash_Lookup_row4 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct>) 
					globalMap.get( "tHash_Lookup_row4" ))
					;					
					
	

row4Struct row4HashKey = new row4Struct();
row4Struct row4Default = new row4Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_16__Struct  {
}
Var__tMap_16__Struct Var__tMap_16 = new Var__tMap_16__Struct();
// ###############################

// ###############################
// # Outputs initialization
out15Struct out15_tmp = new out15Struct();
// ###############################

        
        



        









 



/**
 * [tMap_16 begin ] stop
 */



	
	/**
	 * [tMap_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_15", false);
		start_Hash.put("tMap_15", System.currentTimeMillis());
		
	
	currentComponent="tMap_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out13");
					}
				
		int tos_count_tMap_15 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
					globalMap.get( "tHash_Lookup_row7" ))
					;					
					
	

row7Struct row7HashKey = new row7Struct();
row7Struct row7Default = new row7Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_15__Struct  {
}
Var__tMap_15__Struct Var__tMap_15 = new Var__tMap_15__Struct();
// ###############################

// ###############################
// # Outputs initialization
out14Struct out14_tmp = new out14Struct();
// ###############################

        
        



        









 



/**
 * [tMap_15 begin ] stop
 */



	
	/**
	 * [tMap_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_14", false);
		start_Hash.put("tMap_14", System.currentTimeMillis());
		
	
	currentComponent="tMap_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out12");
					}
				
		int tos_count_tMap_14 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct> tHash_Lookup_row3 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct>) 
					globalMap.get( "tHash_Lookup_row3" ))
					;					
					
	

row3Struct row3HashKey = new row3Struct();
row3Struct row3Default = new row3Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_14__Struct  {
}
Var__tMap_14__Struct Var__tMap_14 = new Var__tMap_14__Struct();
// ###############################

// ###############################
// # Outputs initialization
out13Struct out13_tmp = new out13Struct();
// ###############################

        
        



        









 



/**
 * [tMap_14 begin ] stop
 */



	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row166");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct> tHash_Lookup_row80 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct>) 
					globalMap.get( "tHash_Lookup_row80" ))
					;					
					
	

row80Struct row80HashKey = new row80Struct();
row80Struct row80Default = new row80Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
out12Struct out12_tmp = new out12Struct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */



	
	/**
	 * [tHashInput_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_29", false);
		start_Hash.put("tHashInput_29", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_29";
	
	
		int tos_count_tHashInput_29 = 0;
		


int nb_line_tHashInput_29 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_29=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row139Struct> tHashFile_tHashInput_29 = mf_tHashInput_29.getAdvancedMemoryHashFile("tHashFile_Medicamentos_" + pid +"_tHashOutput_15");
if(tHashFile_tHashInput_29==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row139Struct> iterator_tHashInput_29 = tHashFile_tHashInput_29.iterator();
while (iterator_tHashInput_29.hasNext()) {
    row139Struct next_tHashInput_29 = iterator_tHashInput_29.next();

	row166.DMOVIMIENTOS_ID = next_tHashInput_29.DMOVIMIENTOS_ID;
	row166.MOVIMIENTOS_ID = next_tHashInput_29.MOVIMIENTOS_ID;
	row166.CANTIDAD_DISPENSADA = next_tHashInput_29.CANTIDAD_DISPENSADA;
	row166.VALOR_UNITARIO_ITEM = next_tHashInput_29.VALOR_UNITARIO_ITEM;
	row166.PORCENTAJE_IVA = next_tHashInput_29.PORCENTAJE_IVA;
	row166.VALOR_IVA_UNITARIO = next_tHashInput_29.VALOR_IVA_UNITARIO;
	row166.VALOR_INTERMEDIACION = next_tHashInput_29.VALOR_INTERMEDIACION;
	row166.PORCENTAJE_INTERMEDIACION = next_tHashInput_29.PORCENTAJE_INTERMEDIACION;
	row166.VALOR_IVA_INTERMEDIACION = next_tHashInput_29.VALOR_IVA_INTERMEDIACION;
	row166.VALOR_TOTAL_MEDICAMENTO = next_tHashInput_29.VALOR_TOTAL_MEDICAMENTO;
	row166.VALOR_TOTAL_INTERMEDIACION = next_tHashInput_29.VALOR_TOTAL_INTERMEDIACION;
	row166.TOTAL_TRANSACCION_COMPLETA = next_tHashInput_29.TOTAL_TRANSACCION_COMPLETA;
	row166.INVENTARIOS_ID = next_tHashInput_29.INVENTARIOS_ID;
	row166.HDCONTRATOS_ID = next_tHashInput_29.HDCONTRATOS_ID;
	row166.DFORMULA_ID = next_tHashInput_29.DFORMULA_ID;
	row166.FECHA_DISPENSACION = next_tHashInput_29.FECHA_DISPENSACION;
	row166.HORA_DISPENSACION = next_tHashInput_29.HORA_DISPENSACION;
	row166.VALOR_SUBTOTAL_FORMULA = next_tHashInput_29.VALOR_SUBTOTAL_FORMULA;
	row166.VALOR_IVA_FORMULA = next_tHashInput_29.VALOR_IVA_FORMULA;
	row166.VALOR_TOTAL_FORMULA = next_tHashInput_29.VALOR_TOTAL_FORMULA;
	row166.SUBTOTAL_INT_FORMULA = next_tHashInput_29.SUBTOTAL_INT_FORMULA;
	row166.VALOR_TOTAL_IVA_INT_FORMULA = next_tHashInput_29.VALOR_TOTAL_IVA_INT_FORMULA;
	row166.VALOR_TOTAL_INT_FORMULA = next_tHashInput_29.VALOR_TOTAL_INT_FORMULA;
	row166.VALOR_FINAL_FORMULA = next_tHashInput_29.VALOR_FINAL_FORMULA;
	row166.UORG_DISPENSA_ID = next_tHashInput_29.UORG_DISPENSA_ID;
	row166.BODEGA = next_tHashInput_29.BODEGA;
	row166.FMOVIMIENTO = next_tHashInput_29.FMOVIMIENTO;
	row166.USUARIOS_ID = next_tHashInput_29.USUARIOS_ID;

 



/**
 * [tHashInput_29 begin ] stop
 */
	
	/**
	 * [tHashInput_29 main ] start
	 */

	

	
	
	currentComponent="tHashInput_29";
	
	

 


	tos_count_tHashInput_29++;

/**
 * [tHashInput_29 main ] stop
 */
	
	/**
	 * [tHashInput_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_29";
	
	

 



/**
 * [tHashInput_29 process_data_begin ] stop
 */

	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row166"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		
						row80Struct row80 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_13 = false;
		boolean mainRowRejected_tMap_13 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row80" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow80 = false;
       		  	    	
       		  	    	
 							row80Struct row80ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_13) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_13 = false;
								
                        		    		    row80HashKey.INVENTARIOS_ID = row166.INVENTARIOS_ID ;
                        		    		

								
		                        	row80HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row80.lookup( row80HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row80Struct fromLookup_row80 = null;
							row80 = row80Default;
										 
							
								 
							
							
								if (tHash_Lookup_row80 !=null && tHash_Lookup_row80.hasNext()) { // G 099
								
							
								
								fromLookup_row80 = tHash_Lookup_row80.next();

							
							
								} // G 099
							
							

							if(fromLookup_row80 != null) {
								row80 = fromLookup_row80;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

out12 = null;


// # Output table : 'out12'
out12_tmp.DMOVIMIENTOS_ID = row166.DMOVIMIENTOS_ID ;
out12_tmp.MOVIMIENTOS_ID = row166.MOVIMIENTOS_ID ;
out12_tmp.CANTIDAD_DISPENSADA = row166.CANTIDAD_DISPENSADA ;
out12_tmp.VALOR_UNITARIO_ITEM = row166.VALOR_UNITARIO_ITEM ;
out12_tmp.PORCENTAJE_IVA = row166.PORCENTAJE_IVA ;
out12_tmp.VALOR_IVA_UNITARIO = row166.VALOR_IVA_UNITARIO ;
out12_tmp.VALOR_INTERMEDIACION = row166.VALOR_INTERMEDIACION ;
out12_tmp.PORCENTAJE_INTERMEDIACION = row166.PORCENTAJE_INTERMEDIACION ;
out12_tmp.VALOR_IVA_INTERMEDIACION = row166.VALOR_IVA_INTERMEDIACION ;
out12_tmp.VALOR_TOTAL_MEDICAMENTO = row166.VALOR_TOTAL_MEDICAMENTO ;
out12_tmp.VALOR_TOTAL_INTERMEDIACION = row166.VALOR_TOTAL_INTERMEDIACION ;
out12_tmp.TOTAL_TRANSACCION_COMPLETA = row166.TOTAL_TRANSACCION_COMPLETA ;
out12_tmp.INVENTARIOS_ID = row166.INVENTARIOS_ID ;
out12_tmp.HDCONTRATOS_ID = row166.HDCONTRATOS_ID ;
out12_tmp.DFORMULA_ID = row166.DFORMULA_ID ;
out12_tmp.FECHA_DISPENSACION = row166.FECHA_DISPENSACION ;
out12_tmp.HORA_DISPENSACION = row166.HORA_DISPENSACION ;
out12_tmp.VALOR_SUBTOTAL_FORMULA = row166.VALOR_SUBTOTAL_FORMULA ;
out12_tmp.VALOR_IVA_FORMULA = row166.VALOR_IVA_FORMULA ;
out12_tmp.VALOR_TOTAL_FORMULA = row166.VALOR_TOTAL_FORMULA ;
out12_tmp.SUBTOTAL_INT_FORMULA = row166.SUBTOTAL_INT_FORMULA ;
out12_tmp.VALOR_TOTAL_IVA_INT_FORMULA = row166.VALOR_TOTAL_IVA_INT_FORMULA ;
out12_tmp.VALOR_TOTAL_INT_FORMULA = row166.VALOR_TOTAL_INT_FORMULA ;
out12_tmp.VALOR_FINAL_FORMULA = row166.VALOR_FINAL_FORMULA ;
out12_tmp.UORG_DISPENSA_ID = row166.UORG_DISPENSA_ID ;
out12_tmp.BODEGA = row166.BODEGA ;
out12_tmp.FMOVIMIENTO = row166.FMOVIMIENTO ;
out12_tmp.USUARIOS_ID = row166.USUARIOS_ID ;
out12_tmp.PRODUCTOS_ID = row80.INV_PRODUCTOS_ID ;
out12_tmp.LOTE = row80.LOTE ;
out12_tmp.FECHA_VENCIMIENTO = row80.FECHA_VENCIMIENTO ;
out12_tmp.CODIGOBARRAS = row80.CODIGOBARRAS ;
out12 = out12_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "out12"
if(out12 != null) { 



	
	/**
	 * [tMap_14 main ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out12"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_14 = false;
		
						row3Struct row3 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_14 = false;
		boolean mainRowRejected_tMap_14 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row3" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow3 = false;
       		  	    	
       		  	    	
 							row3Struct row3ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_14) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_14 = false;
								
                        		    		    row3HashKey.HDCONTRATOS_ID = out12.HDCONTRATOS_ID ;
                        		    		

								
		                        	row3HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row3.lookup( row3HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row3Struct fromLookup_row3 = null;
							row3 = row3Default;
										 
							
								 
							
							
								if (tHash_Lookup_row3 !=null && tHash_Lookup_row3.hasNext()) { // G 099
								
							
								
								fromLookup_row3 = tHash_Lookup_row3.next();

							
							
								} // G 099
							
							

							if(fromLookup_row3 != null) {
								row3 = fromLookup_row3;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_14__Struct Var = Var__tMap_14;// ###############################
        // ###############################
        // # Output tables

out13 = null;


// # Output table : 'out13'
out13_tmp.DMOVIMIENTOS_ID = out12.DMOVIMIENTOS_ID ;
out13_tmp.MOVIMIENTOS_ID = out12.MOVIMIENTOS_ID ;
out13_tmp.CANTIDAD_DISPENSADA = out12.CANTIDAD_DISPENSADA ;
out13_tmp.VALOR_UNITARIO_ITEM = out12.VALOR_UNITARIO_ITEM ;
out13_tmp.PORCENTAJE_IVA = out12.PORCENTAJE_IVA ;
out13_tmp.VALOR_IVA_UNITARIO = out12.VALOR_IVA_UNITARIO ;
out13_tmp.VALOR_INTERMEDIACION = out12.VALOR_INTERMEDIACION ;
out13_tmp.PORCENTAJE_INTERMEDIACION = out12.PORCENTAJE_INTERMEDIACION ;
out13_tmp.VALOR_IVA_INTERMEDIACION = out12.VALOR_IVA_INTERMEDIACION ;
out13_tmp.VALOR_TOTAL_MEDICAMENTO = out12.VALOR_TOTAL_MEDICAMENTO ;
out13_tmp.VALOR_TOTAL_INTERMEDIACION = out12.VALOR_TOTAL_INTERMEDIACION ;
out13_tmp.TOTAL_TRANSACCION_COMPLETA = out12.TOTAL_TRANSACCION_COMPLETA ;
out13_tmp.INVENTARIOS_ID = out12.INVENTARIOS_ID ;
out13_tmp.HDCONTRATOS_ID = out12.HDCONTRATOS_ID ;
out13_tmp.DFORMULA_ID = out12.DFORMULA_ID ;
out13_tmp.FECHA_DISPENSACION = out12.FECHA_DISPENSACION ;
out13_tmp.HORA_DISPENSACION = out12.HORA_DISPENSACION ;
out13_tmp.VALOR_SUBTOTAL_FORMULA = out12.VALOR_SUBTOTAL_FORMULA ;
out13_tmp.VALOR_IVA_FORMULA = out12.VALOR_IVA_FORMULA ;
out13_tmp.VALOR_TOTAL_FORMULA = out12.VALOR_TOTAL_FORMULA ;
out13_tmp.SUBTOTAL_INT_FORMULA = out12.SUBTOTAL_INT_FORMULA ;
out13_tmp.VALOR_TOTAL_IVA_INT_FORMULA = out12.VALOR_TOTAL_IVA_INT_FORMULA ;
out13_tmp.VALOR_TOTAL_INT_FORMULA = out12.VALOR_TOTAL_INT_FORMULA ;
out13_tmp.VALOR_FINAL_FORMULA = out12.VALOR_FINAL_FORMULA ;
out13_tmp.UORG_DISPENSA_ID = out12.UORG_DISPENSA_ID ;
out13_tmp.BODEGA = out12.BODEGA ;
out13_tmp.FMOVIMIENTO = out12.FMOVIMIENTO ;
out13_tmp.USUARIOS_ID = out12.USUARIOS_ID ;
out13_tmp.PRODUCTOS_ID = out12.PRODUCTOS_ID ;
out13_tmp.LOTE = out12.LOTE ;
out13_tmp.FECHA_VENCIMIENTO = out12.FECHA_VENCIMIENTO ;
out13_tmp.CODIGOBARRAS = out12.CODIGOBARRAS ;
out13_tmp.CODIGO_OPERADOR_MEDICAMENTO = row3.CODIGO_OPERADOR_MEDICAMENTO ;
out13_tmp.TIPO_MEDICAMENTO = row3.TIPO_MEDICAMENTO ;
out13 = out13_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_14 = false;










 


	tos_count_tMap_14++;

/**
 * [tMap_14 main ] stop
 */
	
	/**
	 * [tMap_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_begin ] stop
 */
// Start of branch "out13"
if(out13 != null) { 



	
	/**
	 * [tMap_15 main ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out13"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_15 = false;
		
						row7Struct row7 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_15 = false;
		boolean mainRowRejected_tMap_15 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row7" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow7 = false;
       		  	    	
       		  	    	
 							row7Struct row7ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_15) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_15 = false;
								
                        		    		    row7HashKey.PRODUCTOS_ID = out13.PRODUCTOS_ID ;
                        		    		

								
		                        	row7HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row7.lookup( row7HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row7Struct fromLookup_row7 = null;
							row7 = row7Default;
										 
							
								 
							
							
								if (tHash_Lookup_row7 !=null && tHash_Lookup_row7.hasNext()) { // G 099
								
							
								
								fromLookup_row7 = tHash_Lookup_row7.next();

							
							
								} // G 099
							
							

							if(fromLookup_row7 != null) {
								row7 = fromLookup_row7;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_15__Struct Var = Var__tMap_15;// ###############################
        // ###############################
        // # Output tables

out14 = null;


// # Output table : 'out14'
out14_tmp.DMOVIMIENTOS_ID = out13.DMOVIMIENTOS_ID ;
out14_tmp.MOVIMIENTOS_ID = out13.MOVIMIENTOS_ID ;
out14_tmp.CANTIDAD_DISPENSADA = out13.CANTIDAD_DISPENSADA ;
out14_tmp.VALOR_UNITARIO_ITEM = out13.VALOR_UNITARIO_ITEM ;
out14_tmp.PORCENTAJE_IVA = out13.PORCENTAJE_IVA ;
out14_tmp.VALOR_IVA_UNITARIO = out13.VALOR_IVA_UNITARIO ;
out14_tmp.VALOR_INTERMEDIACION = out13.VALOR_INTERMEDIACION ;
out14_tmp.PORCENTAJE_INTERMEDIACION = out13.PORCENTAJE_INTERMEDIACION ;
out14_tmp.VALOR_IVA_INTERMEDIACION = out13.VALOR_IVA_INTERMEDIACION ;
out14_tmp.VALOR_TOTAL_MEDICAMENTO = out13.VALOR_TOTAL_MEDICAMENTO ;
out14_tmp.VALOR_TOTAL_INTERMEDIACION = out13.VALOR_TOTAL_INTERMEDIACION ;
out14_tmp.TOTAL_TRANSACCION_COMPLETA = out13.TOTAL_TRANSACCION_COMPLETA ;
out14_tmp.INVENTARIOS_ID = out13.INVENTARIOS_ID ;
out14_tmp.HDCONTRATOS_ID = out13.HDCONTRATOS_ID ;
out14_tmp.DFORMULA_ID = out13.DFORMULA_ID ;
out14_tmp.FECHA_DISPENSACION = out13.FECHA_DISPENSACION ;
out14_tmp.HORA_DISPENSACION = out13.HORA_DISPENSACION ;
out14_tmp.VALOR_SUBTOTAL_FORMULA = out13.VALOR_SUBTOTAL_FORMULA ;
out14_tmp.VALOR_IVA_FORMULA = out13.VALOR_IVA_FORMULA ;
out14_tmp.VALOR_TOTAL_FORMULA = out13.VALOR_TOTAL_FORMULA ;
out14_tmp.SUBTOTAL_INT_FORMULA = out13.SUBTOTAL_INT_FORMULA ;
out14_tmp.VALOR_TOTAL_IVA_INT_FORMULA = out13.VALOR_TOTAL_IVA_INT_FORMULA ;
out14_tmp.VALOR_TOTAL_INT_FORMULA = out13.VALOR_TOTAL_INT_FORMULA ;
out14_tmp.VALOR_FINAL_FORMULA = out13.VALOR_FINAL_FORMULA ;
out14_tmp.UORG_DISPENSA_ID = out13.UORG_DISPENSA_ID ;
out14_tmp.BODEGA = out13.BODEGA ;
out14_tmp.FMOVIMIENTO = out13.FMOVIMIENTO ;
out14_tmp.USUARIOS_ID = out13.USUARIOS_ID ;
out14_tmp.PRODUCTOS_ID = out13.PRODUCTOS_ID ;
out14_tmp.LOTE = out13.LOTE ;
out14_tmp.FECHA_VENCIMIENTO = out13.FECHA_VENCIMIENTO ;
out14_tmp.CODIGOBARRAS = out13.CODIGOBARRAS ;
out14_tmp.CODIGO_OPERADOR_MEDICAMENTO = out13.CODIGO_OPERADOR_MEDICAMENTO ;
out14_tmp.TIPO_MEDICAMENTO = out13.TIPO_MEDICAMENTO ;
out14_tmp.CARACTERISTICAS_MEDICAMENTO = row7.CARACTERISTICAS_MEDICAMENTO ;
out14 = out14_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_15 = false;










 


	tos_count_tMap_15++;

/**
 * [tMap_15 main ] stop
 */
	
	/**
	 * [tMap_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_begin ] stop
 */
// Start of branch "out14"
if(out14 != null) { 



	
	/**
	 * [tMap_16 main ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out14"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_16 = false;
		
						row4Struct row4 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_16 = false;
		boolean mainRowRejected_tMap_16 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row4" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow4 = false;
       		  	    	
       		  	    	
 							row4Struct row4ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_16) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_16 = false;
								
                        		    		    row4HashKey.ID = out14.USUARIOS_ID ;
                        		    		

								
		                        	row4HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row4.lookup( row4HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row4Struct fromLookup_row4 = null;
							row4 = row4Default;
										 
							
								 
							
							
								if (tHash_Lookup_row4 !=null && tHash_Lookup_row4.hasNext()) { // G 099
								
							
								
								fromLookup_row4 = tHash_Lookup_row4.next();

							
							
								} // G 099
							
							

							if(fromLookup_row4 != null) {
								row4 = fromLookup_row4;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_16__Struct Var = Var__tMap_16;// ###############################
        // ###############################
        // # Output tables

out15 = null;


// # Output table : 'out15'
out15_tmp.DMOVIMIENTOS_ID = out14.DMOVIMIENTOS_ID ;
out15_tmp.MOVIMIENTOS_ID = out14.MOVIMIENTOS_ID ;
out15_tmp.CANTIDAD_DISPENSADA = out14.CANTIDAD_DISPENSADA ;
out15_tmp.VALOR_UNITARIO_ITEM = out14.VALOR_UNITARIO_ITEM ;
out15_tmp.PORCENTAJE_IVA = out14.PORCENTAJE_IVA ;
out15_tmp.VALOR_IVA_UNITARIO = out14.VALOR_IVA_UNITARIO ;
out15_tmp.VALOR_INTERMEDIACION = out14.VALOR_INTERMEDIACION ;
out15_tmp.PORCENTAJE_INTERMEDIACION = out14.PORCENTAJE_INTERMEDIACION ;
out15_tmp.VALOR_IVA_INTERMEDIACION = out14.VALOR_IVA_INTERMEDIACION ;
out15_tmp.VALOR_TOTAL_MEDICAMENTO = out14.VALOR_TOTAL_MEDICAMENTO ;
out15_tmp.VALOR_TOTAL_INTERMEDIACION = out14.VALOR_TOTAL_INTERMEDIACION ;
out15_tmp.TOTAL_TRANSACCION_COMPLETA = out14.TOTAL_TRANSACCION_COMPLETA ;
out15_tmp.INVENTARIOS_ID = out14.INVENTARIOS_ID ;
out15_tmp.HDCONTRATOS_ID = out14.HDCONTRATOS_ID ;
out15_tmp.DFORMULA_ID = out14.DFORMULA_ID ;
out15_tmp.FECHA_DISPENSACION = out14.FECHA_DISPENSACION ;
out15_tmp.HORA_DISPENSACION = out14.HORA_DISPENSACION ;
out15_tmp.VALOR_SUBTOTAL_FORMULA = out14.VALOR_SUBTOTAL_FORMULA ;
out15_tmp.VALOR_IVA_FORMULA = out14.VALOR_IVA_FORMULA ;
out15_tmp.VALOR_TOTAL_FORMULA = out14.VALOR_TOTAL_FORMULA ;
out15_tmp.SUBTOTAL_INT_FORMULA = out14.SUBTOTAL_INT_FORMULA ;
out15_tmp.VALOR_TOTAL_IVA_INT_FORMULA = out14.VALOR_TOTAL_IVA_INT_FORMULA ;
out15_tmp.VALOR_TOTAL_INT_FORMULA = out14.VALOR_TOTAL_INT_FORMULA ;
out15_tmp.VALOR_FINAL_FORMULA = out14.VALOR_FINAL_FORMULA ;
out15_tmp.UORG_DISPENSA_ID = out14.UORG_DISPENSA_ID ;
out15_tmp.BODEGA = out14.BODEGA ;
out15_tmp.FMOVIMIENTO = out14.FMOVIMIENTO ;
out15_tmp.USUARIOS_ID = out14.USUARIOS_ID ;
out15_tmp.PRODUCTOS_ID = out14.PRODUCTOS_ID ;
out15_tmp.LOTE = out14.LOTE ;
out15_tmp.FECHA_VENCIMIENTO = out14.FECHA_VENCIMIENTO ;
out15_tmp.CODIGOBARRAS = out14.CODIGOBARRAS ;
out15_tmp.CODIGO_OPERADOR_MEDICAMENTO = out14.CODIGO_OPERADOR_MEDICAMENTO ;
out15_tmp.TIPO_MEDICAMENTO = out14.TIPO_MEDICAMENTO ;
out15_tmp.CARACTERISTICAS_MEDICAMENTO = out14.CARACTERISTICAS_MEDICAMENTO ;
out15_tmp.USUARIO_DESPACHADOR = row4.USUARIO ;
out15 = out15_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_16 = false;










 


	tos_count_tMap_16++;

/**
 * [tMap_16 main ] stop
 */
	
	/**
	 * [tMap_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_begin ] stop
 */
// Start of branch "out15"
if(out15 != null) { 



	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out15"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

out3 = null;


// # Output table : 'out3'
out3_tmp.DMOVIMIENTOS_ID = out15.DMOVIMIENTOS_ID ;
out3_tmp.MOVIMIENTOS_ID = out15.MOVIMIENTOS_ID ;
out3_tmp.CANTIDAD_DISPENSADA = out15.CANTIDAD_DISPENSADA ;
out3_tmp.VALOR_UNITARIO_ITEM = out15.VALOR_UNITARIO_ITEM ;
out3_tmp.PORCENTAJE_IVA = out15.PORCENTAJE_IVA ;
out3_tmp.VALOR_IVA_UNITARIO = out15.VALOR_IVA_UNITARIO ;
out3_tmp.VALOR_INTERMEDIACION = out15.VALOR_INTERMEDIACION ;
out3_tmp.PORCENTAJE_INTERMEDIACION = out15.PORCENTAJE_INTERMEDIACION ;
out3_tmp.VALOR_IVA_INTERMEDIACION = out15.VALOR_IVA_INTERMEDIACION ;
out3_tmp.VALOR_TOTAL_MEDICAMENTO = out15.VALOR_TOTAL_MEDICAMENTO ;
out3_tmp.VALOR_TOTAL_INTERMEDIACION = out15.VALOR_TOTAL_INTERMEDIACION ;
out3_tmp.TOTAL_TRANSACCION_COMPLETA = out15.TOTAL_TRANSACCION_COMPLETA ;
out3_tmp.HDCONTRATOS_ID = out15.HDCONTRATOS_ID ;
out3_tmp.DFORMULA_ID = out15.DFORMULA_ID ;
out3_tmp.FECHA_DISPENSACION = out15.FECHA_DISPENSACION ;
out3_tmp.HORA_DISPENSACION = out15.HORA_DISPENSACION ;
out3_tmp.VALOR_SUBTOTAL_FORMULA = out15.VALOR_SUBTOTAL_FORMULA ;
out3_tmp.VALOR_IVA_FORMULA = out15.VALOR_IVA_FORMULA ;
out3_tmp.VALOR_TOTAL_FORMULA = out15.VALOR_TOTAL_FORMULA ;
out3_tmp.SUBTOTAL_INT_FORMULA = out15.SUBTOTAL_INT_FORMULA ;
out3_tmp.VALOR_TOTAL_IVA_INT_FORMULA = out15.VALOR_TOTAL_IVA_INT_FORMULA ;
out3_tmp.VALOR_TOTAL_INT_FORMULA = out15.VALOR_TOTAL_INT_FORMULA ;
out3_tmp.VALOR_FINAL_FORMULA = out15.VALOR_FINAL_FORMULA ;
out3_tmp.UORG_DISPENSA_ID = out15.UORG_DISPENSA_ID ;
out3_tmp.BODEGA = out15.BODEGA ;
out3_tmp.FMOVIMIENTO = out15.FMOVIMIENTO ;
out3_tmp.USUARIOS_ID = out15.USUARIOS_ID ;
out3_tmp.LOTE = out15.LOTE ;
out3_tmp.FVENCIMIENTO = out15.FECHA_VENCIMIENTO ;
out3_tmp.PRODUCTOS_ID = out15.PRODUCTOS_ID ;
out3_tmp.TIPO_MEDICAMENTO = out15.TIPO_MEDICAMENTO ;
out3_tmp.CODIGO_OPERADOR_MEDICAMENTO = out15.CODIGO_OPERADOR_MEDICAMENTO ;
out3_tmp.CARACTERISTICAS_MEDICAMENTO = out15.CARACTERISTICAS_MEDICAMENTO ;
out3_tmp.USUARIO_DESPACHADOR = out15.USUARIO_DESPACHADOR ;
out3_tmp.CODIGOBARRAS = out15.CODIGOBARRAS ;
out3 = out3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "out3"
if(out3 != null) { 



	
	/**
	 * [tOracleOutput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out3"
						
						);
					}
					



        whetherReject_tOracleOutput_7 = false;
                    pstmt_tOracleOutput_7.setBigDecimal(1, out3.DMOVIMIENTOS_ID);

            int checkCount_tOracleOutput_7 = -1;
            try (java.sql.ResultSet rs_tOracleOutput_7 = pstmt_tOracleOutput_7.executeQuery()) {
                while(rs_tOracleOutput_7.next()) {
                    checkCount_tOracleOutput_7 = rs_tOracleOutput_7.getInt(1);
                }
            }
            if(checkCount_tOracleOutput_7 > 0) {
                        pstmtUpdate_tOracleOutput_7.setBigDecimal(1, out3.MOVIMIENTOS_ID);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(2, out3.CANTIDAD_DISPENSADA);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(3, out3.VALOR_UNITARIO_ITEM);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(4, out3.PORCENTAJE_IVA);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(5, out3.VALOR_IVA_UNITARIO);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(6, out3.VALOR_INTERMEDIACION);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(7, out3.PORCENTAJE_INTERMEDIACION);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(8, out3.VALOR_IVA_INTERMEDIACION);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(9, out3.VALOR_TOTAL_MEDICAMENTO);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(10, out3.VALOR_TOTAL_INTERMEDIACION);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(11, out3.TOTAL_TRANSACCION_COMPLETA);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(12, out3.HDCONTRATOS_ID);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(13, out3.DFORMULA_ID);

                        if(out3.FECHA_DISPENSACION != null) {
pstmtUpdate_tOracleOutput_7.setObject(14, new java.sql.Timestamp(out3.FECHA_DISPENSACION.getTime()),java.sql.Types.DATE);
} else {
pstmtUpdate_tOracleOutput_7.setNull(14, java.sql.Types.DATE);
}

                        if(out3.HORA_DISPENSACION == null) {
pstmtUpdate_tOracleOutput_7.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_7.setString(15, out3.HORA_DISPENSACION);
}

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(16, out3.VALOR_SUBTOTAL_FORMULA);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(17, out3.VALOR_IVA_FORMULA);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(18, out3.VALOR_TOTAL_FORMULA);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(19, out3.SUBTOTAL_INT_FORMULA);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(20, out3.VALOR_TOTAL_IVA_INT_FORMULA);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(21, out3.VALOR_TOTAL_INT_FORMULA);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(22, out3.VALOR_FINAL_FORMULA);

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(23, out3.UORG_DISPENSA_ID);

                        if(out3.BODEGA == null) {
pstmtUpdate_tOracleOutput_7.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_7.setString(24, out3.BODEGA);
}

                        if(out3.FMOVIMIENTO != null) {
pstmtUpdate_tOracleOutput_7.setObject(25, new java.sql.Timestamp(out3.FMOVIMIENTO.getTime()),java.sql.Types.DATE);
} else {
pstmtUpdate_tOracleOutput_7.setNull(25, java.sql.Types.DATE);
}

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(26, out3.USUARIOS_ID);

                        if(out3.LOTE == null) {
pstmtUpdate_tOracleOutput_7.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_7.setString(27, out3.LOTE);
}

                        if(out3.FVENCIMIENTO != null) {
pstmtUpdate_tOracleOutput_7.setObject(28, new java.sql.Timestamp(out3.FVENCIMIENTO.getTime()),java.sql.Types.DATE);
} else {
pstmtUpdate_tOracleOutput_7.setNull(28, java.sql.Types.DATE);
}

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(29, out3.PRODUCTOS_ID);

                        if(out3.TIPO_MEDICAMENTO == null) {
pstmtUpdate_tOracleOutput_7.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_7.setString(30, out3.TIPO_MEDICAMENTO);
}

                        if(out3.CODIGO_OPERADOR_MEDICAMENTO == null) {
pstmtUpdate_tOracleOutput_7.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_7.setString(31, out3.CODIGO_OPERADOR_MEDICAMENTO);
}

                        if(out3.CARACTERISTICAS_MEDICAMENTO == null) {
pstmtUpdate_tOracleOutput_7.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_7.setString(32, out3.CARACTERISTICAS_MEDICAMENTO);
}

                        if(out3.USUARIO_DESPACHADOR == null) {
pstmtUpdate_tOracleOutput_7.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_7.setString(33, out3.USUARIO_DESPACHADOR);
}

                        if(out3.CODIGOBARRAS == null) {
pstmtUpdate_tOracleOutput_7.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_7.setString(34, out3.CODIGOBARRAS);
}

                        pstmtUpdate_tOracleOutput_7.setBigDecimal(35 + count_tOracleOutput_7, out3.DMOVIMIENTOS_ID);

                try {
                    int processedCount_tOracleOutput_7 = pstmtUpdate_tOracleOutput_7.executeUpdate();
                    updatedCount_tOracleOutput_7 += processedCount_tOracleOutput_7;
                    rowsToCommitCount_tOracleOutput_7 += processedCount_tOracleOutput_7;
                    nb_line_tOracleOutput_7++;
                } catch(java.lang.Exception e_tOracleOutput_7) {
globalMap.put("tOracleOutput_7_ERROR_MESSAGE",e_tOracleOutput_7.getMessage());
                    whetherReject_tOracleOutput_7 = true;
                        nb_line_tOracleOutput_7++;
                            System.err.print(e_tOracleOutput_7.getMessage());
                }
            } else {
                        pstmtInsert_tOracleOutput_7.setBigDecimal(1, out3.DMOVIMIENTOS_ID);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(2, out3.MOVIMIENTOS_ID);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(3, out3.CANTIDAD_DISPENSADA);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(4, out3.VALOR_UNITARIO_ITEM);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(5, out3.PORCENTAJE_IVA);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(6, out3.VALOR_IVA_UNITARIO);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(7, out3.VALOR_INTERMEDIACION);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(8, out3.PORCENTAJE_INTERMEDIACION);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(9, out3.VALOR_IVA_INTERMEDIACION);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(10, out3.VALOR_TOTAL_MEDICAMENTO);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(11, out3.VALOR_TOTAL_INTERMEDIACION);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(12, out3.TOTAL_TRANSACCION_COMPLETA);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(13, out3.HDCONTRATOS_ID);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(14, out3.DFORMULA_ID);

                        if(out3.FECHA_DISPENSACION != null) {
pstmtInsert_tOracleOutput_7.setObject(15, new java.sql.Timestamp(out3.FECHA_DISPENSACION.getTime()),java.sql.Types.DATE);
} else {
pstmtInsert_tOracleOutput_7.setNull(15, java.sql.Types.DATE);
}

                        if(out3.HORA_DISPENSACION == null) {
pstmtInsert_tOracleOutput_7.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_7.setString(16, out3.HORA_DISPENSACION);
}

                        pstmtInsert_tOracleOutput_7.setBigDecimal(17, out3.VALOR_SUBTOTAL_FORMULA);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(18, out3.VALOR_IVA_FORMULA);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(19, out3.VALOR_TOTAL_FORMULA);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(20, out3.SUBTOTAL_INT_FORMULA);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(21, out3.VALOR_TOTAL_IVA_INT_FORMULA);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(22, out3.VALOR_TOTAL_INT_FORMULA);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(23, out3.VALOR_FINAL_FORMULA);

                        pstmtInsert_tOracleOutput_7.setBigDecimal(24, out3.UORG_DISPENSA_ID);

                        if(out3.BODEGA == null) {
pstmtInsert_tOracleOutput_7.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_7.setString(25, out3.BODEGA);
}

                        if(out3.FMOVIMIENTO != null) {
pstmtInsert_tOracleOutput_7.setObject(26, new java.sql.Timestamp(out3.FMOVIMIENTO.getTime()),java.sql.Types.DATE);
} else {
pstmtInsert_tOracleOutput_7.setNull(26, java.sql.Types.DATE);
}

                        pstmtInsert_tOracleOutput_7.setBigDecimal(27, out3.USUARIOS_ID);

                        if(out3.LOTE == null) {
pstmtInsert_tOracleOutput_7.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_7.setString(28, out3.LOTE);
}

                        if(out3.FVENCIMIENTO != null) {
pstmtInsert_tOracleOutput_7.setObject(29, new java.sql.Timestamp(out3.FVENCIMIENTO.getTime()),java.sql.Types.DATE);
} else {
pstmtInsert_tOracleOutput_7.setNull(29, java.sql.Types.DATE);
}

                        pstmtInsert_tOracleOutput_7.setBigDecimal(30, out3.PRODUCTOS_ID);

                        if(out3.TIPO_MEDICAMENTO == null) {
pstmtInsert_tOracleOutput_7.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_7.setString(31, out3.TIPO_MEDICAMENTO);
}

                        if(out3.CODIGO_OPERADOR_MEDICAMENTO == null) {
pstmtInsert_tOracleOutput_7.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_7.setString(32, out3.CODIGO_OPERADOR_MEDICAMENTO);
}

                        if(out3.CARACTERISTICAS_MEDICAMENTO == null) {
pstmtInsert_tOracleOutput_7.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_7.setString(33, out3.CARACTERISTICAS_MEDICAMENTO);
}

                        if(out3.USUARIO_DESPACHADOR == null) {
pstmtInsert_tOracleOutput_7.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_7.setString(34, out3.USUARIO_DESPACHADOR);
}

                        if(out3.CODIGOBARRAS == null) {
pstmtInsert_tOracleOutput_7.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_7.setString(35, out3.CODIGOBARRAS);
}

                try {
                    int processedCount_tOracleOutput_7 = pstmtInsert_tOracleOutput_7.executeUpdate();
                    insertedCount_tOracleOutput_7 += processedCount_tOracleOutput_7;
                    rowsToCommitCount_tOracleOutput_7 += processedCount_tOracleOutput_7;
                    nb_line_tOracleOutput_7++;
                } catch(java.lang.Exception e_tOracleOutput_7) {
globalMap.put("tOracleOutput_7_ERROR_MESSAGE",e_tOracleOutput_7.getMessage());
                    whetherReject_tOracleOutput_7 = true;
                        nb_line_tOracleOutput_7++;
                            System.err.print(e_tOracleOutput_7.getMessage());
                }
            }
                commitCounter_tOracleOutput_7++;
                if(commitEvery_tOracleOutput_7 <= commitCounter_tOracleOutput_7) {
                    if(rowsToCommitCount_tOracleOutput_7 != 0){
                    	
                    }
                    conn_tOracleOutput_7.commit();
                    if(rowsToCommitCount_tOracleOutput_7 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_7 = 0;
                    }
                    commitCounter_tOracleOutput_7=0;
                }

 


	tos_count_tOracleOutput_7++;

/**
 * [tOracleOutput_7 main ] stop
 */
	
	/**
	 * [tOracleOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	

 



/**
 * [tOracleOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	

 



/**
 * [tOracleOutput_7 process_data_end ] stop
 */

} // End of branch "out3"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */

} // End of branch "out15"




	
	/**
	 * [tMap_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_end ] stop
 */

} // End of branch "out14"




	
	/**
	 * [tMap_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_end ] stop
 */

} // End of branch "out13"




	
	/**
	 * [tMap_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_end ] stop
 */

} // End of branch "out12"




	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_29";
	
	

 



/**
 * [tHashInput_29 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_29 end ] start
	 */

	

	
	
	currentComponent="tHashInput_29";
	
	
    

		
			nb_line_tHashInput_29++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_Medicamentos_" + pid +"_tHashOutput_15");
	


	globalMap.put("tHashInput_29_NB_LINE", nb_line_tHashInput_29);       

 

ok_Hash.put("tHashInput_29", true);
end_Hash.put("tHashInput_29", System.currentTimeMillis());




/**
 * [tHashInput_29 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row80 != null) {
						tHash_Lookup_row80.endGet();
					}
					globalMap.remove( "tHash_Lookup_row80" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row166");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */

	
	/**
	 * [tMap_14 end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row3 != null) {
						tHash_Lookup_row3.endGet();
					}
					globalMap.remove( "tHash_Lookup_row3" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out12");
			  	}
			  	
 

ok_Hash.put("tMap_14", true);
end_Hash.put("tMap_14", System.currentTimeMillis());




/**
 * [tMap_14 end ] stop
 */

	
	/**
	 * [tMap_15 end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row7 != null) {
						tHash_Lookup_row7.endGet();
					}
					globalMap.remove( "tHash_Lookup_row7" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out13");
			  	}
			  	
 

ok_Hash.put("tMap_15", true);
end_Hash.put("tMap_15", System.currentTimeMillis());




/**
 * [tMap_15 end ] stop
 */

	
	/**
	 * [tMap_16 end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row4 != null) {
						tHash_Lookup_row4.endGet();
					}
					globalMap.remove( "tHash_Lookup_row4" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out14");
			  	}
			  	
 

ok_Hash.put("tMap_16", true);
end_Hash.put("tMap_16", System.currentTimeMillis());




/**
 * [tMap_16 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out15");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tOracleOutput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_7 != null){
            pstmtUpdate_tOracleOutput_7.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_7");
        }
        if(pstmtInsert_tOracleOutput_7 != null){
            pstmtInsert_tOracleOutput_7.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_7");
        }
        if(pstmt_tOracleOutput_7 != null) {
            pstmt_tOracleOutput_7.close();
            resourceMap.remove("pstmt_tOracleOutput_7");
        }
    resourceMap.put("statementClosed_tOracleOutput_7", true);
		if(commitCounter_tOracleOutput_7 > 0 && rowsToCommitCount_tOracleOutput_7 != 0) {
			
		}
		conn_tOracleOutput_7.commit();
		if(commitCounter_tOracleOutput_7 > 0 && rowsToCommitCount_tOracleOutput_7 != 0) {
			
			rowsToCommitCount_tOracleOutput_7 = 0;
		}
		commitCounter_tOracleOutput_7 = 0;
		
		
		conn_tOracleOutput_7 .close();
		
		resourceMap.put("finish_tOracleOutput_7", true);
   	

	
	nb_line_deleted_tOracleOutput_7=nb_line_deleted_tOracleOutput_7+ deletedCount_tOracleOutput_7;
	nb_line_update_tOracleOutput_7=nb_line_update_tOracleOutput_7 + updatedCount_tOracleOutput_7;
	nb_line_inserted_tOracleOutput_7=nb_line_inserted_tOracleOutput_7 + insertedCount_tOracleOutput_7;
	nb_line_rejected_tOracleOutput_7=nb_line_rejected_tOracleOutput_7 + rejectedCount_tOracleOutput_7;
	
        globalMap.put("tOracleOutput_7_NB_LINE",nb_line_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_UPDATED",nb_line_update_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_7);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out3");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_7", true);
end_Hash.put("tOracleOutput_7", System.currentTimeMillis());




/**
 * [tOracleOutput_7 end ] stop
 */


















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_29:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk24", 0, "ok");
								} 
							
							tOracleInput_57Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_16"
					     			globalMap.remove("tHash_Lookup_row4"); 
				     			
					     			//free memory for "tMap_15"
					     			globalMap.remove("tHash_Lookup_row7"); 
				     			
					     			//free memory for "tMap_14"
					     			globalMap.remove("tHash_Lookup_row3"); 
				     			
					     			//free memory for "tMap_13"
					     			globalMap.remove("tHash_Lookup_row80"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_29 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_29";
	
	

 



/**
 * [tHashInput_29 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 finally ] stop
 */

	
	/**
	 * [tMap_14 finally ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 finally ] stop
 */

	
	/**
	 * [tMap_15 finally ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 finally ] stop
 */

	
	/**
	 * [tMap_16 finally ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tOracleOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_7") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_7 = null;
                if ((pstmtUpdateToClose_tOracleOutput_7 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_7")) != null) {
                    pstmtUpdateToClose_tOracleOutput_7.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_7 = null;
                if ((pstmtInsertToClose_tOracleOutput_7 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_7")) != null) {
                    pstmtInsertToClose_tOracleOutput_7.close();
                }
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_7 = null;
                if ((pstmtToClose_tOracleOutput_7 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_7")) != null) {
                    pstmtToClose_tOracleOutput_7.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_7") == null){
            java.sql.Connection ctn_tOracleOutput_7 = null;
            if((ctn_tOracleOutput_7 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_7")) != null){
                try {
                    ctn_tOracleOutput_7.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_7) {
                    String errorMessage_tOracleOutput_7 = "failed to close the connection in tOracleOutput_7 :" + sqlEx_tOracleOutput_7.getMessage();
                    System.err.println(errorMessage_tOracleOutput_7);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_7 finally ] stop
 */


















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_29_SUBPROCESS_STATE", 1);
	}
	


public static class out4Struct implements routines.system.IPersistableRow<out4Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal PENDIENTES_ID;

				public BigDecimal getPENDIENTES_ID () {
					return this.PENDIENTES_ID;
				}

				public Boolean PENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PENDIENTES_IDIsKey(){
				    return true;
				}
				public Integer PENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PENDIENTES_IDPrecision(){
				    return null;
				}
				public String PENDIENTES_IDDefault(){
				
					return null;
				
				}
				public String PENDIENTES_IDComment(){
				
				    return "PK - Llave Primaria";
				
				}
				public String PENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PENDIENTES_IDOriginalDbColumnName(){
				
					return "PENDIENTES_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 7;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "Fecha de creacion del registro";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_GENERADA;

				public BigDecimal getCANTIDAD_PENDIENTE_GENERADA () {
					return this.CANTIDAD_PENDIENTE_GENERADA;
				}

				public Boolean CANTIDAD_PENDIENTE_GENERADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_GENERADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADAPrecision(){
				    return null;
				}
				public String CANTIDAD_PENDIENTE_GENERADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAComment(){
				
				    return "Cantidad pendiente";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_GENERADA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_ENTREGADA;

				public BigDecimal getCANTIDAD_PENDIENTE_ENTREGADA () {
					return this.CANTIDAD_PENDIENTE_ENTREGADA;
				}

				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADAPrecision(){
				    return null;
				}
				public String CANTIDAD_PENDIENTE_ENTREGADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAComment(){
				
				    return "Cantidad entregada";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_ENTREGADA";
				
				}

				
			    public java.util.Date FECHA_LIMITE_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_LIMITE_ENTREGA_PENDIENTE () {
					return this.FECHA_LIMITE_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTELength(){
				    return 7;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEComment(){
				
				    return "Fecha limite para entregar los medicamentos del pendiente";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_LIMITE_ENTREGA_PENDIENTE";
				
				}

				
			    public BigDecimal MOV_ENTREGA_PENDIENTE_ID;

				public BigDecimal getMOV_ENTREGA_PENDIENTE_ID () {
					return this.MOV_ENTREGA_PENDIENTE_ID;
				}

				public Boolean MOV_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean MOV_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String MOV_ENTREGA_PENDIENTE_IDDefault(){
				
					return null;
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDComment(){
				
				    return "FK - MED_MOVIMIENTOS (Movimiento de entrega)";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "MOV_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public BigDecimal ESM_ENTREGA_PENDIENTE_ID;

				public BigDecimal getESM_ENTREGA_PENDIENTE_ID () {
					return this.ESM_ENTREGA_PENDIENTE_ID;
				}

				public Boolean ESM_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean ESM_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String ESM_ENTREGA_PENDIENTE_IDDefault(){
				
					return null;
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDComment(){
				
				    return "FK - GEN_UORG (Unidad de destino)";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "ESM_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public java.util.Date FECHA_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_ENTREGA_PENDIENTE () {
					return this.FECHA_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_ENTREGA_PENDIENTELength(){
				    return 7;
				}
				public Integer FECHA_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_ENTREGA_PENDIENTEComment(){
				
				    return "Fecha de entrega del medicamento que genbero el pendiente";
				
				}
				public String FECHA_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_ENTREGA_PENDIENTE";
				
				}

				
			    public String NUMERO_TIRILLA;

				public String getNUMERO_TIRILLA () {
					return this.NUMERO_TIRILLA;
				}

				public Boolean NUMERO_TIRILLAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_TIRILLAIsKey(){
				    return false;
				}
				public Integer NUMERO_TIRILLALength(){
				    return 50;
				}
				public Integer NUMERO_TIRILLAPrecision(){
				    return 0;
				}
				public String NUMERO_TIRILLADefault(){
				
					return null;
				
				}
				public String NUMERO_TIRILLAComment(){
				
				    return "Consecutivo de la tirilla";
				
				}
				public String NUMERO_TIRILLAPattern(){
				
					return "";
				
				}
				public String NUMERO_TIRILLAOriginalDbColumnName(){
				
					return "NUMERO_TIRILLA";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "FK - MED_MOVIMIENTOS";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return null;
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "FK - MED_FORMASFARMACEUTICAS";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal DIAS_HABILES_VENCIMIENTO;

				public BigDecimal getDIAS_HABILES_VENCIMIENTO () {
					return this.DIAS_HABILES_VENCIMIENTO;
				}

				public Boolean DIAS_HABILES_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean DIAS_HABILES_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer DIAS_HABILES_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer DIAS_HABILES_VENCIMIENTOPrecision(){
				    return null;
				}
				public String DIAS_HABILES_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String DIAS_HABILES_VENCIMIENTOComment(){
				
				    return "Dias h\uFFFDbiles de vencimiento";
				
				}
				public String DIAS_HABILES_VENCIMIENTOPattern(){
				
					return "";
				
				}
				public String DIAS_HABILES_VENCIMIENTOOriginalDbColumnName(){
				
					return "DIAS_HABILES_VENCIMIENTO";
				
				}

				
			    public BigDecimal HORAS_RESERVA;

				public BigDecimal getHORAS_RESERVA () {
					return this.HORAS_RESERVA;
				}

				public Boolean HORAS_RESERVAIsNullable(){
				    return true;
				}
				public Boolean HORAS_RESERVAIsKey(){
				    return false;
				}
				public Integer HORAS_RESERVALength(){
				    return 0;
				}
				public Integer HORAS_RESERVAPrecision(){
				    return null;
				}
				public String HORAS_RESERVADefault(){
				
					return null;
				
				}
				public String HORAS_RESERVAComment(){
				
				    return "Hora reserva pendiente";
				
				}
				public String HORAS_RESERVAPattern(){
				
					return "";
				
				}
				public String HORAS_RESERVAOriginalDbColumnName(){
				
					return "HORAS_RESERVA";
				
				}

				
			    public BigDecimal HORAS_PARA_ENTREGAR;

				public BigDecimal getHORAS_PARA_ENTREGAR () {
					return this.HORAS_PARA_ENTREGAR;
				}

				public Boolean HORAS_PARA_ENTREGARIsNullable(){
				    return true;
				}
				public Boolean HORAS_PARA_ENTREGARIsKey(){
				    return false;
				}
				public Integer HORAS_PARA_ENTREGARLength(){
				    return 0;
				}
				public Integer HORAS_PARA_ENTREGARPrecision(){
				    return null;
				}
				public String HORAS_PARA_ENTREGARDefault(){
				
					return null;
				
				}
				public String HORAS_PARA_ENTREGARComment(){
				
				    return "Hora para entregar";
				
				}
				public String HORAS_PARA_ENTREGARPattern(){
				
					return "";
				
				}
				public String HORAS_PARA_ENTREGAROriginalDbColumnName(){
				
					return "HORAS_PARA_ENTREGAR";
				
				}

				
			    public BigDecimal HORAS_TRANSCURRIDAS;

				public BigDecimal getHORAS_TRANSCURRIDAS () {
					return this.HORAS_TRANSCURRIDAS;
				}

				public Boolean HORAS_TRANSCURRIDASIsNullable(){
				    return true;
				}
				public Boolean HORAS_TRANSCURRIDASIsKey(){
				    return false;
				}
				public Integer HORAS_TRANSCURRIDASLength(){
				    return 0;
				}
				public Integer HORAS_TRANSCURRIDASPrecision(){
				    return null;
				}
				public String HORAS_TRANSCURRIDASDefault(){
				
					return null;
				
				}
				public String HORAS_TRANSCURRIDASComment(){
				
				    return "Hora transcurrida";
				
				}
				public String HORAS_TRANSCURRIDASPattern(){
				
					return "";
				
				}
				public String HORAS_TRANSCURRIDASOriginalDbColumnName(){
				
					return "HORAS_TRANSCURRIDAS";
				
				}

				
			    public String AUTORIZA_ENVIO;

				public String getAUTORIZA_ENVIO () {
					return this.AUTORIZA_ENVIO;
				}

				public Boolean AUTORIZA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean AUTORIZA_ENVIOIsKey(){
				    return false;
				}
				public Integer AUTORIZA_ENVIOLength(){
				    return 10;
				}
				public Integer AUTORIZA_ENVIOPrecision(){
				    return 0;
				}
				public String AUTORIZA_ENVIODefault(){
				
					return null;
				
				}
				public String AUTORIZA_ENVIOComment(){
				
				    return "Autorizaci\uFFFDn de envio";
				
				}
				public String AUTORIZA_ENVIOPattern(){
				
					return "";
				
				}
				public String AUTORIZA_ENVIOOriginalDbColumnName(){
				
					return "AUTORIZA_ENVIO";
				
				}

				
			    public String NOVEDAD;

				public String getNOVEDAD () {
					return this.NOVEDAD;
				}

				public Boolean NOVEDADIsNullable(){
				    return true;
				}
				public Boolean NOVEDADIsKey(){
				    return false;
				}
				public Integer NOVEDADLength(){
				    return 500;
				}
				public Integer NOVEDADPrecision(){
				    return 0;
				}
				public String NOVEDADDefault(){
				
					return null;
				
				}
				public String NOVEDADComment(){
				
				    return "Nombre de la Novedad pendiente";
				
				}
				public String NOVEDADPattern(){
				
					return "";
				
				}
				public String NOVEDADOriginalDbColumnName(){
				
					return "NOVEDAD";
				
				}

				
			    public String LUGAR_ENTREGA;

				public String getLUGAR_ENTREGA () {
					return this.LUGAR_ENTREGA;
				}

				public Boolean LUGAR_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean LUGAR_ENTREGAIsKey(){
				    return false;
				}
				public Integer LUGAR_ENTREGALength(){
				    return 1024;
				}
				public Integer LUGAR_ENTREGAPrecision(){
				    return 0;
				}
				public String LUGAR_ENTREGADefault(){
				
					return null;
				
				}
				public String LUGAR_ENTREGAComment(){
				
				    return "Direcci\uFFFDn de la persona de Contacto";
				
				}
				public String LUGAR_ENTREGAPattern(){
				
					return "";
				
				}
				public String LUGAR_ENTREGAOriginalDbColumnName(){
				
					return "LUGAR_ENTREGA";
				
				}

				
			    public BigDecimal CANTIDAD_BODEGA_VIRTUAL;

				public BigDecimal getCANTIDAD_BODEGA_VIRTUAL () {
					return this.CANTIDAD_BODEGA_VIRTUAL;
				}

				public Boolean CANTIDAD_BODEGA_VIRTUALIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_BODEGA_VIRTUALIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BODEGA_VIRTUALLength(){
				    return 0;
				}
				public Integer CANTIDAD_BODEGA_VIRTUALPrecision(){
				    return null;
				}
				public String CANTIDAD_BODEGA_VIRTUALDefault(){
				
					return null;
				
				}
				public String CANTIDAD_BODEGA_VIRTUALComment(){
				
				    return "Cantidad";
				
				}
				public String CANTIDAD_BODEGA_VIRTUALPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BODEGA_VIRTUALOriginalDbColumnName(){
				
					return "CANTIDAD_BODEGA_VIRTUAL";
				
				}

				
			    public java.util.Date FECHA_BODEGA_VIRTUAL;

				public java.util.Date getFECHA_BODEGA_VIRTUAL () {
					return this.FECHA_BODEGA_VIRTUAL;
				}

				public Boolean FECHA_BODEGA_VIRTUALIsNullable(){
				    return false;
				}
				public Boolean FECHA_BODEGA_VIRTUALIsKey(){
				    return false;
				}
				public Integer FECHA_BODEGA_VIRTUALLength(){
				    return 7;
				}
				public Integer FECHA_BODEGA_VIRTUALPrecision(){
				    return 0;
				}
				public String FECHA_BODEGA_VIRTUALDefault(){
				
					return null;
				
				}
				public String FECHA_BODEGA_VIRTUALComment(){
				
				    return "Fecha inicio";
				
				}
				public String FECHA_BODEGA_VIRTUALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_BODEGA_VIRTUALOriginalDbColumnName(){
				
					return "FECHA_BODEGA_VIRTUAL";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 20;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PENDIENTES_ID == null) ? 0 : this.PENDIENTES_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final out4Struct other = (out4Struct) obj;
		
						if (this.PENDIENTES_ID == null) {
							if (other.PENDIENTES_ID != null)
								return false;
						
						} else if (!this.PENDIENTES_ID.equals(other.PENDIENTES_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(out4Struct other) {

		other.PENDIENTES_ID = this.PENDIENTES_ID;
	            other.FECHA = this.FECHA;
	            other.CANTIDAD_PENDIENTE_GENERADA = this.CANTIDAD_PENDIENTE_GENERADA;
	            other.CANTIDAD_PENDIENTE_ENTREGADA = this.CANTIDAD_PENDIENTE_ENTREGADA;
	            other.FECHA_LIMITE_ENTREGA_PENDIENTE = this.FECHA_LIMITE_ENTREGA_PENDIENTE;
	            other.MOV_ENTREGA_PENDIENTE_ID = this.MOV_ENTREGA_PENDIENTE_ID;
	            other.ESM_ENTREGA_PENDIENTE_ID = this.ESM_ENTREGA_PENDIENTE_ID;
	            other.FECHA_ENTREGA_PENDIENTE = this.FECHA_ENTREGA_PENDIENTE;
	            other.NUMERO_TIRILLA = this.NUMERO_TIRILLA;
	            other.MOVIMIENTOS_ID = this.MOVIMIENTOS_ID;
	            other.FORMASFARMACEUTICAS_ID = this.FORMASFARMACEUTICAS_ID;
	            other.DIAS_HABILES_VENCIMIENTO = this.DIAS_HABILES_VENCIMIENTO;
	            other.HORAS_RESERVA = this.HORAS_RESERVA;
	            other.HORAS_PARA_ENTREGAR = this.HORAS_PARA_ENTREGAR;
	            other.HORAS_TRANSCURRIDAS = this.HORAS_TRANSCURRIDAS;
	            other.AUTORIZA_ENVIO = this.AUTORIZA_ENVIO;
	            other.NOVEDAD = this.NOVEDAD;
	            other.LUGAR_ENTREGA = this.LUGAR_ENTREGA;
	            other.CANTIDAD_BODEGA_VIRTUAL = this.CANTIDAD_BODEGA_VIRTUAL;
	            other.FECHA_BODEGA_VIRTUAL = this.FECHA_BODEGA_VIRTUAL;
	            other.DFORMULA_ID = this.DFORMULA_ID;
	            other.ESTADO = this.ESTADO;
	            
	}

	public void copyKeysDataTo(out4Struct other) {

		other.PENDIENTES_ID = this.PENDIENTES_ID;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DIAS_HABILES_VENCIMIENTO = (BigDecimal) dis.readObject();
					
						this.HORAS_RESERVA = (BigDecimal) dis.readObject();
					
						this.HORAS_PARA_ENTREGAR = (BigDecimal) dis.readObject();
					
						this.HORAS_TRANSCURRIDAS = (BigDecimal) dis.readObject();
					
					this.AUTORIZA_ENVIO = readString(dis);
					
					this.NOVEDAD = readString(dis);
					
					this.LUGAR_ENTREGA = readString(dis);
					
						this.CANTIDAD_BODEGA_VIRTUAL = (BigDecimal) dis.readObject();
					
					this.FECHA_BODEGA_VIRTUAL = readDate(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DIAS_HABILES_VENCIMIENTO = (BigDecimal) dis.readObject();
					
						this.HORAS_RESERVA = (BigDecimal) dis.readObject();
					
						this.HORAS_PARA_ENTREGAR = (BigDecimal) dis.readObject();
					
						this.HORAS_TRANSCURRIDAS = (BigDecimal) dis.readObject();
					
					this.AUTORIZA_ENVIO = readString(dis);
					
					this.NOVEDAD = readString(dis);
					
					this.LUGAR_ENTREGA = readString(dis);
					
						this.CANTIDAD_BODEGA_VIRTUAL = (BigDecimal) dis.readObject();
					
					this.FECHA_BODEGA_VIRTUAL = readDate(dis);
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_HABILES_VENCIMIENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HORAS_RESERVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HORAS_PARA_ENTREGAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HORAS_TRANSCURRIDAS);
					
					// String
				
						writeString(this.AUTORIZA_ENVIO,dos);
					
					// String
				
						writeString(this.NOVEDAD,dos);
					
					// String
				
						writeString(this.LUGAR_ENTREGA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BODEGA_VIRTUAL);
					
					// java.util.Date
				
						writeDate(this.FECHA_BODEGA_VIRTUAL,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_HABILES_VENCIMIENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HORAS_RESERVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HORAS_PARA_ENTREGAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HORAS_TRANSCURRIDAS);
					
					// String
				
						writeString(this.AUTORIZA_ENVIO,dos);
					
					// String
				
						writeString(this.NOVEDAD,dos);
					
					// String
				
						writeString(this.LUGAR_ENTREGA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BODEGA_VIRTUAL);
					
					// java.util.Date
				
						writeDate(this.FECHA_BODEGA_VIRTUAL,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PENDIENTES_ID="+String.valueOf(PENDIENTES_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CANTIDAD_PENDIENTE_GENERADA="+String.valueOf(CANTIDAD_PENDIENTE_GENERADA));
		sb.append(",CANTIDAD_PENDIENTE_ENTREGADA="+String.valueOf(CANTIDAD_PENDIENTE_ENTREGADA));
		sb.append(",FECHA_LIMITE_ENTREGA_PENDIENTE="+String.valueOf(FECHA_LIMITE_ENTREGA_PENDIENTE));
		sb.append(",MOV_ENTREGA_PENDIENTE_ID="+String.valueOf(MOV_ENTREGA_PENDIENTE_ID));
		sb.append(",ESM_ENTREGA_PENDIENTE_ID="+String.valueOf(ESM_ENTREGA_PENDIENTE_ID));
		sb.append(",FECHA_ENTREGA_PENDIENTE="+String.valueOf(FECHA_ENTREGA_PENDIENTE));
		sb.append(",NUMERO_TIRILLA="+NUMERO_TIRILLA);
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",DIAS_HABILES_VENCIMIENTO="+String.valueOf(DIAS_HABILES_VENCIMIENTO));
		sb.append(",HORAS_RESERVA="+String.valueOf(HORAS_RESERVA));
		sb.append(",HORAS_PARA_ENTREGAR="+String.valueOf(HORAS_PARA_ENTREGAR));
		sb.append(",HORAS_TRANSCURRIDAS="+String.valueOf(HORAS_TRANSCURRIDAS));
		sb.append(",AUTORIZA_ENVIO="+AUTORIZA_ENVIO);
		sb.append(",NOVEDAD="+NOVEDAD);
		sb.append(",LUGAR_ENTREGA="+LUGAR_ENTREGA);
		sb.append(",CANTIDAD_BODEGA_VIRTUAL="+String.valueOf(CANTIDAD_BODEGA_VIRTUAL));
		sb.append(",FECHA_BODEGA_VIRTUAL="+String.valueOf(FECHA_BODEGA_VIRTUAL));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",ESTADO="+ESTADO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out4Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PENDIENTES_ID, other.PENDIENTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out20Struct implements routines.system.IPersistableRow<out20Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal PENDIENTES_ID;

				public BigDecimal getPENDIENTES_ID () {
					return this.PENDIENTES_ID;
				}

				public Boolean PENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PENDIENTES_IDPrecision(){
				    return null;
				}
				public String PENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PENDIENTES_IDOriginalDbColumnName(){
				
					return "PENDIENTES_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 0;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_GENERADA;

				public BigDecimal getCANTIDAD_PENDIENTE_GENERADA () {
					return this.CANTIDAD_PENDIENTE_GENERADA;
				}

				public Boolean CANTIDAD_PENDIENTE_GENERADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_GENERADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_PENDIENTE_GENERADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_GENERADA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_ENTREGADA;

				public BigDecimal getCANTIDAD_PENDIENTE_ENTREGADA () {
					return this.CANTIDAD_PENDIENTE_ENTREGADA;
				}

				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADAPrecision(){
				    return null;
				}
				public String CANTIDAD_PENDIENTE_ENTREGADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_ENTREGADA";
				
				}

				
			    public java.util.Date FECHA_LIMITE_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_LIMITE_ENTREGA_PENDIENTE () {
					return this.FECHA_LIMITE_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_LIMITE_ENTREGA_PENDIENTE";
				
				}

				
			    public BigDecimal MOV_ENTREGA_PENDIENTE_ID;

				public BigDecimal getMOV_ENTREGA_PENDIENTE_ID () {
					return this.MOV_ENTREGA_PENDIENTE_ID;
				}

				public Boolean MOV_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean MOV_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String MOV_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "MOV_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public BigDecimal ESM_ENTREGA_PENDIENTE_ID;

				public BigDecimal getESM_ENTREGA_PENDIENTE_ID () {
					return this.ESM_ENTREGA_PENDIENTE_ID;
				}

				public Boolean ESM_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean ESM_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String ESM_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "ESM_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public java.util.Date FECHA_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_ENTREGA_PENDIENTE () {
					return this.FECHA_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_ENTREGA_PENDIENTE";
				
				}

				
			    public String NUMERO_TIRILLA_PENDIENTE;

				public String getNUMERO_TIRILLA_PENDIENTE () {
					return this.NUMERO_TIRILLA_PENDIENTE;
				}

				public Boolean NUMERO_TIRILLA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NUMERO_TIRILLA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NUMERO_TIRILLA_PENDIENTELength(){
				    return 50;
				}
				public Integer NUMERO_TIRILLA_PENDIENTEPrecision(){
				    return 0;
				}
				public String NUMERO_TIRILLA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NUMERO_TIRILLA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEOriginalDbColumnName(){
				
					return "NUMERO_TIRILLA_PENDIENTE";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 20;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public java.util.Date FMODIFICACION;

				public java.util.Date getFMODIFICACION () {
					return this.FMODIFICACION;
				}

				public Boolean FMODIFICACIONIsNullable(){
				    return true;
				}
				public Boolean FMODIFICACIONIsKey(){
				    return false;
				}
				public Integer FMODIFICACIONLength(){
				    return 0;
				}
				public Integer FMODIFICACIONPrecision(){
				    return 0;
				}
				public String FMODIFICACIONDefault(){
				
					return null;
				
				}
				public String FMODIFICACIONComment(){
				
				    return "";
				
				}
				public String FMODIFICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMODIFICACIONOriginalDbColumnName(){
				
					return "FMODIFICACION";
				
				}

				
			    public String NOVEDAD_PENDIENTE;

				public String getNOVEDAD_PENDIENTE () {
					return this.NOVEDAD_PENDIENTE;
				}

				public Boolean NOVEDAD_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NOVEDAD_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NOVEDAD_PENDIENTELength(){
				    return 500;
				}
				public Integer NOVEDAD_PENDIENTEPrecision(){
				    return 0;
				}
				public String NOVEDAD_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NOVEDAD_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NOVEDAD_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NOVEDAD_PENDIENTEOriginalDbColumnName(){
				
					return "NOVEDAD_PENDIENTE";
				
				}

				
			    public java.util.Date FECHA_BODEGA_VIRTUAL;

				public java.util.Date getFECHA_BODEGA_VIRTUAL () {
					return this.FECHA_BODEGA_VIRTUAL;
				}

				public Boolean FECHA_BODEGA_VIRTUALIsNullable(){
				    return false;
				}
				public Boolean FECHA_BODEGA_VIRTUALIsKey(){
				    return false;
				}
				public Integer FECHA_BODEGA_VIRTUALLength(){
				    return 7;
				}
				public Integer FECHA_BODEGA_VIRTUALPrecision(){
				    return 0;
				}
				public String FECHA_BODEGA_VIRTUALDefault(){
				
					return null;
				
				}
				public String FECHA_BODEGA_VIRTUALComment(){
				
				    return "Fecha inicio";
				
				}
				public String FECHA_BODEGA_VIRTUALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_BODEGA_VIRTUALOriginalDbColumnName(){
				
					return "FECHA_BODEGA_VIRTUAL";
				
				}

				
			    public BigDecimal CANTIDAD_BODEGA_VIRTUAL;

				public BigDecimal getCANTIDAD_BODEGA_VIRTUAL () {
					return this.CANTIDAD_BODEGA_VIRTUAL;
				}

				public Boolean CANTIDAD_BODEGA_VIRTUALIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_BODEGA_VIRTUALIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BODEGA_VIRTUALLength(){
				    return 0;
				}
				public Integer CANTIDAD_BODEGA_VIRTUALPrecision(){
				    return null;
				}
				public String CANTIDAD_BODEGA_VIRTUALDefault(){
				
					return null;
				
				}
				public String CANTIDAD_BODEGA_VIRTUALComment(){
				
				    return "Cantidad";
				
				}
				public String CANTIDAD_BODEGA_VIRTUALPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BODEGA_VIRTUALOriginalDbColumnName(){
				
					return "CANTIDAD_BODEGA_VIRTUAL";
				
				}

				
			    public java.util.Date RESERVA_PENDIENTE;

				public java.util.Date getRESERVA_PENDIENTE () {
					return this.RESERVA_PENDIENTE;
				}

				public Boolean RESERVA_PENDIENTEIsNullable(){
				    return false;
				}
				public Boolean RESERVA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer RESERVA_PENDIENTELength(){
				    return 50;
				}
				public Integer RESERVA_PENDIENTEPrecision(){
				    return 0;
				}
				public String RESERVA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String RESERVA_PENDIENTEComment(){
				
				    return "Estado (Activo, Cancelado por vencimiento, Cancelado, Entregado)";
				
				}
				public String RESERVA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVA_PENDIENTEOriginalDbColumnName(){
				
					return "RESERVA_PENDIENTE";
				
				}

				
			    public String LUGAR_ENTREGA;

				public String getLUGAR_ENTREGA () {
					return this.LUGAR_ENTREGA;
				}

				public Boolean LUGAR_ENTREGAIsNullable(){
				    return false;
				}
				public Boolean LUGAR_ENTREGAIsKey(){
				    return false;
				}
				public Integer LUGAR_ENTREGALength(){
				    return 1024;
				}
				public Integer LUGAR_ENTREGAPrecision(){
				    return 0;
				}
				public String LUGAR_ENTREGADefault(){
				
					return null;
				
				}
				public String LUGAR_ENTREGAComment(){
				
				    return "";
				
				}
				public String LUGAR_ENTREGAPattern(){
				
					return "";
				
				}
				public String LUGAR_ENTREGAOriginalDbColumnName(){
				
					return "LUGAR_ENTREGA";
				
				}

				
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return 0;
				}
				public String INVENTARIOS_IDDefault(){
				
					return null;
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public java.util.Date FECHA_DISPENSACION;

				public java.util.Date getFECHA_DISPENSACION () {
					return this.FECHA_DISPENSACION;
				}

				public Boolean FECHA_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer FECHA_DISPENSACIONLength(){
				    return 0;
				}
				public Integer FECHA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String FECHA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String FECHA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String FECHA_DISPENSACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_DISPENSACIONOriginalDbColumnName(){
				
					return "FECHA_DISPENSACION";
				
				}

				
			    public java.util.Date FECHA_VENCIMIENTO;

				public java.util.Date getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public BigDecimal PPENDIENTES_ID;

				public BigDecimal getPPENDIENTES_ID () {
					return this.PPENDIENTES_ID;
				}

				public Boolean PPENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PPENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PPENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PPENDIENTES_IDPrecision(){
				    return null;
				}
				public String PPENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PPENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PPENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PPENDIENTES_IDOriginalDbColumnName(){
				
					return "PPENDIENTES_ID";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
					this.NOVEDAD_PENDIENTE = readString(dis);
					
					this.FECHA_BODEGA_VIRTUAL = readDate(dis);
					
						this.CANTIDAD_BODEGA_VIRTUAL = (BigDecimal) dis.readObject();
					
					this.RESERVA_PENDIENTE = readDate(dis);
					
					this.LUGAR_ENTREGA = readString(dis);
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
						this.PPENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
					this.NOVEDAD_PENDIENTE = readString(dis);
					
					this.FECHA_BODEGA_VIRTUAL = readDate(dis);
					
						this.CANTIDAD_BODEGA_VIRTUAL = (BigDecimal) dis.readObject();
					
					this.RESERVA_PENDIENTE = readDate(dis);
					
					this.LUGAR_ENTREGA = readString(dis);
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
					this.FECHA_VENCIMIENTO = readDate(dis);
					
						this.PPENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
					// String
				
						writeString(this.NOVEDAD_PENDIENTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_BODEGA_VIRTUAL,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BODEGA_VIRTUAL);
					
					// java.util.Date
				
						writeDate(this.RESERVA_PENDIENTE,dos);
					
					// String
				
						writeString(this.LUGAR_ENTREGA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
					// String
				
						writeString(this.NOVEDAD_PENDIENTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_BODEGA_VIRTUAL,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BODEGA_VIRTUAL);
					
					// java.util.Date
				
						writeDate(this.RESERVA_PENDIENTE,dos);
					
					// String
				
						writeString(this.LUGAR_ENTREGA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VENCIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PENDIENTES_ID="+String.valueOf(PENDIENTES_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CANTIDAD_PENDIENTE_GENERADA="+String.valueOf(CANTIDAD_PENDIENTE_GENERADA));
		sb.append(",CANTIDAD_PENDIENTE_ENTREGADA="+String.valueOf(CANTIDAD_PENDIENTE_ENTREGADA));
		sb.append(",FECHA_LIMITE_ENTREGA_PENDIENTE="+String.valueOf(FECHA_LIMITE_ENTREGA_PENDIENTE));
		sb.append(",MOV_ENTREGA_PENDIENTE_ID="+String.valueOf(MOV_ENTREGA_PENDIENTE_ID));
		sb.append(",ESM_ENTREGA_PENDIENTE_ID="+String.valueOf(ESM_ENTREGA_PENDIENTE_ID));
		sb.append(",FECHA_ENTREGA_PENDIENTE="+String.valueOf(FECHA_ENTREGA_PENDIENTE));
		sb.append(",NUMERO_TIRILLA_PENDIENTE="+NUMERO_TIRILLA_PENDIENTE);
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",FMODIFICACION="+String.valueOf(FMODIFICACION));
		sb.append(",NOVEDAD_PENDIENTE="+NOVEDAD_PENDIENTE);
		sb.append(",FECHA_BODEGA_VIRTUAL="+String.valueOf(FECHA_BODEGA_VIRTUAL));
		sb.append(",CANTIDAD_BODEGA_VIRTUAL="+String.valueOf(CANTIDAD_BODEGA_VIRTUAL));
		sb.append(",RESERVA_PENDIENTE="+String.valueOf(RESERVA_PENDIENTE));
		sb.append(",LUGAR_ENTREGA="+LUGAR_ENTREGA);
		sb.append(",INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",FECHA_DISPENSACION="+String.valueOf(FECHA_DISPENSACION));
		sb.append(",FECHA_VENCIMIENTO="+String.valueOf(FECHA_VENCIMIENTO));
		sb.append(",PPENDIENTES_ID="+String.valueOf(PPENDIENTES_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out19Struct implements routines.system.IPersistableRow<out19Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal PENDIENTES_ID;

				public BigDecimal getPENDIENTES_ID () {
					return this.PENDIENTES_ID;
				}

				public Boolean PENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PENDIENTES_IDPrecision(){
				    return null;
				}
				public String PENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PENDIENTES_IDOriginalDbColumnName(){
				
					return "PENDIENTES_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 0;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_GENERADA;

				public BigDecimal getCANTIDAD_PENDIENTE_GENERADA () {
					return this.CANTIDAD_PENDIENTE_GENERADA;
				}

				public Boolean CANTIDAD_PENDIENTE_GENERADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_GENERADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_PENDIENTE_GENERADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_GENERADA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_ENTREGADA;

				public BigDecimal getCANTIDAD_PENDIENTE_ENTREGADA () {
					return this.CANTIDAD_PENDIENTE_ENTREGADA;
				}

				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADAPrecision(){
				    return null;
				}
				public String CANTIDAD_PENDIENTE_ENTREGADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_ENTREGADA";
				
				}

				
			    public java.util.Date FECHA_LIMITE_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_LIMITE_ENTREGA_PENDIENTE () {
					return this.FECHA_LIMITE_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_LIMITE_ENTREGA_PENDIENTE";
				
				}

				
			    public BigDecimal MOV_ENTREGA_PENDIENTE_ID;

				public BigDecimal getMOV_ENTREGA_PENDIENTE_ID () {
					return this.MOV_ENTREGA_PENDIENTE_ID;
				}

				public Boolean MOV_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean MOV_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String MOV_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "MOV_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public BigDecimal ESM_ENTREGA_PENDIENTE_ID;

				public BigDecimal getESM_ENTREGA_PENDIENTE_ID () {
					return this.ESM_ENTREGA_PENDIENTE_ID;
				}

				public Boolean ESM_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean ESM_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String ESM_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "ESM_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public java.util.Date FECHA_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_ENTREGA_PENDIENTE () {
					return this.FECHA_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_ENTREGA_PENDIENTE";
				
				}

				
			    public String NUMERO_TIRILLA_PENDIENTE;

				public String getNUMERO_TIRILLA_PENDIENTE () {
					return this.NUMERO_TIRILLA_PENDIENTE;
				}

				public Boolean NUMERO_TIRILLA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NUMERO_TIRILLA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NUMERO_TIRILLA_PENDIENTELength(){
				    return 50;
				}
				public Integer NUMERO_TIRILLA_PENDIENTEPrecision(){
				    return 0;
				}
				public String NUMERO_TIRILLA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NUMERO_TIRILLA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEOriginalDbColumnName(){
				
					return "NUMERO_TIRILLA_PENDIENTE";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 20;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public java.util.Date FMODIFICACION;

				public java.util.Date getFMODIFICACION () {
					return this.FMODIFICACION;
				}

				public Boolean FMODIFICACIONIsNullable(){
				    return true;
				}
				public Boolean FMODIFICACIONIsKey(){
				    return false;
				}
				public Integer FMODIFICACIONLength(){
				    return 0;
				}
				public Integer FMODIFICACIONPrecision(){
				    return 0;
				}
				public String FMODIFICACIONDefault(){
				
					return null;
				
				}
				public String FMODIFICACIONComment(){
				
				    return "";
				
				}
				public String FMODIFICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMODIFICACIONOriginalDbColumnName(){
				
					return "FMODIFICACION";
				
				}

				
			    public String NOVEDAD_PENDIENTE;

				public String getNOVEDAD_PENDIENTE () {
					return this.NOVEDAD_PENDIENTE;
				}

				public Boolean NOVEDAD_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NOVEDAD_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NOVEDAD_PENDIENTELength(){
				    return 500;
				}
				public Integer NOVEDAD_PENDIENTEPrecision(){
				    return 0;
				}
				public String NOVEDAD_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NOVEDAD_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NOVEDAD_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NOVEDAD_PENDIENTEOriginalDbColumnName(){
				
					return "NOVEDAD_PENDIENTE";
				
				}

				
			    public java.util.Date FECHA_BODEGA_VIRTUAL;

				public java.util.Date getFECHA_BODEGA_VIRTUAL () {
					return this.FECHA_BODEGA_VIRTUAL;
				}

				public Boolean FECHA_BODEGA_VIRTUALIsNullable(){
				    return false;
				}
				public Boolean FECHA_BODEGA_VIRTUALIsKey(){
				    return false;
				}
				public Integer FECHA_BODEGA_VIRTUALLength(){
				    return 7;
				}
				public Integer FECHA_BODEGA_VIRTUALPrecision(){
				    return 0;
				}
				public String FECHA_BODEGA_VIRTUALDefault(){
				
					return null;
				
				}
				public String FECHA_BODEGA_VIRTUALComment(){
				
				    return "Fecha inicio";
				
				}
				public String FECHA_BODEGA_VIRTUALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_BODEGA_VIRTUALOriginalDbColumnName(){
				
					return "FECHA_BODEGA_VIRTUAL";
				
				}

				
			    public BigDecimal CANTIDAD_BODEGA_VIRTUAL;

				public BigDecimal getCANTIDAD_BODEGA_VIRTUAL () {
					return this.CANTIDAD_BODEGA_VIRTUAL;
				}

				public Boolean CANTIDAD_BODEGA_VIRTUALIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_BODEGA_VIRTUALIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BODEGA_VIRTUALLength(){
				    return 0;
				}
				public Integer CANTIDAD_BODEGA_VIRTUALPrecision(){
				    return null;
				}
				public String CANTIDAD_BODEGA_VIRTUALDefault(){
				
					return null;
				
				}
				public String CANTIDAD_BODEGA_VIRTUALComment(){
				
				    return "Cantidad";
				
				}
				public String CANTIDAD_BODEGA_VIRTUALPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BODEGA_VIRTUALOriginalDbColumnName(){
				
					return "CANTIDAD_BODEGA_VIRTUAL";
				
				}

				
			    public java.util.Date RESERVA_PENDIENTE;

				public java.util.Date getRESERVA_PENDIENTE () {
					return this.RESERVA_PENDIENTE;
				}

				public Boolean RESERVA_PENDIENTEIsNullable(){
				    return false;
				}
				public Boolean RESERVA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer RESERVA_PENDIENTELength(){
				    return 50;
				}
				public Integer RESERVA_PENDIENTEPrecision(){
				    return 0;
				}
				public String RESERVA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String RESERVA_PENDIENTEComment(){
				
				    return "Estado (Activo, Cancelado por vencimiento, Cancelado, Entregado)";
				
				}
				public String RESERVA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVA_PENDIENTEOriginalDbColumnName(){
				
					return "RESERVA_PENDIENTE";
				
				}

				
			    public String LUGAR_ENTREGA;

				public String getLUGAR_ENTREGA () {
					return this.LUGAR_ENTREGA;
				}

				public Boolean LUGAR_ENTREGAIsNullable(){
				    return false;
				}
				public Boolean LUGAR_ENTREGAIsKey(){
				    return false;
				}
				public Integer LUGAR_ENTREGALength(){
				    return 1024;
				}
				public Integer LUGAR_ENTREGAPrecision(){
				    return 0;
				}
				public String LUGAR_ENTREGADefault(){
				
					return null;
				
				}
				public String LUGAR_ENTREGAComment(){
				
				    return "";
				
				}
				public String LUGAR_ENTREGAPattern(){
				
					return "";
				
				}
				public String LUGAR_ENTREGAOriginalDbColumnName(){
				
					return "LUGAR_ENTREGA";
				
				}

				
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return 0;
				}
				public String INVENTARIOS_IDDefault(){
				
					return null;
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public java.util.Date FECHA_DISPENSACION;

				public java.util.Date getFECHA_DISPENSACION () {
					return this.FECHA_DISPENSACION;
				}

				public Boolean FECHA_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer FECHA_DISPENSACIONLength(){
				    return 0;
				}
				public Integer FECHA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String FECHA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String FECHA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String FECHA_DISPENSACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_DISPENSACIONOriginalDbColumnName(){
				
					return "FECHA_DISPENSACION";
				
				}

				
			    public BigDecimal PPENDIENTES_ID;

				public BigDecimal getPPENDIENTES_ID () {
					return this.PPENDIENTES_ID;
				}

				public Boolean PPENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PPENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PPENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PPENDIENTES_IDPrecision(){
				    return null;
				}
				public String PPENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PPENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PPENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PPENDIENTES_IDOriginalDbColumnName(){
				
					return "PPENDIENTES_ID";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
					this.NOVEDAD_PENDIENTE = readString(dis);
					
					this.FECHA_BODEGA_VIRTUAL = readDate(dis);
					
						this.CANTIDAD_BODEGA_VIRTUAL = (BigDecimal) dis.readObject();
					
					this.RESERVA_PENDIENTE = readDate(dis);
					
					this.LUGAR_ENTREGA = readString(dis);
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
						this.PPENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
					this.NOVEDAD_PENDIENTE = readString(dis);
					
					this.FECHA_BODEGA_VIRTUAL = readDate(dis);
					
						this.CANTIDAD_BODEGA_VIRTUAL = (BigDecimal) dis.readObject();
					
					this.RESERVA_PENDIENTE = readDate(dis);
					
					this.LUGAR_ENTREGA = readString(dis);
					
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_DISPENSACION = readDate(dis);
					
						this.PPENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
					// String
				
						writeString(this.NOVEDAD_PENDIENTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_BODEGA_VIRTUAL,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BODEGA_VIRTUAL);
					
					// java.util.Date
				
						writeDate(this.RESERVA_PENDIENTE,dos);
					
					// String
				
						writeString(this.LUGAR_ENTREGA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
					// String
				
						writeString(this.NOVEDAD_PENDIENTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_BODEGA_VIRTUAL,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BODEGA_VIRTUAL);
					
					// java.util.Date
				
						writeDate(this.RESERVA_PENDIENTE,dos);
					
					// String
				
						writeString(this.LUGAR_ENTREGA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_DISPENSACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PENDIENTES_ID="+String.valueOf(PENDIENTES_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CANTIDAD_PENDIENTE_GENERADA="+String.valueOf(CANTIDAD_PENDIENTE_GENERADA));
		sb.append(",CANTIDAD_PENDIENTE_ENTREGADA="+String.valueOf(CANTIDAD_PENDIENTE_ENTREGADA));
		sb.append(",FECHA_LIMITE_ENTREGA_PENDIENTE="+String.valueOf(FECHA_LIMITE_ENTREGA_PENDIENTE));
		sb.append(",MOV_ENTREGA_PENDIENTE_ID="+String.valueOf(MOV_ENTREGA_PENDIENTE_ID));
		sb.append(",ESM_ENTREGA_PENDIENTE_ID="+String.valueOf(ESM_ENTREGA_PENDIENTE_ID));
		sb.append(",FECHA_ENTREGA_PENDIENTE="+String.valueOf(FECHA_ENTREGA_PENDIENTE));
		sb.append(",NUMERO_TIRILLA_PENDIENTE="+NUMERO_TIRILLA_PENDIENTE);
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",FMODIFICACION="+String.valueOf(FMODIFICACION));
		sb.append(",NOVEDAD_PENDIENTE="+NOVEDAD_PENDIENTE);
		sb.append(",FECHA_BODEGA_VIRTUAL="+String.valueOf(FECHA_BODEGA_VIRTUAL));
		sb.append(",CANTIDAD_BODEGA_VIRTUAL="+String.valueOf(CANTIDAD_BODEGA_VIRTUAL));
		sb.append(",RESERVA_PENDIENTE="+String.valueOf(RESERVA_PENDIENTE));
		sb.append(",LUGAR_ENTREGA="+LUGAR_ENTREGA);
		sb.append(",INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",FECHA_DISPENSACION="+String.valueOf(FECHA_DISPENSACION));
		sb.append(",PPENDIENTES_ID="+String.valueOf(PPENDIENTES_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out18Struct implements routines.system.IPersistableRow<out18Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal PENDIENTES_ID;

				public BigDecimal getPENDIENTES_ID () {
					return this.PENDIENTES_ID;
				}

				public Boolean PENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PENDIENTES_IDPrecision(){
				    return null;
				}
				public String PENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PENDIENTES_IDOriginalDbColumnName(){
				
					return "PENDIENTES_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 0;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_GENERADA;

				public BigDecimal getCANTIDAD_PENDIENTE_GENERADA () {
					return this.CANTIDAD_PENDIENTE_GENERADA;
				}

				public Boolean CANTIDAD_PENDIENTE_GENERADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_GENERADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_PENDIENTE_GENERADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_GENERADA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_ENTREGADA;

				public BigDecimal getCANTIDAD_PENDIENTE_ENTREGADA () {
					return this.CANTIDAD_PENDIENTE_ENTREGADA;
				}

				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADAPrecision(){
				    return null;
				}
				public String CANTIDAD_PENDIENTE_ENTREGADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_ENTREGADA";
				
				}

				
			    public java.util.Date FECHA_LIMITE_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_LIMITE_ENTREGA_PENDIENTE () {
					return this.FECHA_LIMITE_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_LIMITE_ENTREGA_PENDIENTE";
				
				}

				
			    public BigDecimal MOV_ENTREGA_PENDIENTE_ID;

				public BigDecimal getMOV_ENTREGA_PENDIENTE_ID () {
					return this.MOV_ENTREGA_PENDIENTE_ID;
				}

				public Boolean MOV_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean MOV_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String MOV_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "MOV_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public BigDecimal ESM_ENTREGA_PENDIENTE_ID;

				public BigDecimal getESM_ENTREGA_PENDIENTE_ID () {
					return this.ESM_ENTREGA_PENDIENTE_ID;
				}

				public Boolean ESM_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean ESM_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String ESM_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "ESM_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public java.util.Date FECHA_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_ENTREGA_PENDIENTE () {
					return this.FECHA_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_ENTREGA_PENDIENTE";
				
				}

				
			    public String NUMERO_TIRILLA_PENDIENTE;

				public String getNUMERO_TIRILLA_PENDIENTE () {
					return this.NUMERO_TIRILLA_PENDIENTE;
				}

				public Boolean NUMERO_TIRILLA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NUMERO_TIRILLA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NUMERO_TIRILLA_PENDIENTELength(){
				    return 50;
				}
				public Integer NUMERO_TIRILLA_PENDIENTEPrecision(){
				    return 0;
				}
				public String NUMERO_TIRILLA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NUMERO_TIRILLA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEOriginalDbColumnName(){
				
					return "NUMERO_TIRILLA_PENDIENTE";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 20;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public java.util.Date FMODIFICACION;

				public java.util.Date getFMODIFICACION () {
					return this.FMODIFICACION;
				}

				public Boolean FMODIFICACIONIsNullable(){
				    return true;
				}
				public Boolean FMODIFICACIONIsKey(){
				    return false;
				}
				public Integer FMODIFICACIONLength(){
				    return 0;
				}
				public Integer FMODIFICACIONPrecision(){
				    return 0;
				}
				public String FMODIFICACIONDefault(){
				
					return null;
				
				}
				public String FMODIFICACIONComment(){
				
				    return "";
				
				}
				public String FMODIFICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMODIFICACIONOriginalDbColumnName(){
				
					return "FMODIFICACION";
				
				}

				
			    public String NOVEDAD_PENDIENTE;

				public String getNOVEDAD_PENDIENTE () {
					return this.NOVEDAD_PENDIENTE;
				}

				public Boolean NOVEDAD_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NOVEDAD_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NOVEDAD_PENDIENTELength(){
				    return 500;
				}
				public Integer NOVEDAD_PENDIENTEPrecision(){
				    return 0;
				}
				public String NOVEDAD_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NOVEDAD_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NOVEDAD_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NOVEDAD_PENDIENTEOriginalDbColumnName(){
				
					return "NOVEDAD_PENDIENTE";
				
				}

				
			    public java.util.Date FECHA_BODEGA_VIRTUAL;

				public java.util.Date getFECHA_BODEGA_VIRTUAL () {
					return this.FECHA_BODEGA_VIRTUAL;
				}

				public Boolean FECHA_BODEGA_VIRTUALIsNullable(){
				    return false;
				}
				public Boolean FECHA_BODEGA_VIRTUALIsKey(){
				    return false;
				}
				public Integer FECHA_BODEGA_VIRTUALLength(){
				    return 7;
				}
				public Integer FECHA_BODEGA_VIRTUALPrecision(){
				    return 0;
				}
				public String FECHA_BODEGA_VIRTUALDefault(){
				
					return null;
				
				}
				public String FECHA_BODEGA_VIRTUALComment(){
				
				    return "Fecha inicio";
				
				}
				public String FECHA_BODEGA_VIRTUALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_BODEGA_VIRTUALOriginalDbColumnName(){
				
					return "FECHA_BODEGA_VIRTUAL";
				
				}

				
			    public BigDecimal CANTIDAD_BODEGA_VIRTUAL;

				public BigDecimal getCANTIDAD_BODEGA_VIRTUAL () {
					return this.CANTIDAD_BODEGA_VIRTUAL;
				}

				public Boolean CANTIDAD_BODEGA_VIRTUALIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_BODEGA_VIRTUALIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BODEGA_VIRTUALLength(){
				    return 0;
				}
				public Integer CANTIDAD_BODEGA_VIRTUALPrecision(){
				    return null;
				}
				public String CANTIDAD_BODEGA_VIRTUALDefault(){
				
					return null;
				
				}
				public String CANTIDAD_BODEGA_VIRTUALComment(){
				
				    return "Cantidad";
				
				}
				public String CANTIDAD_BODEGA_VIRTUALPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BODEGA_VIRTUALOriginalDbColumnName(){
				
					return "CANTIDAD_BODEGA_VIRTUAL";
				
				}

				
			    public java.util.Date RESERVA_PENDIENTE;

				public java.util.Date getRESERVA_PENDIENTE () {
					return this.RESERVA_PENDIENTE;
				}

				public Boolean RESERVA_PENDIENTEIsNullable(){
				    return false;
				}
				public Boolean RESERVA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer RESERVA_PENDIENTELength(){
				    return 50;
				}
				public Integer RESERVA_PENDIENTEPrecision(){
				    return 0;
				}
				public String RESERVA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String RESERVA_PENDIENTEComment(){
				
				    return "Estado (Activo, Cancelado por vencimiento, Cancelado, Entregado)";
				
				}
				public String RESERVA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVA_PENDIENTEOriginalDbColumnName(){
				
					return "RESERVA_PENDIENTE";
				
				}

				
			    public String LUGAR_ENTREGA;

				public String getLUGAR_ENTREGA () {
					return this.LUGAR_ENTREGA;
				}

				public Boolean LUGAR_ENTREGAIsNullable(){
				    return false;
				}
				public Boolean LUGAR_ENTREGAIsKey(){
				    return false;
				}
				public Integer LUGAR_ENTREGALength(){
				    return 1024;
				}
				public Integer LUGAR_ENTREGAPrecision(){
				    return 0;
				}
				public String LUGAR_ENTREGADefault(){
				
					return null;
				
				}
				public String LUGAR_ENTREGAComment(){
				
				    return "";
				
				}
				public String LUGAR_ENTREGAPattern(){
				
					return "";
				
				}
				public String LUGAR_ENTREGAOriginalDbColumnName(){
				
					return "LUGAR_ENTREGA";
				
				}

				
			    public BigDecimal PPENDIENTES_ID;

				public BigDecimal getPPENDIENTES_ID () {
					return this.PPENDIENTES_ID;
				}

				public Boolean PPENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PPENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PPENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PPENDIENTES_IDPrecision(){
				    return null;
				}
				public String PPENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PPENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PPENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PPENDIENTES_IDOriginalDbColumnName(){
				
					return "PPENDIENTES_ID";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
					this.NOVEDAD_PENDIENTE = readString(dis);
					
					this.FECHA_BODEGA_VIRTUAL = readDate(dis);
					
						this.CANTIDAD_BODEGA_VIRTUAL = (BigDecimal) dis.readObject();
					
					this.RESERVA_PENDIENTE = readDate(dis);
					
					this.LUGAR_ENTREGA = readString(dis);
					
						this.PPENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
					this.NOVEDAD_PENDIENTE = readString(dis);
					
					this.FECHA_BODEGA_VIRTUAL = readDate(dis);
					
						this.CANTIDAD_BODEGA_VIRTUAL = (BigDecimal) dis.readObject();
					
					this.RESERVA_PENDIENTE = readDate(dis);
					
					this.LUGAR_ENTREGA = readString(dis);
					
						this.PPENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
					// String
				
						writeString(this.NOVEDAD_PENDIENTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_BODEGA_VIRTUAL,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BODEGA_VIRTUAL);
					
					// java.util.Date
				
						writeDate(this.RESERVA_PENDIENTE,dos);
					
					// String
				
						writeString(this.LUGAR_ENTREGA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
					// String
				
						writeString(this.NOVEDAD_PENDIENTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_BODEGA_VIRTUAL,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BODEGA_VIRTUAL);
					
					// java.util.Date
				
						writeDate(this.RESERVA_PENDIENTE,dos);
					
					// String
				
						writeString(this.LUGAR_ENTREGA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PENDIENTES_ID="+String.valueOf(PENDIENTES_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CANTIDAD_PENDIENTE_GENERADA="+String.valueOf(CANTIDAD_PENDIENTE_GENERADA));
		sb.append(",CANTIDAD_PENDIENTE_ENTREGADA="+String.valueOf(CANTIDAD_PENDIENTE_ENTREGADA));
		sb.append(",FECHA_LIMITE_ENTREGA_PENDIENTE="+String.valueOf(FECHA_LIMITE_ENTREGA_PENDIENTE));
		sb.append(",MOV_ENTREGA_PENDIENTE_ID="+String.valueOf(MOV_ENTREGA_PENDIENTE_ID));
		sb.append(",ESM_ENTREGA_PENDIENTE_ID="+String.valueOf(ESM_ENTREGA_PENDIENTE_ID));
		sb.append(",FECHA_ENTREGA_PENDIENTE="+String.valueOf(FECHA_ENTREGA_PENDIENTE));
		sb.append(",NUMERO_TIRILLA_PENDIENTE="+NUMERO_TIRILLA_PENDIENTE);
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",FMODIFICACION="+String.valueOf(FMODIFICACION));
		sb.append(",NOVEDAD_PENDIENTE="+NOVEDAD_PENDIENTE);
		sb.append(",FECHA_BODEGA_VIRTUAL="+String.valueOf(FECHA_BODEGA_VIRTUAL));
		sb.append(",CANTIDAD_BODEGA_VIRTUAL="+String.valueOf(CANTIDAD_BODEGA_VIRTUAL));
		sb.append(",RESERVA_PENDIENTE="+String.valueOf(RESERVA_PENDIENTE));
		sb.append(",LUGAR_ENTREGA="+LUGAR_ENTREGA);
		sb.append(",PPENDIENTES_ID="+String.valueOf(PPENDIENTES_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out17Struct implements routines.system.IPersistableRow<out17Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal PENDIENTES_ID;

				public BigDecimal getPENDIENTES_ID () {
					return this.PENDIENTES_ID;
				}

				public Boolean PENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PENDIENTES_IDPrecision(){
				    return null;
				}
				public String PENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PENDIENTES_IDOriginalDbColumnName(){
				
					return "PENDIENTES_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 0;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_GENERADA;

				public BigDecimal getCANTIDAD_PENDIENTE_GENERADA () {
					return this.CANTIDAD_PENDIENTE_GENERADA;
				}

				public Boolean CANTIDAD_PENDIENTE_GENERADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_GENERADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_PENDIENTE_GENERADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_GENERADA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_ENTREGADA;

				public BigDecimal getCANTIDAD_PENDIENTE_ENTREGADA () {
					return this.CANTIDAD_PENDIENTE_ENTREGADA;
				}

				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADAPrecision(){
				    return null;
				}
				public String CANTIDAD_PENDIENTE_ENTREGADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_ENTREGADA";
				
				}

				
			    public java.util.Date FECHA_LIMITE_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_LIMITE_ENTREGA_PENDIENTE () {
					return this.FECHA_LIMITE_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_LIMITE_ENTREGA_PENDIENTE";
				
				}

				
			    public BigDecimal MOV_ENTREGA_PENDIENTE_ID;

				public BigDecimal getMOV_ENTREGA_PENDIENTE_ID () {
					return this.MOV_ENTREGA_PENDIENTE_ID;
				}

				public Boolean MOV_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean MOV_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String MOV_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "MOV_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public BigDecimal ESM_ENTREGA_PENDIENTE_ID;

				public BigDecimal getESM_ENTREGA_PENDIENTE_ID () {
					return this.ESM_ENTREGA_PENDIENTE_ID;
				}

				public Boolean ESM_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean ESM_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String ESM_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "ESM_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public java.util.Date FECHA_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_ENTREGA_PENDIENTE () {
					return this.FECHA_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_ENTREGA_PENDIENTE";
				
				}

				
			    public String NUMERO_TIRILLA_PENDIENTE;

				public String getNUMERO_TIRILLA_PENDIENTE () {
					return this.NUMERO_TIRILLA_PENDIENTE;
				}

				public Boolean NUMERO_TIRILLA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NUMERO_TIRILLA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NUMERO_TIRILLA_PENDIENTELength(){
				    return 50;
				}
				public Integer NUMERO_TIRILLA_PENDIENTEPrecision(){
				    return 0;
				}
				public String NUMERO_TIRILLA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NUMERO_TIRILLA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEOriginalDbColumnName(){
				
					return "NUMERO_TIRILLA_PENDIENTE";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 20;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public java.util.Date FMODIFICACION;

				public java.util.Date getFMODIFICACION () {
					return this.FMODIFICACION;
				}

				public Boolean FMODIFICACIONIsNullable(){
				    return true;
				}
				public Boolean FMODIFICACIONIsKey(){
				    return false;
				}
				public Integer FMODIFICACIONLength(){
				    return 0;
				}
				public Integer FMODIFICACIONPrecision(){
				    return 0;
				}
				public String FMODIFICACIONDefault(){
				
					return null;
				
				}
				public String FMODIFICACIONComment(){
				
				    return "";
				
				}
				public String FMODIFICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMODIFICACIONOriginalDbColumnName(){
				
					return "FMODIFICACION";
				
				}

				
			    public String NOVEDAD_PENDIENTE;

				public String getNOVEDAD_PENDIENTE () {
					return this.NOVEDAD_PENDIENTE;
				}

				public Boolean NOVEDAD_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NOVEDAD_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NOVEDAD_PENDIENTELength(){
				    return 500;
				}
				public Integer NOVEDAD_PENDIENTEPrecision(){
				    return 0;
				}
				public String NOVEDAD_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NOVEDAD_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NOVEDAD_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NOVEDAD_PENDIENTEOriginalDbColumnName(){
				
					return "NOVEDAD_PENDIENTE";
				
				}

				
			    public java.util.Date FECHA_BODEGA_VIRTUAL;

				public java.util.Date getFECHA_BODEGA_VIRTUAL () {
					return this.FECHA_BODEGA_VIRTUAL;
				}

				public Boolean FECHA_BODEGA_VIRTUALIsNullable(){
				    return false;
				}
				public Boolean FECHA_BODEGA_VIRTUALIsKey(){
				    return false;
				}
				public Integer FECHA_BODEGA_VIRTUALLength(){
				    return 7;
				}
				public Integer FECHA_BODEGA_VIRTUALPrecision(){
				    return 0;
				}
				public String FECHA_BODEGA_VIRTUALDefault(){
				
					return null;
				
				}
				public String FECHA_BODEGA_VIRTUALComment(){
				
				    return "Fecha inicio";
				
				}
				public String FECHA_BODEGA_VIRTUALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_BODEGA_VIRTUALOriginalDbColumnName(){
				
					return "FECHA_BODEGA_VIRTUAL";
				
				}

				
			    public BigDecimal CANTIDAD_BODEGA_VIRTUAL;

				public BigDecimal getCANTIDAD_BODEGA_VIRTUAL () {
					return this.CANTIDAD_BODEGA_VIRTUAL;
				}

				public Boolean CANTIDAD_BODEGA_VIRTUALIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_BODEGA_VIRTUALIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BODEGA_VIRTUALLength(){
				    return 0;
				}
				public Integer CANTIDAD_BODEGA_VIRTUALPrecision(){
				    return null;
				}
				public String CANTIDAD_BODEGA_VIRTUALDefault(){
				
					return null;
				
				}
				public String CANTIDAD_BODEGA_VIRTUALComment(){
				
				    return "Cantidad";
				
				}
				public String CANTIDAD_BODEGA_VIRTUALPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BODEGA_VIRTUALOriginalDbColumnName(){
				
					return "CANTIDAD_BODEGA_VIRTUAL";
				
				}

				
			    public java.util.Date RESERVA_PENDIENTE;

				public java.util.Date getRESERVA_PENDIENTE () {
					return this.RESERVA_PENDIENTE;
				}

				public Boolean RESERVA_PENDIENTEIsNullable(){
				    return false;
				}
				public Boolean RESERVA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer RESERVA_PENDIENTELength(){
				    return 50;
				}
				public Integer RESERVA_PENDIENTEPrecision(){
				    return 0;
				}
				public String RESERVA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String RESERVA_PENDIENTEComment(){
				
				    return "Estado (Activo, Cancelado por vencimiento, Cancelado, Entregado)";
				
				}
				public String RESERVA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVA_PENDIENTEOriginalDbColumnName(){
				
					return "RESERVA_PENDIENTE";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
					this.NOVEDAD_PENDIENTE = readString(dis);
					
					this.FECHA_BODEGA_VIRTUAL = readDate(dis);
					
						this.CANTIDAD_BODEGA_VIRTUAL = (BigDecimal) dis.readObject();
					
					this.RESERVA_PENDIENTE = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
					this.NOVEDAD_PENDIENTE = readString(dis);
					
					this.FECHA_BODEGA_VIRTUAL = readDate(dis);
					
						this.CANTIDAD_BODEGA_VIRTUAL = (BigDecimal) dis.readObject();
					
					this.RESERVA_PENDIENTE = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
					// String
				
						writeString(this.NOVEDAD_PENDIENTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_BODEGA_VIRTUAL,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BODEGA_VIRTUAL);
					
					// java.util.Date
				
						writeDate(this.RESERVA_PENDIENTE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
					// String
				
						writeString(this.NOVEDAD_PENDIENTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_BODEGA_VIRTUAL,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BODEGA_VIRTUAL);
					
					// java.util.Date
				
						writeDate(this.RESERVA_PENDIENTE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PENDIENTES_ID="+String.valueOf(PENDIENTES_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CANTIDAD_PENDIENTE_GENERADA="+String.valueOf(CANTIDAD_PENDIENTE_GENERADA));
		sb.append(",CANTIDAD_PENDIENTE_ENTREGADA="+String.valueOf(CANTIDAD_PENDIENTE_ENTREGADA));
		sb.append(",FECHA_LIMITE_ENTREGA_PENDIENTE="+String.valueOf(FECHA_LIMITE_ENTREGA_PENDIENTE));
		sb.append(",MOV_ENTREGA_PENDIENTE_ID="+String.valueOf(MOV_ENTREGA_PENDIENTE_ID));
		sb.append(",ESM_ENTREGA_PENDIENTE_ID="+String.valueOf(ESM_ENTREGA_PENDIENTE_ID));
		sb.append(",FECHA_ENTREGA_PENDIENTE="+String.valueOf(FECHA_ENTREGA_PENDIENTE));
		sb.append(",NUMERO_TIRILLA_PENDIENTE="+NUMERO_TIRILLA_PENDIENTE);
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",FMODIFICACION="+String.valueOf(FMODIFICACION));
		sb.append(",NOVEDAD_PENDIENTE="+NOVEDAD_PENDIENTE);
		sb.append(",FECHA_BODEGA_VIRTUAL="+String.valueOf(FECHA_BODEGA_VIRTUAL));
		sb.append(",CANTIDAD_BODEGA_VIRTUAL="+String.valueOf(CANTIDAD_BODEGA_VIRTUAL));
		sb.append(",RESERVA_PENDIENTE="+String.valueOf(RESERVA_PENDIENTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out16Struct implements routines.system.IPersistableRow<out16Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal PENDIENTES_ID;

				public BigDecimal getPENDIENTES_ID () {
					return this.PENDIENTES_ID;
				}

				public Boolean PENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PENDIENTES_IDPrecision(){
				    return null;
				}
				public String PENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PENDIENTES_IDOriginalDbColumnName(){
				
					return "PENDIENTES_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 0;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_GENERADA;

				public BigDecimal getCANTIDAD_PENDIENTE_GENERADA () {
					return this.CANTIDAD_PENDIENTE_GENERADA;
				}

				public Boolean CANTIDAD_PENDIENTE_GENERADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_GENERADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_PENDIENTE_GENERADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_GENERADA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_ENTREGADA;

				public BigDecimal getCANTIDAD_PENDIENTE_ENTREGADA () {
					return this.CANTIDAD_PENDIENTE_ENTREGADA;
				}

				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADAPrecision(){
				    return null;
				}
				public String CANTIDAD_PENDIENTE_ENTREGADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_ENTREGADA";
				
				}

				
			    public java.util.Date FECHA_LIMITE_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_LIMITE_ENTREGA_PENDIENTE () {
					return this.FECHA_LIMITE_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_LIMITE_ENTREGA_PENDIENTE";
				
				}

				
			    public BigDecimal MOV_ENTREGA_PENDIENTE_ID;

				public BigDecimal getMOV_ENTREGA_PENDIENTE_ID () {
					return this.MOV_ENTREGA_PENDIENTE_ID;
				}

				public Boolean MOV_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean MOV_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String MOV_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "MOV_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public BigDecimal ESM_ENTREGA_PENDIENTE_ID;

				public BigDecimal getESM_ENTREGA_PENDIENTE_ID () {
					return this.ESM_ENTREGA_PENDIENTE_ID;
				}

				public Boolean ESM_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean ESM_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String ESM_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "ESM_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public java.util.Date FECHA_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_ENTREGA_PENDIENTE () {
					return this.FECHA_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_ENTREGA_PENDIENTE";
				
				}

				
			    public String NUMERO_TIRILLA_PENDIENTE;

				public String getNUMERO_TIRILLA_PENDIENTE () {
					return this.NUMERO_TIRILLA_PENDIENTE;
				}

				public Boolean NUMERO_TIRILLA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NUMERO_TIRILLA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NUMERO_TIRILLA_PENDIENTELength(){
				    return 50;
				}
				public Integer NUMERO_TIRILLA_PENDIENTEPrecision(){
				    return 0;
				}
				public String NUMERO_TIRILLA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NUMERO_TIRILLA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEOriginalDbColumnName(){
				
					return "NUMERO_TIRILLA_PENDIENTE";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 20;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public java.util.Date FMODIFICACION;

				public java.util.Date getFMODIFICACION () {
					return this.FMODIFICACION;
				}

				public Boolean FMODIFICACIONIsNullable(){
				    return true;
				}
				public Boolean FMODIFICACIONIsKey(){
				    return false;
				}
				public Integer FMODIFICACIONLength(){
				    return 0;
				}
				public Integer FMODIFICACIONPrecision(){
				    return 0;
				}
				public String FMODIFICACIONDefault(){
				
					return null;
				
				}
				public String FMODIFICACIONComment(){
				
				    return "";
				
				}
				public String FMODIFICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMODIFICACIONOriginalDbColumnName(){
				
					return "FMODIFICACION";
				
				}

				
			    public String NOVEDAD_PENDIENTE;

				public String getNOVEDAD_PENDIENTE () {
					return this.NOVEDAD_PENDIENTE;
				}

				public Boolean NOVEDAD_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NOVEDAD_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NOVEDAD_PENDIENTELength(){
				    return 500;
				}
				public Integer NOVEDAD_PENDIENTEPrecision(){
				    return 0;
				}
				public String NOVEDAD_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NOVEDAD_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NOVEDAD_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NOVEDAD_PENDIENTEOriginalDbColumnName(){
				
					return "NOVEDAD_PENDIENTE";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
					this.NOVEDAD_PENDIENTE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
					this.NOVEDAD_PENDIENTE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
					// String
				
						writeString(this.NOVEDAD_PENDIENTE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
					// String
				
						writeString(this.NOVEDAD_PENDIENTE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PENDIENTES_ID="+String.valueOf(PENDIENTES_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CANTIDAD_PENDIENTE_GENERADA="+String.valueOf(CANTIDAD_PENDIENTE_GENERADA));
		sb.append(",CANTIDAD_PENDIENTE_ENTREGADA="+String.valueOf(CANTIDAD_PENDIENTE_ENTREGADA));
		sb.append(",FECHA_LIMITE_ENTREGA_PENDIENTE="+String.valueOf(FECHA_LIMITE_ENTREGA_PENDIENTE));
		sb.append(",MOV_ENTREGA_PENDIENTE_ID="+String.valueOf(MOV_ENTREGA_PENDIENTE_ID));
		sb.append(",ESM_ENTREGA_PENDIENTE_ID="+String.valueOf(ESM_ENTREGA_PENDIENTE_ID));
		sb.append(",FECHA_ENTREGA_PENDIENTE="+String.valueOf(FECHA_ENTREGA_PENDIENTE));
		sb.append(",NUMERO_TIRILLA_PENDIENTE="+NUMERO_TIRILLA_PENDIENTE);
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",FMODIFICACION="+String.valueOf(FMODIFICACION));
		sb.append(",NOVEDAD_PENDIENTE="+NOVEDAD_PENDIENTE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row138Struct implements routines.system.IPersistableRow<row138Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal PENDIENTES_ID;

				public BigDecimal getPENDIENTES_ID () {
					return this.PENDIENTES_ID;
				}

				public Boolean PENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PENDIENTES_IDPrecision(){
				    return null;
				}
				public String PENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PENDIENTES_IDOriginalDbColumnName(){
				
					return "PENDIENTES_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 0;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_GENERADA;

				public BigDecimal getCANTIDAD_PENDIENTE_GENERADA () {
					return this.CANTIDAD_PENDIENTE_GENERADA;
				}

				public Boolean CANTIDAD_PENDIENTE_GENERADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_GENERADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_PENDIENTE_GENERADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_GENERADA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_ENTREGADA;

				public BigDecimal getCANTIDAD_PENDIENTE_ENTREGADA () {
					return this.CANTIDAD_PENDIENTE_ENTREGADA;
				}

				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADAPrecision(){
				    return null;
				}
				public String CANTIDAD_PENDIENTE_ENTREGADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_ENTREGADA";
				
				}

				
			    public java.util.Date FECHA_LIMITE_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_LIMITE_ENTREGA_PENDIENTE () {
					return this.FECHA_LIMITE_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_LIMITE_ENTREGA_PENDIENTE";
				
				}

				
			    public BigDecimal MOV_ENTREGA_PENDIENTE_ID;

				public BigDecimal getMOV_ENTREGA_PENDIENTE_ID () {
					return this.MOV_ENTREGA_PENDIENTE_ID;
				}

				public Boolean MOV_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean MOV_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String MOV_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "MOV_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public BigDecimal ESM_ENTREGA_PENDIENTE_ID;

				public BigDecimal getESM_ENTREGA_PENDIENTE_ID () {
					return this.ESM_ENTREGA_PENDIENTE_ID;
				}

				public Boolean ESM_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean ESM_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String ESM_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "ESM_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public java.util.Date FECHA_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_ENTREGA_PENDIENTE () {
					return this.FECHA_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_ENTREGA_PENDIENTE";
				
				}

				
			    public String NUMERO_TIRILLA_PENDIENTE;

				public String getNUMERO_TIRILLA_PENDIENTE () {
					return this.NUMERO_TIRILLA_PENDIENTE;
				}

				public Boolean NUMERO_TIRILLA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NUMERO_TIRILLA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NUMERO_TIRILLA_PENDIENTELength(){
				    return 50;
				}
				public Integer NUMERO_TIRILLA_PENDIENTEPrecision(){
				    return 0;
				}
				public String NUMERO_TIRILLA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NUMERO_TIRILLA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEOriginalDbColumnName(){
				
					return "NUMERO_TIRILLA_PENDIENTE";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 20;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public java.util.Date FMODIFICACION;

				public java.util.Date getFMODIFICACION () {
					return this.FMODIFICACION;
				}

				public Boolean FMODIFICACIONIsNullable(){
				    return true;
				}
				public Boolean FMODIFICACIONIsKey(){
				    return false;
				}
				public Integer FMODIFICACIONLength(){
				    return 0;
				}
				public Integer FMODIFICACIONPrecision(){
				    return 0;
				}
				public String FMODIFICACIONDefault(){
				
					return null;
				
				}
				public String FMODIFICACIONComment(){
				
				    return "";
				
				}
				public String FMODIFICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMODIFICACIONOriginalDbColumnName(){
				
					return "FMODIFICACION";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PENDIENTES_ID="+String.valueOf(PENDIENTES_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CANTIDAD_PENDIENTE_GENERADA="+String.valueOf(CANTIDAD_PENDIENTE_GENERADA));
		sb.append(",CANTIDAD_PENDIENTE_ENTREGADA="+String.valueOf(CANTIDAD_PENDIENTE_ENTREGADA));
		sb.append(",FECHA_LIMITE_ENTREGA_PENDIENTE="+String.valueOf(FECHA_LIMITE_ENTREGA_PENDIENTE));
		sb.append(",MOV_ENTREGA_PENDIENTE_ID="+String.valueOf(MOV_ENTREGA_PENDIENTE_ID));
		sb.append(",ESM_ENTREGA_PENDIENTE_ID="+String.valueOf(ESM_ENTREGA_PENDIENTE_ID));
		sb.append(",FECHA_ENTREGA_PENDIENTE="+String.valueOf(FECHA_ENTREGA_PENDIENTE));
		sb.append(",NUMERO_TIRILLA_PENDIENTE="+NUMERO_TIRILLA_PENDIENTE);
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",FMODIFICACION="+String.valueOf(FMODIFICACION));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row138Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tOracleInput_57Struct implements routines.system.IPersistableRow<after_tOracleInput_57Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];

	
			    public BigDecimal PENDIENTES_ID;

				public BigDecimal getPENDIENTES_ID () {
					return this.PENDIENTES_ID;
				}

				public Boolean PENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PENDIENTES_IDPrecision(){
				    return null;
				}
				public String PENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PENDIENTES_IDOriginalDbColumnName(){
				
					return "PENDIENTES_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 0;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_GENERADA;

				public BigDecimal getCANTIDAD_PENDIENTE_GENERADA () {
					return this.CANTIDAD_PENDIENTE_GENERADA;
				}

				public Boolean CANTIDAD_PENDIENTE_GENERADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_GENERADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_GENERADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_PENDIENTE_GENERADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_GENERADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_GENERADA";
				
				}

				
			    public BigDecimal CANTIDAD_PENDIENTE_ENTREGADA;

				public BigDecimal getCANTIDAD_PENDIENTE_ENTREGADA () {
					return this.CANTIDAD_PENDIENTE_ENTREGADA;
				}

				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PENDIENTE_ENTREGADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADALength(){
				    return 0;
				}
				public Integer CANTIDAD_PENDIENTE_ENTREGADAPrecision(){
				    return null;
				}
				public String CANTIDAD_PENDIENTE_ENTREGADADefault(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PENDIENTE_ENTREGADAOriginalDbColumnName(){
				
					return "CANTIDAD_PENDIENTE_ENTREGADA";
				
				}

				
			    public java.util.Date FECHA_LIMITE_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_LIMITE_ENTREGA_PENDIENTE () {
					return this.FECHA_LIMITE_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_LIMITE_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_LIMITE_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_LIMITE_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_LIMITE_ENTREGA_PENDIENTE";
				
				}

				
			    public BigDecimal MOV_ENTREGA_PENDIENTE_ID;

				public BigDecimal getMOV_ENTREGA_PENDIENTE_ID () {
					return this.MOV_ENTREGA_PENDIENTE_ID;
				}

				public Boolean MOV_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean MOV_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer MOV_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String MOV_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String MOV_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "MOV_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public BigDecimal ESM_ENTREGA_PENDIENTE_ID;

				public BigDecimal getESM_ENTREGA_PENDIENTE_ID () {
					return this.ESM_ENTREGA_PENDIENTE_ID;
				}

				public Boolean ESM_ENTREGA_PENDIENTE_IDIsNullable(){
				    return true;
				}
				public Boolean ESM_ENTREGA_PENDIENTE_IDIsKey(){
				    return false;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDLength(){
				    return 0;
				}
				public Integer ESM_ENTREGA_PENDIENTE_IDPrecision(){
				    return null;
				}
				public String ESM_ENTREGA_PENDIENTE_IDDefault(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDComment(){
				
				    return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDPattern(){
				
					return "";
				
				}
				public String ESM_ENTREGA_PENDIENTE_IDOriginalDbColumnName(){
				
					return "ESM_ENTREGA_PENDIENTE_ID";
				
				}

				
			    public java.util.Date FECHA_ENTREGA_PENDIENTE;

				public java.util.Date getFECHA_ENTREGA_PENDIENTE () {
					return this.FECHA_ENTREGA_PENDIENTE;
				}

				public Boolean FECHA_ENTREGA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean FECHA_ENTREGA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer FECHA_ENTREGA_PENDIENTELength(){
				    return 0;
				}
				public Integer FECHA_ENTREGA_PENDIENTEPrecision(){
				    return 0;
				}
				public String FECHA_ENTREGA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String FECHA_ENTREGA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String FECHA_ENTREGA_PENDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ENTREGA_PENDIENTEOriginalDbColumnName(){
				
					return "FECHA_ENTREGA_PENDIENTE";
				
				}

				
			    public String NUMERO_TIRILLA_PENDIENTE;

				public String getNUMERO_TIRILLA_PENDIENTE () {
					return this.NUMERO_TIRILLA_PENDIENTE;
				}

				public Boolean NUMERO_TIRILLA_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NUMERO_TIRILLA_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NUMERO_TIRILLA_PENDIENTELength(){
				    return 50;
				}
				public Integer NUMERO_TIRILLA_PENDIENTEPrecision(){
				    return 0;
				}
				public String NUMERO_TIRILLA_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NUMERO_TIRILLA_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NUMERO_TIRILLA_PENDIENTEOriginalDbColumnName(){
				
					return "NUMERO_TIRILLA_PENDIENTE";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return null;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return null;
				}
				public String DFORMULA_IDDefault(){
				
					return "";
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 20;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public java.util.Date FMODIFICACION;

				public java.util.Date getFMODIFICACION () {
					return this.FMODIFICACION;
				}

				public Boolean FMODIFICACIONIsNullable(){
				    return true;
				}
				public Boolean FMODIFICACIONIsKey(){
				    return false;
				}
				public Integer FMODIFICACIONLength(){
				    return 0;
				}
				public Integer FMODIFICACIONPrecision(){
				    return 0;
				}
				public String FMODIFICACIONDefault(){
				
					return null;
				
				}
				public String FMODIFICACIONComment(){
				
				    return "";
				
				}
				public String FMODIFICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMODIFICACIONOriginalDbColumnName(){
				
					return "FMODIFICACION";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length) {
				if(length < 1024 && commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos.length == 0) {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[1024];
				} else {
   					commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length);
			strReturn = new String(commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
					this.FECHA = readDate(dis);
					
						this.CANTIDAD_PENDIENTE_GENERADA = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_PENDIENTE_ENTREGADA = (BigDecimal) dis.readObject();
					
					this.FECHA_LIMITE_ENTREGA_PENDIENTE = readDate(dis);
					
						this.MOV_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
						this.ESM_ENTREGA_PENDIENTE_ID = (BigDecimal) dis.readObject();
					
					this.FECHA_ENTREGA_PENDIENTE = readDate(dis);
					
					this.NUMERO_TIRILLA_PENDIENTE = readString(dis);
					
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
						this.DFORMULA_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.FMODIFICACION = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PENDIENTES_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_GENERADA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PENDIENTE_ENTREGADA);
					
					// java.util.Date
				
						writeDate(this.FECHA_LIMITE_ENTREGA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOV_ENTREGA_PENDIENTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESM_ENTREGA_PENDIENTE_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA_ENTREGA_PENDIENTE,dos);
					
					// String
				
						writeString(this.NUMERO_TIRILLA_PENDIENTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DFORMULA_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// java.util.Date
				
						writeDate(this.FMODIFICACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PENDIENTES_ID="+String.valueOf(PENDIENTES_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CANTIDAD_PENDIENTE_GENERADA="+String.valueOf(CANTIDAD_PENDIENTE_GENERADA));
		sb.append(",CANTIDAD_PENDIENTE_ENTREGADA="+String.valueOf(CANTIDAD_PENDIENTE_ENTREGADA));
		sb.append(",FECHA_LIMITE_ENTREGA_PENDIENTE="+String.valueOf(FECHA_LIMITE_ENTREGA_PENDIENTE));
		sb.append(",MOV_ENTREGA_PENDIENTE_ID="+String.valueOf(MOV_ENTREGA_PENDIENTE_ID));
		sb.append(",ESM_ENTREGA_PENDIENTE_ID="+String.valueOf(ESM_ENTREGA_PENDIENTE_ID));
		sb.append(",FECHA_ENTREGA_PENDIENTE="+String.valueOf(FECHA_ENTREGA_PENDIENTE));
		sb.append(",NUMERO_TIRILLA_PENDIENTE="+NUMERO_TIRILLA_PENDIENTE);
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",FMODIFICACION="+String.valueOf(FMODIFICACION));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tOracleInput_57Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_57Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_57_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_41Process(globalMap);
		tOracleInput_45Process(globalMap);
		tOracleInput_42Process(globalMap);
		tHashInput_34Process(globalMap);
		tHashInput_35Process(globalMap);

		row138Struct row138 = new row138Struct();
out16Struct out16 = new out16Struct();
out17Struct out17 = new out17Struct();
out18Struct out18 = new out18Struct();
out19Struct out19 = new out19Struct();
out20Struct out20 = new out20Struct();
out4Struct out4 = new out4Struct();










	
	/**
	 * [tOracleOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_8", false);
		start_Hash.put("tOracleOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out4");
					}
				
		int tos_count_tOracleOutput_8 = 0;
		






        int updateKeyCount_tOracleOutput_8 = 1;
        if(updateKeyCount_tOracleOutput_8 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_8 == 22 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_8 = 0;
    int nb_line_update_tOracleOutput_8 = 0;
    int nb_line_inserted_tOracleOutput_8 = 0;
    int nb_line_deleted_tOracleOutput_8 = 0;
    int nb_line_rejected_tOracleOutput_8 = 0;

    int tmp_batchUpdateCount_tOracleOutput_8 = 0;

    int deletedCount_tOracleOutput_8=0;
    int updatedCount_tOracleOutput_8=0;
    int insertedCount_tOracleOutput_8=0;
    int rowsToCommitCount_tOracleOutput_8=0;
    int rejectedCount_tOracleOutput_8=0;

    boolean whetherReject_tOracleOutput_8 = false;

    java.sql.Connection conn_tOracleOutput_8 = null;

    //optional table
    String dbschema_tOracleOutput_8 = null;
    String tableName_tOracleOutput_8 = null;
                    String driverClass_tOracleOutput_8 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_8);
                String url_tOracleOutput_8 = null;
                    url_tOracleOutput_8 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_8 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_8 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_8 = decryptedPassword_tOracleOutput_8;
                dbschema_tOracleOutput_8 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_8 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_8.put("user",dbUser_tOracleOutput_8);
                    atnParamsPrope_tOracleOutput_8.put("password",dbPwd_tOracleOutput_8);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_8.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_8 = java.sql.DriverManager.getConnection(url_tOracleOutput_8, atnParamsPrope_tOracleOutput_8);
        resourceMap.put("conn_tOracleOutput_8", conn_tOracleOutput_8);
            conn_tOracleOutput_8.setAutoCommit(false);
            int commitEvery_tOracleOutput_8 = 1000;
            int commitCounter_tOracleOutput_8 = 0;
        int count_tOracleOutput_8=0;

        if(dbschema_tOracleOutput_8 == null || dbschema_tOracleOutput_8.trim().length() == 0) {
            tableName_tOracleOutput_8 = ("BMED_PENDIENTES");
        } else {
            tableName_tOracleOutput_8 = dbschema_tOracleOutput_8 + "." + ("BMED_PENDIENTES");
        }
                java.sql.PreparedStatement pstmt_tOracleOutput_8 = conn_tOracleOutput_8.prepareStatement("SELECT COUNT(1) FROM " + tableName_tOracleOutput_8 + " WHERE PENDIENTES_ID = ?");
                resourceMap.put("pstmt_tOracleOutput_8", pstmt_tOracleOutput_8);
                String insert_tOracleOutput_8 = "INSERT INTO " + tableName_tOracleOutput_8 + " (PENDIENTES_ID,FECHA,CANTIDAD_PENDIENTE_GENERADA,CANTIDAD_PENDIENTE_ENTREGADA,FECHA_LIMITE_ENTREGA_PENDIENTE,MOV_ENTREGA_PENDIENTE_ID,ESM_ENTREGA_PENDIENTE_ID,FECHA_ENTREGA_PENDIENTE,NUMERO_TIRILLA,MOVIMIENTOS_ID,FORMASFARMACEUTICAS_ID,DIAS_HABILES_VENCIMIENTO,HORAS_RESERVA,HORAS_PARA_ENTREGAR,HORAS_TRANSCURRIDAS,AUTORIZA_ENVIO,NOVEDAD,LUGAR_ENTREGA,CANTIDAD_BODEGA_VIRTUAL,FECHA_BODEGA_VIRTUAL,DFORMULA_ID,ESTADO) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_8 = conn_tOracleOutput_8.prepareStatement(insert_tOracleOutput_8);
                resourceMap.put("pstmtInsert_tOracleOutput_8", pstmtInsert_tOracleOutput_8);
                String update_tOracleOutput_8 = "UPDATE " + tableName_tOracleOutput_8 + " SET FECHA = ?,CANTIDAD_PENDIENTE_GENERADA = ?,CANTIDAD_PENDIENTE_ENTREGADA = ?,FECHA_LIMITE_ENTREGA_PENDIENTE = ?,MOV_ENTREGA_PENDIENTE_ID = ?,ESM_ENTREGA_PENDIENTE_ID = ?,FECHA_ENTREGA_PENDIENTE = ?,NUMERO_TIRILLA = ?,MOVIMIENTOS_ID = ?,FORMASFARMACEUTICAS_ID = ?,DIAS_HABILES_VENCIMIENTO = ?,HORAS_RESERVA = ?,HORAS_PARA_ENTREGAR = ?,HORAS_TRANSCURRIDAS = ?,AUTORIZA_ENVIO = ?,NOVEDAD = ?,LUGAR_ENTREGA = ?,CANTIDAD_BODEGA_VIRTUAL = ?,FECHA_BODEGA_VIRTUAL = ?,DFORMULA_ID = ?,ESTADO = ? WHERE PENDIENTES_ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_8 = conn_tOracleOutput_8.prepareStatement(update_tOracleOutput_8);
                resourceMap.put("pstmtUpdate_tOracleOutput_8", pstmtUpdate_tOracleOutput_8);





 



/**
 * [tOracleOutput_8 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out20");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
	BigDecimal DIAS_HABILES_VENCIMIENTO;
	BigDecimal HORAS_RESERVA_PENDIENTE;
	BigDecimal HORAS_PARA_ENTREGAR_PENDIENTE;
	BigDecimal HORAS_TRANSCURRIDAS_PENDIENTE;
	String AUTORIZA_ENVIO;
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
out4Struct out4_tmp = new out4Struct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tMap_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_21", false);
		start_Hash.put("tMap_21", System.currentTimeMillis());
		
	
	currentComponent="tMap_21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out19");
					}
				
		int tos_count_tMap_21 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct> tHash_Lookup_row19 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct>) 
					globalMap.get( "tHash_Lookup_row19" ))
					;					
					
	

row19Struct row19HashKey = new row19Struct();
row19Struct row19Default = new row19Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_21__Struct  {
}
Var__tMap_21__Struct Var__tMap_21 = new Var__tMap_21__Struct();
// ###############################

// ###############################
// # Outputs initialization
out20Struct out20_tmp = new out20Struct();
// ###############################

        
        



        









 



/**
 * [tMap_21 begin ] stop
 */



	
	/**
	 * [tMap_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_20", false);
		start_Hash.put("tMap_20", System.currentTimeMillis());
		
	
	currentComponent="tMap_20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out18");
					}
				
		int tos_count_tMap_20 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct> tHash_Lookup_row18 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct>) 
					globalMap.get( "tHash_Lookup_row18" ))
					;					
					
	

row18Struct row18HashKey = new row18Struct();
row18Struct row18Default = new row18Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_20__Struct  {
}
Var__tMap_20__Struct Var__tMap_20 = new Var__tMap_20__Struct();
// ###############################

// ###############################
// # Outputs initialization
out19Struct out19_tmp = new out19Struct();
// ###############################

        
        



        









 



/**
 * [tMap_20 begin ] stop
 */



	
	/**
	 * [tMap_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_19", false);
		start_Hash.put("tMap_19", System.currentTimeMillis());
		
	
	currentComponent="tMap_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out17");
					}
				
		int tos_count_tMap_19 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
					globalMap.get( "tHash_Lookup_row8" ))
					;					
					
	

row8Struct row8HashKey = new row8Struct();
row8Struct row8Default = new row8Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_19__Struct  {
}
Var__tMap_19__Struct Var__tMap_19 = new Var__tMap_19__Struct();
// ###############################

// ###############################
// # Outputs initialization
out18Struct out18_tmp = new out18Struct();
// ###############################

        
        



        









 



/**
 * [tMap_19 begin ] stop
 */



	
	/**
	 * [tMap_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_18", false);
		start_Hash.put("tMap_18", System.currentTimeMillis());
		
	
	currentComponent="tMap_18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out16");
					}
				
		int tos_count_tMap_18 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct> tHash_Lookup_row6 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct>) 
					globalMap.get( "tHash_Lookup_row6" ))
					;					
					
	

row6Struct row6HashKey = new row6Struct();
row6Struct row6Default = new row6Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_18__Struct  {
}
Var__tMap_18__Struct Var__tMap_18 = new Var__tMap_18__Struct();
// ###############################

// ###############################
// # Outputs initialization
out17Struct out17_tmp = new out17Struct();
// ###############################

        
        



        









 



/**
 * [tMap_18 begin ] stop
 */



	
	/**
	 * [tMap_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_17", false);
		start_Hash.put("tMap_17", System.currentTimeMillis());
		
	
	currentComponent="tMap_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row138");
					}
				
		int tos_count_tMap_17 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row5Struct> tHash_Lookup_row5 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row5Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row5Struct>) 
					globalMap.get( "tHash_Lookup_row5" ))
					;					
					
	

row5Struct row5HashKey = new row5Struct();
row5Struct row5Default = new row5Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_17__Struct  {
}
Var__tMap_17__Struct Var__tMap_17 = new Var__tMap_17__Struct();
// ###############################

// ###############################
// # Outputs initialization
out16Struct out16_tmp = new out16Struct();
// ###############################

        
        



        









 



/**
 * [tMap_17 begin ] stop
 */



	
	/**
	 * [tOracleInput_57 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_57", false);
		start_Hash.put("tOracleInput_57", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_57";
	
	
		int tos_count_tOracleInput_57 = 0;
		
	


	
		    int nb_line_tOracleInput_57 = 0;
		    java.sql.Connection conn_tOracleInput_57 = null;
				conn_tOracleInput_57 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_57 = false;
				boolean isConnectionWrapped_tOracleInput_57 = !(conn_tOracleInput_57 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_57.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_57 = null;
                if (isConnectionWrapped_tOracleInput_57) {
					unwrappedOraConn_tOracleInput_57 = conn_tOracleInput_57.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_57 != null) {
                        isTimeZoneNull_tOracleInput_57 = (unwrappedOraConn_tOracleInput_57.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_57 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_57).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_57) {
					java.sql.Statement stmtGetTZ_tOracleInput_57 = conn_tOracleInput_57.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_57 = stmtGetTZ_tOracleInput_57.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_57 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_57.next()) {
						sessionTimezone_tOracleInput_57 = rsGetTZ_tOracleInput_57.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_57 && unwrappedOraConn_tOracleInput_57 != null) {
                        unwrappedOraConn_tOracleInput_57.setSessionTimeZone(sessionTimezone_tOracleInput_57);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_57).setSessionTimeZone(sessionTimezone_tOracleInput_57);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_57 = conn_tOracleInput_57.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_57.setFetchSize(1000);


		    String dbquery_tOracleInput_57 = "SELECT \n pend.id                     AS PENDIENTES_ID , \n  pend.FECHA                  AS FECHA ,\n  NVL(pend.pendien"
+"te, 0)      AS CANTIDAD_PENDIENTE_GENERADA ,\n  pend.ENTREGADA              AS CANTIDAD_PENDIENTE_ENTREGADA ,\n  pend.FL"
+"IMITENTREGA          AS FECHA_LIMITE_ENTREGA_PENDIENTE ,\n  pend.MOVENTREGA             AS MOV_ENTREGA_PENDIENTE_ID ,\n "
+" Mov.UORG_ID          AS ESM_ENTREGA_PENDIENTE_ID ,\n  pend.fentrega               AS FECHA_ENTREGA_PENDIENTE ,\n  mt.CO"
+"NSECUTIVO              AS NUMERO_TIRILLA_PENDIENTE,\n  pend.movimientos_id         AS MOVIMIENTOS_ID,\n  pend.formasfarm"
+"aceuticas_id AS FORMASFARMACEUTICAS_ID,\n  pend.DFORMMEDINSUMOS_ID AS DFORMULA_ID,\n  PEND.ESTADO AS ESTADO,\n  PEND.FMO"
+"DIFICACION\nFROM MED_PENDIENTES pend\nINNER JOIN MED_MOVIMIENTOS Mov ON Mov.ID  = pend.MOVIMIENTOS_ID\nLEFT JOIN MED_TIR"
+"ILLAS mt on mt.id = pend.tirillas_id  "  + context.COND_PENDIENTES;
		    

		    globalMap.put("tOracleInput_57_QUERY",dbquery_tOracleInput_57);

		    java.sql.ResultSet rs_tOracleInput_57 = null;

		    try {
		    	rs_tOracleInput_57 = stmt_tOracleInput_57.executeQuery(dbquery_tOracleInput_57);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_57 = rs_tOracleInput_57.getMetaData();
		    	int colQtyInRs_tOracleInput_57 = rsmd_tOracleInput_57.getColumnCount();

		    String tmpContent_tOracleInput_57 = null;
		    
		    
		    while (rs_tOracleInput_57.next()) {
		        nb_line_tOracleInput_57++;
		        
							if(colQtyInRs_tOracleInput_57 < 1) {
								row138.PENDIENTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_57.getObject(1) != null) {
						row138.PENDIENTES_ID = rs_tOracleInput_57.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_57 < 2) {
								row138.FECHA = null;
							} else {
										
			row138.FECHA = routines.system.JDBCUtil.getDate(rs_tOracleInput_57, 2);
		                    }
							if(colQtyInRs_tOracleInput_57 < 3) {
								row138.CANTIDAD_PENDIENTE_GENERADA = null;
							} else {
		                          
					if(rs_tOracleInput_57.getObject(3) != null) {
						row138.CANTIDAD_PENDIENTE_GENERADA = rs_tOracleInput_57.getBigDecimal(3);
					} else {
				
						row138.CANTIDAD_PENDIENTE_GENERADA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_57 < 4) {
								row138.CANTIDAD_PENDIENTE_ENTREGADA = null;
							} else {
		                          
					if(rs_tOracleInput_57.getObject(4) != null) {
						row138.CANTIDAD_PENDIENTE_ENTREGADA = rs_tOracleInput_57.getBigDecimal(4);
					} else {
				
						row138.CANTIDAD_PENDIENTE_ENTREGADA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_57 < 5) {
								row138.FECHA_LIMITE_ENTREGA_PENDIENTE = null;
							} else {
										
			row138.FECHA_LIMITE_ENTREGA_PENDIENTE = routines.system.JDBCUtil.getDate(rs_tOracleInput_57, 5);
		                    }
							if(colQtyInRs_tOracleInput_57 < 6) {
								row138.MOV_ENTREGA_PENDIENTE_ID = null;
							} else {
		                          
					if(rs_tOracleInput_57.getObject(6) != null) {
						row138.MOV_ENTREGA_PENDIENTE_ID = rs_tOracleInput_57.getBigDecimal(6);
					} else {
				
						row138.MOV_ENTREGA_PENDIENTE_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_57 < 7) {
								row138.ESM_ENTREGA_PENDIENTE_ID = null;
							} else {
		                          
					if(rs_tOracleInput_57.getObject(7) != null) {
						row138.ESM_ENTREGA_PENDIENTE_ID = rs_tOracleInput_57.getBigDecimal(7);
					} else {
				
						row138.ESM_ENTREGA_PENDIENTE_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_57 < 8) {
								row138.FECHA_ENTREGA_PENDIENTE = null;
							} else {
										
			row138.FECHA_ENTREGA_PENDIENTE = routines.system.JDBCUtil.getDate(rs_tOracleInput_57, 8);
		                    }
							if(colQtyInRs_tOracleInput_57 < 9) {
								row138.NUMERO_TIRILLA_PENDIENTE = null;
							} else {
	                         		
        	row138.NUMERO_TIRILLA_PENDIENTE = routines.system.JDBCUtil.getString(rs_tOracleInput_57, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_57 < 10) {
								row138.MOVIMIENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_57.getObject(10) != null) {
						row138.MOVIMIENTOS_ID = rs_tOracleInput_57.getBigDecimal(10);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_57 < 11) {
								row138.FORMASFARMACEUTICAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_57.getObject(11) != null) {
						row138.FORMASFARMACEUTICAS_ID = rs_tOracleInput_57.getBigDecimal(11);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_57 < 12) {
								row138.DFORMULA_ID = null;
							} else {
		                          
					if(rs_tOracleInput_57.getObject(12) != null) {
						row138.DFORMULA_ID = rs_tOracleInput_57.getBigDecimal(12);
					} else {
				
						row138.DFORMULA_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_57 < 13) {
								row138.ESTADO = null;
							} else {
	                         		
        	row138.ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_57, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_57 < 14) {
								row138.FMODIFICACION = null;
							} else {
										
			row138.FMODIFICACION = routines.system.JDBCUtil.getDate(rs_tOracleInput_57, 14);
		                    }
					




 



/**
 * [tOracleInput_57 begin ] stop
 */
	
	/**
	 * [tOracleInput_57 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_57";
	
	

 


	tos_count_tOracleInput_57++;

/**
 * [tOracleInput_57 main ] stop
 */
	
	/**
	 * [tOracleInput_57 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_57";
	
	

 



/**
 * [tOracleInput_57 process_data_begin ] stop
 */

	
	/**
	 * [tMap_17 main ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row138"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_17 = false;
		
						row5Struct row5 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_17 = false;
		boolean mainRowRejected_tMap_17 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row5" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow5 = false;
       		  	    	
       		  	    	
 							row5Struct row5ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_17) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_17 = false;
								
                        		    		    row5HashKey.PENDIENTES_ID = row138.PENDIENTES_ID ;
                        		    		

								
		                        	row5HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row5.lookup( row5HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row5Struct fromLookup_row5 = null;
							row5 = row5Default;
										 
							
								 
							
							
								if (tHash_Lookup_row5 !=null && tHash_Lookup_row5.hasNext()) { // G 099
								
							
								
								fromLookup_row5 = tHash_Lookup_row5.next();

							
							
								} // G 099
							
							

							if(fromLookup_row5 != null) {
								row5 = fromLookup_row5;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_17__Struct Var = Var__tMap_17;// ###############################
        // ###############################
        // # Output tables

out16 = null;


// # Output table : 'out16'
out16_tmp.PENDIENTES_ID = row138.PENDIENTES_ID ;
out16_tmp.FECHA = row138.FECHA ;
out16_tmp.CANTIDAD_PENDIENTE_GENERADA = row138.CANTIDAD_PENDIENTE_GENERADA ;
out16_tmp.CANTIDAD_PENDIENTE_ENTREGADA = row138.CANTIDAD_PENDIENTE_ENTREGADA ;
out16_tmp.FECHA_LIMITE_ENTREGA_PENDIENTE = row138.FECHA_LIMITE_ENTREGA_PENDIENTE ;
out16_tmp.MOV_ENTREGA_PENDIENTE_ID = row138.MOV_ENTREGA_PENDIENTE_ID ;
out16_tmp.ESM_ENTREGA_PENDIENTE_ID = row138.ESM_ENTREGA_PENDIENTE_ID ;
out16_tmp.FECHA_ENTREGA_PENDIENTE = row138.FECHA_ENTREGA_PENDIENTE ;
out16_tmp.NUMERO_TIRILLA_PENDIENTE = row138.NUMERO_TIRILLA_PENDIENTE ;
out16_tmp.MOVIMIENTOS_ID = row138.MOVIMIENTOS_ID ;
out16_tmp.FORMASFARMACEUTICAS_ID = row138.FORMASFARMACEUTICAS_ID ;
out16_tmp.DFORMULA_ID = row138.DFORMULA_ID ;
out16_tmp.ESTADO = row138.ESTADO ;
out16_tmp.FMODIFICACION = row138.FMODIFICACION ;
out16_tmp.NOVEDAD_PENDIENTE = row5.NOVEDAD_PENDIENTE ;
out16 = out16_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_17 = false;










 


	tos_count_tMap_17++;

/**
 * [tMap_17 main ] stop
 */
	
	/**
	 * [tMap_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_begin ] stop
 */
// Start of branch "out16"
if(out16 != null) { 



	
	/**
	 * [tMap_18 main ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out16"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_18 = false;
		
						row6Struct row6 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_18 = false;
		boolean mainRowRejected_tMap_18 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row6" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow6 = false;
       		  	    	
       		  	    	
 							row6Struct row6ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_18) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_18 = false;
								
                        		    		    row6HashKey.PENDIENTES_ID = out16.PENDIENTES_ID ;
                        		    		

								
		                        	row6HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row6.lookup( row6HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row6 != null && tHash_Lookup_row6.getCount(row6HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row6' and it contains more one result from keys :  row6.PENDIENTES_ID = '" + row6HashKey.PENDIENTES_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row6Struct fromLookup_row6 = null;
							row6 = row6Default;
										 
							
								 
							
							
								if (tHash_Lookup_row6 !=null && tHash_Lookup_row6.hasNext()) { // G 099
								
							
								
								fromLookup_row6 = tHash_Lookup_row6.next();

							
							
								} // G 099
							
							

							if(fromLookup_row6 != null) {
								row6 = fromLookup_row6;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_18__Struct Var = Var__tMap_18;// ###############################
        // ###############################
        // # Output tables

out17 = null;


// # Output table : 'out17'
out17_tmp.PENDIENTES_ID = out16.PENDIENTES_ID ;
out17_tmp.FECHA = out16.FECHA ;
out17_tmp.CANTIDAD_PENDIENTE_GENERADA = out16.CANTIDAD_PENDIENTE_GENERADA ;
out17_tmp.CANTIDAD_PENDIENTE_ENTREGADA = out16.CANTIDAD_PENDIENTE_ENTREGADA ;
out17_tmp.FECHA_LIMITE_ENTREGA_PENDIENTE = out16.FECHA_LIMITE_ENTREGA_PENDIENTE ;
out17_tmp.MOV_ENTREGA_PENDIENTE_ID = out16.MOV_ENTREGA_PENDIENTE_ID ;
out17_tmp.ESM_ENTREGA_PENDIENTE_ID = out16.ESM_ENTREGA_PENDIENTE_ID ;
out17_tmp.FECHA_ENTREGA_PENDIENTE = out16.FECHA_ENTREGA_PENDIENTE ;
out17_tmp.NUMERO_TIRILLA_PENDIENTE = out16.NUMERO_TIRILLA_PENDIENTE ;
out17_tmp.MOVIMIENTOS_ID = out16.MOVIMIENTOS_ID ;
out17_tmp.FORMASFARMACEUTICAS_ID = out16.FORMASFARMACEUTICAS_ID ;
out17_tmp.DFORMULA_ID = out16.DFORMULA_ID ;
out17_tmp.ESTADO = out16.ESTADO ;
out17_tmp.FMODIFICACION = out16.FMODIFICACION ;
out17_tmp.NOVEDAD_PENDIENTE = out16.NOVEDAD_PENDIENTE ;
out17_tmp.FECHA_BODEGA_VIRTUAL = row6.FINICIO ;
out17_tmp.CANTIDAD_BODEGA_VIRTUAL = row6.CANTIDAD ;
out17_tmp.RESERVA_PENDIENTE = row6.FESTADO ;
out17 = out17_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_18 = false;










 


	tos_count_tMap_18++;

/**
 * [tMap_18 main ] stop
 */
	
	/**
	 * [tMap_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_begin ] stop
 */
// Start of branch "out17"
if(out17 != null) { 



	
	/**
	 * [tMap_19 main ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out17"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_19 = false;
		
						row8Struct row8 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_19 = false;
		boolean mainRowRejected_tMap_19 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row8" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow8 = false;
       		  	    	
       		  	    	
 							row8Struct row8ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_19) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_19 = false;
								
                        		    		    row8HashKey.PENDIENTES_ID = out17.PENDIENTES_ID ;
                        		    		

								
		                        	row8HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row8.lookup( row8HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row8Struct fromLookup_row8 = null;
							row8 = row8Default;
										 
							
								 
							
							
								if (tHash_Lookup_row8 !=null && tHash_Lookup_row8.hasNext()) { // G 099
								
							
								
								fromLookup_row8 = tHash_Lookup_row8.next();

							
							
								} // G 099
							
							

							if(fromLookup_row8 != null) {
								row8 = fromLookup_row8;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_19__Struct Var = Var__tMap_19;// ###############################
        // ###############################
        // # Output tables

out18 = null;


// # Output table : 'out18'
out18_tmp.PENDIENTES_ID = out17.PENDIENTES_ID ;
out18_tmp.FECHA = out17.FECHA ;
out18_tmp.CANTIDAD_PENDIENTE_GENERADA = out17.CANTIDAD_PENDIENTE_GENERADA ;
out18_tmp.CANTIDAD_PENDIENTE_ENTREGADA = out17.CANTIDAD_PENDIENTE_ENTREGADA ;
out18_tmp.FECHA_LIMITE_ENTREGA_PENDIENTE = out17.FECHA_LIMITE_ENTREGA_PENDIENTE ;
out18_tmp.MOV_ENTREGA_PENDIENTE_ID = out17.MOV_ENTREGA_PENDIENTE_ID ;
out18_tmp.ESM_ENTREGA_PENDIENTE_ID = out17.ESM_ENTREGA_PENDIENTE_ID ;
out18_tmp.FECHA_ENTREGA_PENDIENTE = out17.FECHA_ENTREGA_PENDIENTE ;
out18_tmp.NUMERO_TIRILLA_PENDIENTE = out17.NUMERO_TIRILLA_PENDIENTE ;
out18_tmp.MOVIMIENTOS_ID = out17.MOVIMIENTOS_ID ;
out18_tmp.FORMASFARMACEUTICAS_ID = out17.FORMASFARMACEUTICAS_ID ;
out18_tmp.DFORMULA_ID = out17.DFORMULA_ID ;
out18_tmp.ESTADO = out17.ESTADO ;
out18_tmp.FMODIFICACION = out17.FMODIFICACION ;
out18_tmp.NOVEDAD_PENDIENTE = out17.NOVEDAD_PENDIENTE ;
out18_tmp.FECHA_BODEGA_VIRTUAL = out17.FECHA_BODEGA_VIRTUAL ;
out18_tmp.CANTIDAD_BODEGA_VIRTUAL = out17.CANTIDAD_BODEGA_VIRTUAL ;
out18_tmp.RESERVA_PENDIENTE = out17.RESERVA_PENDIENTE ;
out18_tmp.LUGAR_ENTREGA = row8.DIRECCION ;
out18_tmp.PPENDIENTES_ID = row8.ID ;
out18 = out18_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_19 = false;










 


	tos_count_tMap_19++;

/**
 * [tMap_19 main ] stop
 */
	
	/**
	 * [tMap_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 process_data_begin ] stop
 */
// Start of branch "out18"
if(out18 != null) { 



	
	/**
	 * [tMap_20 main ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out18"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_20 = false;
		
						row18Struct row18 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_20 = false;
		boolean mainRowRejected_tMap_20 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row18" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow18 = false;
       		  	    	
       		  	    	
 							row18Struct row18ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_20) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_20 = false;
								
                        		    		    row18HashKey.MOVIMIENTOS_ID = out18.MOVIMIENTOS_ID ;
                        		    		

								
		                        	row18HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row18.lookup( row18HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row18Struct fromLookup_row18 = null;
							row18 = row18Default;
										 
							
								 
							
							
								if (tHash_Lookup_row18 !=null && tHash_Lookup_row18.hasNext()) { // G 099
								
							
								
								fromLookup_row18 = tHash_Lookup_row18.next();

							
							
								} // G 099
							
							

							if(fromLookup_row18 != null) {
								row18 = fromLookup_row18;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_20__Struct Var = Var__tMap_20;// ###############################
        // ###############################
        // # Output tables

out19 = null;


// # Output table : 'out19'
out19_tmp.PENDIENTES_ID = out18.PENDIENTES_ID ;
out19_tmp.FECHA = out18.FECHA ;
out19_tmp.CANTIDAD_PENDIENTE_GENERADA = out18.CANTIDAD_PENDIENTE_GENERADA ;
out19_tmp.CANTIDAD_PENDIENTE_ENTREGADA = out18.CANTIDAD_PENDIENTE_ENTREGADA ;
out19_tmp.FECHA_LIMITE_ENTREGA_PENDIENTE = out18.FECHA_LIMITE_ENTREGA_PENDIENTE ;
out19_tmp.MOV_ENTREGA_PENDIENTE_ID = out18.MOV_ENTREGA_PENDIENTE_ID ;
out19_tmp.ESM_ENTREGA_PENDIENTE_ID = out18.ESM_ENTREGA_PENDIENTE_ID ;
out19_tmp.FECHA_ENTREGA_PENDIENTE = out18.FECHA_ENTREGA_PENDIENTE ;
out19_tmp.NUMERO_TIRILLA_PENDIENTE = out18.NUMERO_TIRILLA_PENDIENTE ;
out19_tmp.MOVIMIENTOS_ID = out18.MOVIMIENTOS_ID ;
out19_tmp.FORMASFARMACEUTICAS_ID = out18.FORMASFARMACEUTICAS_ID ;
out19_tmp.DFORMULA_ID = out18.DFORMULA_ID ;
out19_tmp.ESTADO = out18.ESTADO ;
out19_tmp.FMODIFICACION = out18.FMODIFICACION ;
out19_tmp.NOVEDAD_PENDIENTE = out18.NOVEDAD_PENDIENTE ;
out19_tmp.FECHA_BODEGA_VIRTUAL = out18.FECHA_BODEGA_VIRTUAL ;
out19_tmp.CANTIDAD_BODEGA_VIRTUAL = out18.CANTIDAD_BODEGA_VIRTUAL ;
out19_tmp.RESERVA_PENDIENTE = out18.RESERVA_PENDIENTE ;
out19_tmp.LUGAR_ENTREGA = out18.LUGAR_ENTREGA ;
out19_tmp.INVENTARIOS_ID = row18.INVENTARIOS_ID ;
out19_tmp.FECHA_DISPENSACION = row18.FECHA_DISPENSACION ;
out19_tmp.PPENDIENTES_ID = out18.PPENDIENTES_ID ;
out19 = out19_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_20 = false;










 


	tos_count_tMap_20++;

/**
 * [tMap_20 main ] stop
 */
	
	/**
	 * [tMap_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_begin ] stop
 */
// Start of branch "out19"
if(out19 != null) { 



	
	/**
	 * [tMap_21 main ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out19"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_21 = false;
		
						row19Struct row19 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_21 = false;
		boolean mainRowRejected_tMap_21 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row19" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow19 = false;
       		  	    	
       		  	    	
 							row19Struct row19ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_21) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_21 = false;
								
                        		    		    row19HashKey.INVENTARIOS_ID = out19.INVENTARIOS_ID ;
                        		    		

								
		                        	row19HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row19.lookup( row19HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row19 != null && tHash_Lookup_row19.getCount(row19HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row19' and it contains more one result from keys :  row19.INVENTARIOS_ID = '" + row19HashKey.INVENTARIOS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row19Struct fromLookup_row19 = null;
							row19 = row19Default;
										 
							
								 
							
							
								if (tHash_Lookup_row19 !=null && tHash_Lookup_row19.hasNext()) { // G 099
								
							
								
								fromLookup_row19 = tHash_Lookup_row19.next();

							
							
								} // G 099
							
							

							if(fromLookup_row19 != null) {
								row19 = fromLookup_row19;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_21__Struct Var = Var__tMap_21;// ###############################
        // ###############################
        // # Output tables

out20 = null;


// # Output table : 'out20'
out20_tmp.PENDIENTES_ID = out19.PENDIENTES_ID ;
out20_tmp.FECHA = out19.FECHA ;
out20_tmp.CANTIDAD_PENDIENTE_GENERADA = out19.CANTIDAD_PENDIENTE_GENERADA ;
out20_tmp.CANTIDAD_PENDIENTE_ENTREGADA = out19.CANTIDAD_PENDIENTE_ENTREGADA ;
out20_tmp.FECHA_LIMITE_ENTREGA_PENDIENTE = out19.FECHA_LIMITE_ENTREGA_PENDIENTE ;
out20_tmp.MOV_ENTREGA_PENDIENTE_ID = out19.MOV_ENTREGA_PENDIENTE_ID ;
out20_tmp.ESM_ENTREGA_PENDIENTE_ID = out19.ESM_ENTREGA_PENDIENTE_ID ;
out20_tmp.FECHA_ENTREGA_PENDIENTE = out19.FECHA_ENTREGA_PENDIENTE ;
out20_tmp.NUMERO_TIRILLA_PENDIENTE = out19.NUMERO_TIRILLA_PENDIENTE ;
out20_tmp.MOVIMIENTOS_ID = out19.MOVIMIENTOS_ID ;
out20_tmp.FORMASFARMACEUTICAS_ID = out19.FORMASFARMACEUTICAS_ID ;
out20_tmp.DFORMULA_ID = out19.DFORMULA_ID ;
out20_tmp.ESTADO = out19.ESTADO ;
out20_tmp.FMODIFICACION = out19.FMODIFICACION ;
out20_tmp.NOVEDAD_PENDIENTE = out19.NOVEDAD_PENDIENTE ;
out20_tmp.FECHA_BODEGA_VIRTUAL = out19.FECHA_BODEGA_VIRTUAL ;
out20_tmp.CANTIDAD_BODEGA_VIRTUAL = out19.CANTIDAD_BODEGA_VIRTUAL ;
out20_tmp.RESERVA_PENDIENTE = out19.RESERVA_PENDIENTE ;
out20_tmp.LUGAR_ENTREGA = out19.LUGAR_ENTREGA ;
out20_tmp.INVENTARIOS_ID = out19.INVENTARIOS_ID ;
out20_tmp.FECHA_DISPENSACION = out19.FECHA_DISPENSACION ;
out20_tmp.FECHA_VENCIMIENTO = row19.FECHA_VENCIMIENTO ;
out20_tmp.PPENDIENTES_ID = out19.PPENDIENTES_ID ;
out20 = out20_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_21 = false;










 


	tos_count_tMap_21++;

/**
 * [tMap_21 main ] stop
 */
	
	/**
	 * [tMap_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_begin ] stop
 */
// Start of branch "out20"
if(out20 != null) { 



	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out20"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;
Var.DIAS_HABILES_VENCIMIENTO = new BigDecimal(Utils.difmis(out20.FECHA_DISPENSACION,out20.FECHA_VENCIMIENTO)/86400000) ;
Var.HORAS_RESERVA_PENDIENTE = new BigDecimal(Utils.difmis(out20.FECHA_BODEGA_VIRTUAL,out20.RESERVA_PENDIENTE)/3600000) ;
Var.HORAS_PARA_ENTREGAR_PENDIENTE = new BigDecimal(Utils.difmis(out20.FECHA,out20.FECHA_LIMITE_ENTREGA_PENDIENTE)/3600000) ;
Var.HORAS_TRANSCURRIDAS_PENDIENTE = new BigDecimal(Utils.difmis(out20.FECHA,TalendDate.getCurrentDate())/3600000) ;
Var.AUTORIZA_ENVIO = out20.PPENDIENTES_ID == null ? "No" : "Si" ;// ###############################
        // ###############################
        // # Output tables

out4 = null;


// # Output table : 'out4'
out4_tmp.PENDIENTES_ID = out20.PENDIENTES_ID ;
out4_tmp.FECHA = out20.FECHA ;
out4_tmp.CANTIDAD_PENDIENTE_GENERADA = out20.CANTIDAD_PENDIENTE_GENERADA ;
out4_tmp.CANTIDAD_PENDIENTE_ENTREGADA = out20.CANTIDAD_PENDIENTE_ENTREGADA ;
out4_tmp.FECHA_LIMITE_ENTREGA_PENDIENTE = out20.FECHA_LIMITE_ENTREGA_PENDIENTE ;
out4_tmp.MOV_ENTREGA_PENDIENTE_ID = out20.MOV_ENTREGA_PENDIENTE_ID ;
out4_tmp.ESM_ENTREGA_PENDIENTE_ID = out20.ESM_ENTREGA_PENDIENTE_ID ;
out4_tmp.FECHA_ENTREGA_PENDIENTE = out20.FECHA_ENTREGA_PENDIENTE ;
out4_tmp.NUMERO_TIRILLA = out20.NUMERO_TIRILLA_PENDIENTE ;
out4_tmp.MOVIMIENTOS_ID = out20.MOVIMIENTOS_ID ;
out4_tmp.FORMASFARMACEUTICAS_ID = out20.FORMASFARMACEUTICAS_ID ;
out4_tmp.DIAS_HABILES_VENCIMIENTO = Var.DIAS_HABILES_VENCIMIENTO ;
out4_tmp.HORAS_RESERVA = Var.HORAS_RESERVA_PENDIENTE ;
out4_tmp.HORAS_PARA_ENTREGAR = Var.HORAS_PARA_ENTREGAR_PENDIENTE ;
out4_tmp.HORAS_TRANSCURRIDAS = Var.HORAS_TRANSCURRIDAS_PENDIENTE ;
out4_tmp.AUTORIZA_ENVIO = Var.AUTORIZA_ENVIO ;
out4_tmp.NOVEDAD = out20.NOVEDAD_PENDIENTE ;
out4_tmp.LUGAR_ENTREGA = out20.LUGAR_ENTREGA ;
out4_tmp.CANTIDAD_BODEGA_VIRTUAL = out20.CANTIDAD_BODEGA_VIRTUAL ;
out4_tmp.FECHA_BODEGA_VIRTUAL = out20.FECHA_BODEGA_VIRTUAL ;
out4_tmp.DFORMULA_ID = out20.DFORMULA_ID ;
out4_tmp.ESTADO = out20.ESTADO ;
out4 = out4_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "out4"
if(out4 != null) { 



	
	/**
	 * [tOracleOutput_8 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out4"
						
						);
					}
					



        whetherReject_tOracleOutput_8 = false;
                    pstmt_tOracleOutput_8.setBigDecimal(1, out4.PENDIENTES_ID);

            int checkCount_tOracleOutput_8 = -1;
            try (java.sql.ResultSet rs_tOracleOutput_8 = pstmt_tOracleOutput_8.executeQuery()) {
                while(rs_tOracleOutput_8.next()) {
                    checkCount_tOracleOutput_8 = rs_tOracleOutput_8.getInt(1);
                }
            }
            if(checkCount_tOracleOutput_8 > 0) {
                        if(out4.FECHA != null) {
pstmtUpdate_tOracleOutput_8.setObject(1, new java.sql.Timestamp(out4.FECHA.getTime()),java.sql.Types.DATE);
} else {
pstmtUpdate_tOracleOutput_8.setNull(1, java.sql.Types.DATE);
}

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(2, out4.CANTIDAD_PENDIENTE_GENERADA);

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(3, out4.CANTIDAD_PENDIENTE_ENTREGADA);

                        if(out4.FECHA_LIMITE_ENTREGA_PENDIENTE != null) {
pstmtUpdate_tOracleOutput_8.setObject(4, new java.sql.Timestamp(out4.FECHA_LIMITE_ENTREGA_PENDIENTE.getTime()),java.sql.Types.DATE);
} else {
pstmtUpdate_tOracleOutput_8.setNull(4, java.sql.Types.DATE);
}

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(5, out4.MOV_ENTREGA_PENDIENTE_ID);

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(6, out4.ESM_ENTREGA_PENDIENTE_ID);

                        if(out4.FECHA_ENTREGA_PENDIENTE != null) {
pstmtUpdate_tOracleOutput_8.setObject(7, new java.sql.Timestamp(out4.FECHA_ENTREGA_PENDIENTE.getTime()),java.sql.Types.DATE);
} else {
pstmtUpdate_tOracleOutput_8.setNull(7, java.sql.Types.DATE);
}

                        if(out4.NUMERO_TIRILLA == null) {
pstmtUpdate_tOracleOutput_8.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_8.setString(8, out4.NUMERO_TIRILLA);
}

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(9, out4.MOVIMIENTOS_ID);

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(10, out4.FORMASFARMACEUTICAS_ID);

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(11, out4.DIAS_HABILES_VENCIMIENTO);

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(12, out4.HORAS_RESERVA);

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(13, out4.HORAS_PARA_ENTREGAR);

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(14, out4.HORAS_TRANSCURRIDAS);

                        if(out4.AUTORIZA_ENVIO == null) {
pstmtUpdate_tOracleOutput_8.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_8.setString(15, out4.AUTORIZA_ENVIO);
}

                        if(out4.NOVEDAD == null) {
pstmtUpdate_tOracleOutput_8.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_8.setString(16, out4.NOVEDAD);
}

                        if(out4.LUGAR_ENTREGA == null) {
pstmtUpdate_tOracleOutput_8.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_8.setString(17, out4.LUGAR_ENTREGA);
}

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(18, out4.CANTIDAD_BODEGA_VIRTUAL);

                        if(out4.FECHA_BODEGA_VIRTUAL != null) {
pstmtUpdate_tOracleOutput_8.setObject(19, new java.sql.Timestamp(out4.FECHA_BODEGA_VIRTUAL.getTime()),java.sql.Types.DATE);
} else {
pstmtUpdate_tOracleOutput_8.setNull(19, java.sql.Types.DATE);
}

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(20, out4.DFORMULA_ID);

                        if(out4.ESTADO == null) {
pstmtUpdate_tOracleOutput_8.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_8.setString(21, out4.ESTADO);
}

                        pstmtUpdate_tOracleOutput_8.setBigDecimal(22 + count_tOracleOutput_8, out4.PENDIENTES_ID);

                try {
                    int processedCount_tOracleOutput_8 = pstmtUpdate_tOracleOutput_8.executeUpdate();
                    updatedCount_tOracleOutput_8 += processedCount_tOracleOutput_8;
                    rowsToCommitCount_tOracleOutput_8 += processedCount_tOracleOutput_8;
                    nb_line_tOracleOutput_8++;
                } catch(java.lang.Exception e_tOracleOutput_8) {
globalMap.put("tOracleOutput_8_ERROR_MESSAGE",e_tOracleOutput_8.getMessage());
                    whetherReject_tOracleOutput_8 = true;
                        nb_line_tOracleOutput_8++;
                            System.err.print(e_tOracleOutput_8.getMessage());
                }
            } else {
                        pstmtInsert_tOracleOutput_8.setBigDecimal(1, out4.PENDIENTES_ID);

                        if(out4.FECHA != null) {
pstmtInsert_tOracleOutput_8.setObject(2, new java.sql.Timestamp(out4.FECHA.getTime()),java.sql.Types.DATE);
} else {
pstmtInsert_tOracleOutput_8.setNull(2, java.sql.Types.DATE);
}

                        pstmtInsert_tOracleOutput_8.setBigDecimal(3, out4.CANTIDAD_PENDIENTE_GENERADA);

                        pstmtInsert_tOracleOutput_8.setBigDecimal(4, out4.CANTIDAD_PENDIENTE_ENTREGADA);

                        if(out4.FECHA_LIMITE_ENTREGA_PENDIENTE != null) {
pstmtInsert_tOracleOutput_8.setObject(5, new java.sql.Timestamp(out4.FECHA_LIMITE_ENTREGA_PENDIENTE.getTime()),java.sql.Types.DATE);
} else {
pstmtInsert_tOracleOutput_8.setNull(5, java.sql.Types.DATE);
}

                        pstmtInsert_tOracleOutput_8.setBigDecimal(6, out4.MOV_ENTREGA_PENDIENTE_ID);

                        pstmtInsert_tOracleOutput_8.setBigDecimal(7, out4.ESM_ENTREGA_PENDIENTE_ID);

                        if(out4.FECHA_ENTREGA_PENDIENTE != null) {
pstmtInsert_tOracleOutput_8.setObject(8, new java.sql.Timestamp(out4.FECHA_ENTREGA_PENDIENTE.getTime()),java.sql.Types.DATE);
} else {
pstmtInsert_tOracleOutput_8.setNull(8, java.sql.Types.DATE);
}

                        if(out4.NUMERO_TIRILLA == null) {
pstmtInsert_tOracleOutput_8.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_8.setString(9, out4.NUMERO_TIRILLA);
}

                        pstmtInsert_tOracleOutput_8.setBigDecimal(10, out4.MOVIMIENTOS_ID);

                        pstmtInsert_tOracleOutput_8.setBigDecimal(11, out4.FORMASFARMACEUTICAS_ID);

                        pstmtInsert_tOracleOutput_8.setBigDecimal(12, out4.DIAS_HABILES_VENCIMIENTO);

                        pstmtInsert_tOracleOutput_8.setBigDecimal(13, out4.HORAS_RESERVA);

                        pstmtInsert_tOracleOutput_8.setBigDecimal(14, out4.HORAS_PARA_ENTREGAR);

                        pstmtInsert_tOracleOutput_8.setBigDecimal(15, out4.HORAS_TRANSCURRIDAS);

                        if(out4.AUTORIZA_ENVIO == null) {
pstmtInsert_tOracleOutput_8.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_8.setString(16, out4.AUTORIZA_ENVIO);
}

                        if(out4.NOVEDAD == null) {
pstmtInsert_tOracleOutput_8.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_8.setString(17, out4.NOVEDAD);
}

                        if(out4.LUGAR_ENTREGA == null) {
pstmtInsert_tOracleOutput_8.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_8.setString(18, out4.LUGAR_ENTREGA);
}

                        pstmtInsert_tOracleOutput_8.setBigDecimal(19, out4.CANTIDAD_BODEGA_VIRTUAL);

                        if(out4.FECHA_BODEGA_VIRTUAL != null) {
pstmtInsert_tOracleOutput_8.setObject(20, new java.sql.Timestamp(out4.FECHA_BODEGA_VIRTUAL.getTime()),java.sql.Types.DATE);
} else {
pstmtInsert_tOracleOutput_8.setNull(20, java.sql.Types.DATE);
}

                        pstmtInsert_tOracleOutput_8.setBigDecimal(21, out4.DFORMULA_ID);

                        if(out4.ESTADO == null) {
pstmtInsert_tOracleOutput_8.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_8.setString(22, out4.ESTADO);
}

                try {
                    int processedCount_tOracleOutput_8 = pstmtInsert_tOracleOutput_8.executeUpdate();
                    insertedCount_tOracleOutput_8 += processedCount_tOracleOutput_8;
                    rowsToCommitCount_tOracleOutput_8 += processedCount_tOracleOutput_8;
                    nb_line_tOracleOutput_8++;
                } catch(java.lang.Exception e_tOracleOutput_8) {
globalMap.put("tOracleOutput_8_ERROR_MESSAGE",e_tOracleOutput_8.getMessage());
                    whetherReject_tOracleOutput_8 = true;
                        nb_line_tOracleOutput_8++;
                            System.err.print(e_tOracleOutput_8.getMessage());
                }
            }
                commitCounter_tOracleOutput_8++;
                if(commitEvery_tOracleOutput_8 <= commitCounter_tOracleOutput_8) {
                    if(rowsToCommitCount_tOracleOutput_8 != 0){
                    	
                    }
                    conn_tOracleOutput_8.commit();
                    if(rowsToCommitCount_tOracleOutput_8 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_8 = 0;
                    }
                    commitCounter_tOracleOutput_8=0;
                }

 


	tos_count_tOracleOutput_8++;

/**
 * [tOracleOutput_8 main ] stop
 */
	
	/**
	 * [tOracleOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	

 



/**
 * [tOracleOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	

 



/**
 * [tOracleOutput_8 process_data_end ] stop
 */

} // End of branch "out4"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */

} // End of branch "out20"




	
	/**
	 * [tMap_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_end ] stop
 */

} // End of branch "out19"




	
	/**
	 * [tMap_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_end ] stop
 */

} // End of branch "out18"




	
	/**
	 * [tMap_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 process_data_end ] stop
 */

} // End of branch "out17"




	
	/**
	 * [tMap_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_end ] stop
 */

} // End of branch "out16"




	
	/**
	 * [tMap_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_57 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_57";
	
	

 



/**
 * [tOracleInput_57 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_57 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_57";
	
	

}
}finally{
	if (rs_tOracleInput_57 != null) {
		rs_tOracleInput_57.close();
	}
	if (stmt_tOracleInput_57 != null) {
		stmt_tOracleInput_57.close();
	}
}

globalMap.put("tOracleInput_57_NB_LINE",nb_line_tOracleInput_57);
 

ok_Hash.put("tOracleInput_57", true);
end_Hash.put("tOracleInput_57", System.currentTimeMillis());




/**
 * [tOracleInput_57 end ] stop
 */

	
	/**
	 * [tMap_17 end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row5 != null) {
						tHash_Lookup_row5.endGet();
					}
					globalMap.remove( "tHash_Lookup_row5" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row138");
			  	}
			  	
 

ok_Hash.put("tMap_17", true);
end_Hash.put("tMap_17", System.currentTimeMillis());




/**
 * [tMap_17 end ] stop
 */

	
	/**
	 * [tMap_18 end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row6 != null) {
						tHash_Lookup_row6.endGet();
					}
					globalMap.remove( "tHash_Lookup_row6" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out16");
			  	}
			  	
 

ok_Hash.put("tMap_18", true);
end_Hash.put("tMap_18", System.currentTimeMillis());




/**
 * [tMap_18 end ] stop
 */

	
	/**
	 * [tMap_19 end ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row8 != null) {
						tHash_Lookup_row8.endGet();
					}
					globalMap.remove( "tHash_Lookup_row8" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out17");
			  	}
			  	
 

ok_Hash.put("tMap_19", true);
end_Hash.put("tMap_19", System.currentTimeMillis());




/**
 * [tMap_19 end ] stop
 */

	
	/**
	 * [tMap_20 end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row18 != null) {
						tHash_Lookup_row18.endGet();
					}
					globalMap.remove( "tHash_Lookup_row18" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out18");
			  	}
			  	
 

ok_Hash.put("tMap_20", true);
end_Hash.put("tMap_20", System.currentTimeMillis());




/**
 * [tMap_20 end ] stop
 */

	
	/**
	 * [tMap_21 end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row19 != null) {
						tHash_Lookup_row19.endGet();
					}
					globalMap.remove( "tHash_Lookup_row19" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out19");
			  	}
			  	
 

ok_Hash.put("tMap_21", true);
end_Hash.put("tMap_21", System.currentTimeMillis());




/**
 * [tMap_21 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out20");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tOracleOutput_8 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_8 != null){
            pstmtUpdate_tOracleOutput_8.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_8");
        }
        if(pstmtInsert_tOracleOutput_8 != null){
            pstmtInsert_tOracleOutput_8.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_8");
        }
        if(pstmt_tOracleOutput_8 != null) {
            pstmt_tOracleOutput_8.close();
            resourceMap.remove("pstmt_tOracleOutput_8");
        }
    resourceMap.put("statementClosed_tOracleOutput_8", true);
		if(commitCounter_tOracleOutput_8 > 0 && rowsToCommitCount_tOracleOutput_8 != 0) {
			
		}
		conn_tOracleOutput_8.commit();
		if(commitCounter_tOracleOutput_8 > 0 && rowsToCommitCount_tOracleOutput_8 != 0) {
			
			rowsToCommitCount_tOracleOutput_8 = 0;
		}
		commitCounter_tOracleOutput_8 = 0;
		
		
		conn_tOracleOutput_8 .close();
		
		resourceMap.put("finish_tOracleOutput_8", true);
   	

	
	nb_line_deleted_tOracleOutput_8=nb_line_deleted_tOracleOutput_8+ deletedCount_tOracleOutput_8;
	nb_line_update_tOracleOutput_8=nb_line_update_tOracleOutput_8 + updatedCount_tOracleOutput_8;
	nb_line_inserted_tOracleOutput_8=nb_line_inserted_tOracleOutput_8 + insertedCount_tOracleOutput_8;
	nb_line_rejected_tOracleOutput_8=nb_line_rejected_tOracleOutput_8 + rejectedCount_tOracleOutput_8;
	
        globalMap.put("tOracleOutput_8_NB_LINE",nb_line_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_UPDATED",nb_line_update_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_8);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out4");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_8", true);
end_Hash.put("tOracleOutput_8", System.currentTimeMillis());




/**
 * [tOracleOutput_8 end ] stop
 */





















				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_21"
					     			globalMap.remove("tHash_Lookup_row19"); 
				     			
					     			//free memory for "tMap_20"
					     			globalMap.remove("tHash_Lookup_row18"); 
				     			
					     			//free memory for "tMap_19"
					     			globalMap.remove("tHash_Lookup_row8"); 
				     			
					     			//free memory for "tMap_18"
					     			globalMap.remove("tHash_Lookup_row6"); 
				     			
					     			//free memory for "tMap_17"
					     			globalMap.remove("tHash_Lookup_row5"); 
				     			
				try{
					
	
	/**
	 * [tOracleInput_57 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_57";
	
	

 



/**
 * [tOracleInput_57 finally ] stop
 */

	
	/**
	 * [tMap_17 finally ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 finally ] stop
 */

	
	/**
	 * [tMap_18 finally ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 finally ] stop
 */

	
	/**
	 * [tMap_19 finally ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 finally ] stop
 */

	
	/**
	 * [tMap_20 finally ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 finally ] stop
 */

	
	/**
	 * [tMap_21 finally ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tOracleOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_8") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_8 = null;
                if ((pstmtUpdateToClose_tOracleOutput_8 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_8")) != null) {
                    pstmtUpdateToClose_tOracleOutput_8.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_8 = null;
                if ((pstmtInsertToClose_tOracleOutput_8 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_8")) != null) {
                    pstmtInsertToClose_tOracleOutput_8.close();
                }
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_8 = null;
                if ((pstmtToClose_tOracleOutput_8 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_8")) != null) {
                    pstmtToClose_tOracleOutput_8.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_8") == null){
            java.sql.Connection ctn_tOracleOutput_8 = null;
            if((ctn_tOracleOutput_8 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_8")) != null){
                try {
                    ctn_tOracleOutput_8.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_8) {
                    String errorMessage_tOracleOutput_8 = "failed to close the connection in tOracleOutput_8 :" + sqlEx_tOracleOutput_8.getMessage();
                    System.err.println(errorMessage_tOracleOutput_8);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_8 finally ] stop
 */





















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_57_SUBPROCESS_STATE", 1);
	}
	


public void tDie_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_1", false);
		start_Hash.put("tDie_1", System.currentTimeMillis());
		
	
	currentComponent="tDie_1";
	
	
		int tos_count_tDie_1 = 0;
		

 



/**
 * [tDie_1 begin ] stop
 */
	
	/**
	 * [tDie_1 main ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

	try {
				tLogCatcher_1.addMessage("tDie", "tDie_1", 6, "Error conexión SALUDSIS", 4);
				tLogCatcher_1Process(globalMap);
				
	globalMap.put("tDie_1_DIE_PRIORITY", 6);
	System.err.println("Error conexión SALUDSIS");
	
	globalMap.put("tDie_1_DIE_MESSAGE", "Error conexión SALUDSIS");
	globalMap.put("tDie_1_DIE_MESSAGES", "Error conexión SALUDSIS");
	
	} catch (Exception | Error e_tDie_1) {
	    globalMap.put("tDie_1_ERROR_MESSAGE",e_tDie_1.getMessage());
		logIgnoredError(String.format("tDie_1 - tDie failed to log message due to internal error: %s", e_tDie_1), e_tDie_1);
	}
	
	currentComponent = "tDie_1";
	status = "failure";
        errorCode = new Integer(4);
        globalMap.put("tDie_1_DIE_CODE", errorCode);        

    
	if(true){	
		TDieException e_tDie_1 = new TDieException();

		

		throw e_tDie_1;
	}

 


	tos_count_tDie_1++;

/**
 * [tDie_1 main ] stop
 */
	
	/**
	 * [tDie_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_begin ] stop
 */
	
	/**
	 * [tDie_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_end ] stop
 */
	
	/**
	 * [tDie_1 end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 

ok_Hash.put("tDie_1", true);
end_Hash.put("tDie_1", System.currentTimeMillis());




/**
 * [tDie_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_1 finally ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_1_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableComparableLookupRow<row11Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 10;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 10;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public BigDecimal ESTREGISTRO_ID;

				public BigDecimal getESTREGISTRO_ID () {
					return this.ESTREGISTRO_ID;
				}

				public Boolean ESTREGISTRO_IDIsNullable(){
				    return false;
				}
				public Boolean ESTREGISTRO_IDIsKey(){
				    return false;
				}
				public Integer ESTREGISTRO_IDLength(){
				    return 0;
				}
				public Integer ESTREGISTRO_IDPrecision(){
				    return null;
				}
				public String ESTREGISTRO_IDDefault(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDComment(){
				
				    return "";
				
				}
				public String ESTREGISTRO_IDPattern(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDOriginalDbColumnName(){
				
					return "ESTREGISTRO_ID";
				
				}

				
			    public BigDecimal PADRE_ID;

				public BigDecimal getPADRE_ID () {
					return this.PADRE_ID;
				}

				public Boolean PADRE_IDIsNullable(){
				    return true;
				}
				public Boolean PADRE_IDIsKey(){
				    return false;
				}
				public Integer PADRE_IDLength(){
				    return 0;
				}
				public Integer PADRE_IDPrecision(){
				    return null;
				}
				public String PADRE_IDDefault(){
				
					return "";
				
				}
				public String PADRE_IDComment(){
				
				    return "";
				
				}
				public String PADRE_IDPattern(){
				
					return "";
				
				}
				public String PADRE_IDOriginalDbColumnName(){
				
					return "PADRE_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row11Struct other = (row11Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row11Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            other.ESTADO = this.ESTADO;
	            other.ESTREGISTRO_ID = this.ESTREGISTRO_ID;
	            other.PADRE_ID = this.PADRE_ID;
	            
	}

	public void copyKeysDataTo(row11Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
						this.SIGLA = readString(dis,ois);
					
						this.ESTADO = readString(dis,ois);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) ois.readObject();
					
       			    	this.PADRE_ID = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
						this.SIGLA = readString(dis,objectIn);
					
						this.ESTADO = readString(dis,objectIn);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.PADRE_ID = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
						writeString(this.SIGLA, dos, oos);
					
						writeString(this.ESTADO, dos, oos);
					
       			    	oos.writeObject(this.ESTREGISTRO_ID);
					
       			    	oos.writeObject(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						writeString(this.SIGLA, dos, objectOut);
					
						writeString(this.ESTADO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ESTREGISTRO_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",ESTREGISTRO_ID="+String.valueOf(ESTREGISTRO_ID));
		sb.append(",PADRE_ID="+String.valueOf(PADRE_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_50Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_50_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();




	
	/**
	 * [tAdvancedHash_row11 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row11", false);
		start_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tAdvancedHash_row11 = 0;
		

			   		// connection name:row11
			   		// source node:tOracleInput_50 - inputs:(after_tOracleInput_38) outputs:(row11,row11) | target node:tAdvancedHash_row11 - inputs:(row11) outputs:()
			   		// linked node: tMap_1 - inputs:(row10,row11) outputs:(out2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row11 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row11Struct>getLookup(matchingModeEnum_row11);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row11", tHash_Lookup_row11);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row11 begin ] stop
 */



	
	/**
	 * [tOracleInput_50 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_50", false);
		start_Hash.put("tOracleInput_50", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_50";
	
	
		int tos_count_tOracleInput_50 = 0;
		
	


	
		    int nb_line_tOracleInput_50 = 0;
		    java.sql.Connection conn_tOracleInput_50 = null;
				conn_tOracleInput_50 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_50 = false;
				boolean isConnectionWrapped_tOracleInput_50 = !(conn_tOracleInput_50 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_50.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_50 = null;
                if (isConnectionWrapped_tOracleInput_50) {
					unwrappedOraConn_tOracleInput_50 = conn_tOracleInput_50.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_50 != null) {
                        isTimeZoneNull_tOracleInput_50 = (unwrappedOraConn_tOracleInput_50.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_50 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_50).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_50) {
					java.sql.Statement stmtGetTZ_tOracleInput_50 = conn_tOracleInput_50.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_50 = stmtGetTZ_tOracleInput_50.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_50 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_50.next()) {
						sessionTimezone_tOracleInput_50 = rsGetTZ_tOracleInput_50.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_50 && unwrappedOraConn_tOracleInput_50 != null) {
                        unwrappedOraConn_tOracleInput_50.setSessionTimeZone(sessionTimezone_tOracleInput_50);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_50).setSessionTimeZone(sessionTimezone_tOracleInput_50);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_50 = conn_tOracleInput_50.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_50.setFetchSize(1000);


		    String dbquery_tOracleInput_50 = "SELECT \n  "+context.db_origen_Schema+".GEN_SERVICIOS.\"ID\", \n  "+context.db_origen_Schema+".GEN_SERVICIOS.NOMBRE, \n  "+context.db_origen_Schema+".GEN_SERVICIOS.SIGLA, \n  "+context.db_origen_Schema+".GEN_SERVICIOS.ESTADO, \n  "+context.db_origen_Schema+".GEN_SERVICIOS.ESTREGISTRO_ID, \n  "+context.db_origen_Schema+".GEN_SERVICIOS.PADRE_ID\nFROM "+context.db_origen_Schema+".GEN_SERVICIOS";
		    

		    globalMap.put("tOracleInput_50_QUERY",dbquery_tOracleInput_50);

		    java.sql.ResultSet rs_tOracleInput_50 = null;

		    try {
		    	rs_tOracleInput_50 = stmt_tOracleInput_50.executeQuery(dbquery_tOracleInput_50);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_50 = rs_tOracleInput_50.getMetaData();
		    	int colQtyInRs_tOracleInput_50 = rsmd_tOracleInput_50.getColumnCount();

		    String tmpContent_tOracleInput_50 = null;
		    
		    
		    while (rs_tOracleInput_50.next()) {
		        nb_line_tOracleInput_50++;
		        
							if(colQtyInRs_tOracleInput_50 < 1) {
								row11.ID = null;
							} else {
		                          
					if(rs_tOracleInput_50.getObject(1) != null) {
						row11.ID = rs_tOracleInput_50.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_50 < 2) {
								row11.NOMBRE = null;
							} else {
	                         		
        	row11.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_50, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_50 < 3) {
								row11.SIGLA = null;
							} else {
	                         		
        	row11.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_50, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_50 < 4) {
								row11.ESTADO = null;
							} else {
	                         		
        	row11.ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_50, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_50 < 5) {
								row11.ESTREGISTRO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_50.getObject(5) != null) {
						row11.ESTREGISTRO_ID = rs_tOracleInput_50.getBigDecimal(5);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_50 < 6) {
								row11.PADRE_ID = null;
							} else {
		                          
					if(rs_tOracleInput_50.getObject(6) != null) {
						row11.PADRE_ID = rs_tOracleInput_50.getBigDecimal(6);
					} else {
				
						row11.PADRE_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_50 begin ] stop
 */
	
	/**
	 * [tOracleInput_50 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_50";
	
	

 


	tos_count_tOracleInput_50++;

/**
 * [tOracleInput_50 main ] stop
 */
	
	/**
	 * [tOracleInput_50 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_50";
	
	

 



/**
 * [tOracleInput_50 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					


			   
			   

					row11Struct row11_HashRow = new row11Struct();
		   	   	   
				
				row11_HashRow.ID = row11.ID;
				
				row11_HashRow.NOMBRE = row11.NOMBRE;
				
				row11_HashRow.SIGLA = row11.SIGLA;
				
				row11_HashRow.ESTADO = row11.ESTADO;
				
				row11_HashRow.ESTREGISTRO_ID = row11.ESTREGISTRO_ID;
				
				row11_HashRow.PADRE_ID = row11.PADRE_ID;
				
			tHash_Lookup_row11.put(row11_HashRow);
			
            




 


	tos_count_tAdvancedHash_row11++;

/**
 * [tAdvancedHash_row11 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_50 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_50";
	
	

 



/**
 * [tOracleInput_50 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_50 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_50";
	
	

}
}finally{
	if (rs_tOracleInput_50 != null) {
		rs_tOracleInput_50.close();
	}
	if (stmt_tOracleInput_50 != null) {
		stmt_tOracleInput_50.close();
	}
}

globalMap.put("tOracleInput_50_NB_LINE",nb_line_tOracleInput_50);
 

ok_Hash.put("tOracleInput_50", true);
end_Hash.put("tOracleInput_50", System.currentTimeMillis());




/**
 * [tOracleInput_50 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

tHash_Lookup_row11.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row11", true);
end_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());




/**
 * [tAdvancedHash_row11 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_50 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_50";
	
	

 



/**
 * [tOracleInput_50 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_50_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableComparableLookupRow<row12Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 500;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 10;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public BigDecimal ESTREGISTRO_ID;

				public BigDecimal getESTREGISTRO_ID () {
					return this.ESTREGISTRO_ID;
				}

				public Boolean ESTREGISTRO_IDIsNullable(){
				    return false;
				}
				public Boolean ESTREGISTRO_IDIsKey(){
				    return false;
				}
				public Integer ESTREGISTRO_IDLength(){
				    return 0;
				}
				public Integer ESTREGISTRO_IDPrecision(){
				    return null;
				}
				public String ESTREGISTRO_IDDefault(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDComment(){
				
				    return "";
				
				}
				public String ESTREGISTRO_IDPattern(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDOriginalDbColumnName(){
				
					return "ESTREGISTRO_ID";
				
				}

				
			    public BigDecimal PADRE_ID;

				public BigDecimal getPADRE_ID () {
					return this.PADRE_ID;
				}

				public Boolean PADRE_IDIsNullable(){
				    return true;
				}
				public Boolean PADRE_IDIsKey(){
				    return false;
				}
				public Integer PADRE_IDLength(){
				    return 0;
				}
				public Integer PADRE_IDPrecision(){
				    return null;
				}
				public String PADRE_IDDefault(){
				
					return "";
				
				}
				public String PADRE_IDComment(){
				
				    return "";
				
				}
				public String PADRE_IDPattern(){
				
					return "";
				
				}
				public String PADRE_IDOriginalDbColumnName(){
				
					return "PADRE_ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String OBSERVACIONES;

				public String getOBSERVACIONES () {
					return this.OBSERVACIONES;
				}

				public Boolean OBSERVACIONESIsNullable(){
				    return true;
				}
				public Boolean OBSERVACIONESIsKey(){
				    return false;
				}
				public Integer OBSERVACIONESLength(){
				    return 4000;
				}
				public Integer OBSERVACIONESPrecision(){
				    return 0;
				}
				public String OBSERVACIONESDefault(){
				
					return null;
				
				}
				public String OBSERVACIONESComment(){
				
				    return "";
				
				}
				public String OBSERVACIONESPattern(){
				
					return "";
				
				}
				public String OBSERVACIONESOriginalDbColumnName(){
				
					return "OBSERVACIONES";
				
				}

				
			    public String CLASIFICACION;

				public String getCLASIFICACION () {
					return this.CLASIFICACION;
				}

				public Boolean CLASIFICACIONIsNullable(){
				    return true;
				}
				public Boolean CLASIFICACIONIsKey(){
				    return false;
				}
				public Integer CLASIFICACIONLength(){
				    return 50;
				}
				public Integer CLASIFICACIONPrecision(){
				    return 0;
				}
				public String CLASIFICACIONDefault(){
				
					return null;
				
				}
				public String CLASIFICACIONComment(){
				
				    return "";
				
				}
				public String CLASIFICACIONPattern(){
				
					return "";
				
				}
				public String CLASIFICACIONOriginalDbColumnName(){
				
					return "CLASIFICACION";
				
				}

				
			    public BigDecimal AUTORIZACION;

				public BigDecimal getAUTORIZACION () {
					return this.AUTORIZACION;
				}

				public Boolean AUTORIZACIONIsNullable(){
				    return false;
				}
				public Boolean AUTORIZACIONIsKey(){
				    return false;
				}
				public Integer AUTORIZACIONLength(){
				    return 0;
				}
				public Integer AUTORIZACIONPrecision(){
				    return null;
				}
				public String AUTORIZACIONDefault(){
				
					return "";
				
				}
				public String AUTORIZACIONComment(){
				
				    return "";
				
				}
				public String AUTORIZACIONPattern(){
				
					return "";
				
				}
				public String AUTORIZACIONOriginalDbColumnName(){
				
					return "AUTORIZACION";
				
				}

				
			    public BigDecimal SEXOS_ID;

				public BigDecimal getSEXOS_ID () {
					return this.SEXOS_ID;
				}

				public Boolean SEXOS_IDIsNullable(){
				    return true;
				}
				public Boolean SEXOS_IDIsKey(){
				    return false;
				}
				public Integer SEXOS_IDLength(){
				    return 0;
				}
				public Integer SEXOS_IDPrecision(){
				    return null;
				}
				public String SEXOS_IDDefault(){
				
					return "";
				
				}
				public String SEXOS_IDComment(){
				
				    return "";
				
				}
				public String SEXOS_IDPattern(){
				
					return "";
				
				}
				public String SEXOS_IDOriginalDbColumnName(){
				
					return "SEXOS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row12Struct other = (row12Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row12Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.ESTADO = this.ESTADO;
	            other.ESTREGISTRO_ID = this.ESTREGISTRO_ID;
	            other.PADRE_ID = this.PADRE_ID;
	            other.SIGLA = this.SIGLA;
	            other.OBSERVACIONES = this.OBSERVACIONES;
	            other.CLASIFICACION = this.CLASIFICACION;
	            other.AUTORIZACION = this.AUTORIZACION;
	            other.SEXOS_ID = this.SEXOS_ID;
	            
	}

	public void copyKeysDataTo(row12Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
						this.ESTADO = readString(dis,ois);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) ois.readObject();
					
       			    	this.PADRE_ID = (BigDecimal) ois.readObject();
					
						this.SIGLA = readString(dis,ois);
					
						this.OBSERVACIONES = readString(dis,ois);
					
						this.CLASIFICACION = readString(dis,ois);
					
       			    	this.AUTORIZACION = (BigDecimal) ois.readObject();
					
       			    	this.SEXOS_ID = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
						this.ESTADO = readString(dis,objectIn);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.PADRE_ID = (BigDecimal) objectIn.readObject();
					
						this.SIGLA = readString(dis,objectIn);
					
						this.OBSERVACIONES = readString(dis,objectIn);
					
						this.CLASIFICACION = readString(dis,objectIn);
					
       			    	this.AUTORIZACION = (BigDecimal) objectIn.readObject();
					
       			    	this.SEXOS_ID = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
						writeString(this.ESTADO, dos, oos);
					
       			    	oos.writeObject(this.ESTREGISTRO_ID);
					
       			    	oos.writeObject(this.PADRE_ID);
					
						writeString(this.SIGLA, dos, oos);
					
						writeString(this.OBSERVACIONES, dos, oos);
					
						writeString(this.CLASIFICACION, dos, oos);
					
       			    	oos.writeObject(this.AUTORIZACION);
					
       			    	oos.writeObject(this.SEXOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						writeString(this.ESTADO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ESTREGISTRO_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.PADRE_ID);
					
						writeString(this.SIGLA, dos, objectOut);
					
						writeString(this.OBSERVACIONES, dos, objectOut);
					
						writeString(this.CLASIFICACION, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.AUTORIZACION);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.SEXOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",ESTREGISTRO_ID="+String.valueOf(ESTREGISTRO_ID));
		sb.append(",PADRE_ID="+String.valueOf(PADRE_ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",OBSERVACIONES="+OBSERVACIONES);
		sb.append(",CLASIFICACION="+CLASIFICACION);
		sb.append(",AUTORIZACION="+String.valueOf(AUTORIZACION));
		sb.append(",SEXOS_ID="+String.valueOf(SEXOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_44Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_44_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();




	
	/**
	 * [tAdvancedHash_row12 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row12", false);
		start_Hash.put("tAdvancedHash_row12", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tAdvancedHash_row12 = 0;
		

			   		// connection name:row12
			   		// source node:tOracleInput_44 - inputs:(after_tOracleInput_38) outputs:(row12,row12) | target node:tAdvancedHash_row12 - inputs:(row12) outputs:()
			   		// linked node: tMap_2 - inputs:(out2,row12) outputs:(out5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row12 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct> tHash_Lookup_row12 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row12Struct>getLookup(matchingModeEnum_row12);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row12", tHash_Lookup_row12);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row12 begin ] stop
 */



	
	/**
	 * [tOracleInput_44 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_44", false);
		start_Hash.put("tOracleInput_44", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_44";
	
	
		int tos_count_tOracleInput_44 = 0;
		
	


	
		    int nb_line_tOracleInput_44 = 0;
		    java.sql.Connection conn_tOracleInput_44 = null;
				conn_tOracleInput_44 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_44 = false;
				boolean isConnectionWrapped_tOracleInput_44 = !(conn_tOracleInput_44 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_44.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_44 = null;
                if (isConnectionWrapped_tOracleInput_44) {
					unwrappedOraConn_tOracleInput_44 = conn_tOracleInput_44.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_44 != null) {
                        isTimeZoneNull_tOracleInput_44 = (unwrappedOraConn_tOracleInput_44.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_44 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_44).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_44) {
					java.sql.Statement stmtGetTZ_tOracleInput_44 = conn_tOracleInput_44.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_44 = stmtGetTZ_tOracleInput_44.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_44 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_44.next()) {
						sessionTimezone_tOracleInput_44 = rsGetTZ_tOracleInput_44.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_44 && unwrappedOraConn_tOracleInput_44 != null) {
                        unwrappedOraConn_tOracleInput_44.setSessionTimeZone(sessionTimezone_tOracleInput_44);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_44).setSessionTimeZone(sessionTimezone_tOracleInput_44);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_44 = conn_tOracleInput_44.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_44.setFetchSize(1000);


		    String dbquery_tOracleInput_44 = "SELECT \n  "+context.db_origen_Schema+".GEN_ESPECIALIDADES.\"ID\", \n  "+context.db_origen_Schema+".GEN_ESPECIALIDADES.NOMBRE, \n  "+context.db_origen_Schema+".GEN_ESPECIALIDADES.ESTADO, \n  "+context.db_origen_Schema+".GEN_ESPECIALIDADES.ESTREGISTRO_ID, \n  "+context.db_origen_Schema+".GEN_ESPECIALIDADES.PADRE_ID, \n  "+context.db_origen_Schema+".GEN_ESPECIALIDADES.SIGLA, \n  "+context.db_origen_Schema+".GEN_ESPECIALIDADES.OBSERVACIONES, \n  "+context.db_origen_Schema+".GEN_ESPECIALIDADES.CLASIFICACION, \n  "+context.db_origen_Schema+".GEN_ESPECIALIDADES.AUTORIZACION, \n  "+context.db_origen_Schema+".GEN_ESPECIALIDADES.SEXOS_ID\nFROM "+context.db_origen_Schema+".GEN_ESPECIALIDADES";
		    

		    globalMap.put("tOracleInput_44_QUERY",dbquery_tOracleInput_44);

		    java.sql.ResultSet rs_tOracleInput_44 = null;

		    try {
		    	rs_tOracleInput_44 = stmt_tOracleInput_44.executeQuery(dbquery_tOracleInput_44);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_44 = rs_tOracleInput_44.getMetaData();
		    	int colQtyInRs_tOracleInput_44 = rsmd_tOracleInput_44.getColumnCount();

		    String tmpContent_tOracleInput_44 = null;
		    
		    
		    while (rs_tOracleInput_44.next()) {
		        nb_line_tOracleInput_44++;
		        
							if(colQtyInRs_tOracleInput_44 < 1) {
								row12.ID = null;
							} else {
		                          
					if(rs_tOracleInput_44.getObject(1) != null) {
						row12.ID = rs_tOracleInput_44.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_44 < 2) {
								row12.NOMBRE = null;
							} else {
	                         		
        	row12.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_44, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_44 < 3) {
								row12.ESTADO = null;
							} else {
	                         		
        	row12.ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_44, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_44 < 4) {
								row12.ESTREGISTRO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_44.getObject(4) != null) {
						row12.ESTREGISTRO_ID = rs_tOracleInput_44.getBigDecimal(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_44 < 5) {
								row12.PADRE_ID = null;
							} else {
		                          
					if(rs_tOracleInput_44.getObject(5) != null) {
						row12.PADRE_ID = rs_tOracleInput_44.getBigDecimal(5);
					} else {
				
						row12.PADRE_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_44 < 6) {
								row12.SIGLA = null;
							} else {
	                         		
        	row12.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_44, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_44 < 7) {
								row12.OBSERVACIONES = null;
							} else {
	                         		
        	row12.OBSERVACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_44, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_44 < 8) {
								row12.CLASIFICACION = null;
							} else {
	                         		
        	row12.CLASIFICACION = routines.system.JDBCUtil.getString(rs_tOracleInput_44, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_44 < 9) {
								row12.AUTORIZACION = null;
							} else {
		                          
					if(rs_tOracleInput_44.getObject(9) != null) {
						row12.AUTORIZACION = rs_tOracleInput_44.getBigDecimal(9);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_44 < 10) {
								row12.SEXOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_44.getObject(10) != null) {
						row12.SEXOS_ID = rs_tOracleInput_44.getBigDecimal(10);
					} else {
				
						row12.SEXOS_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_44 begin ] stop
 */
	
	/**
	 * [tOracleInput_44 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_44";
	
	

 


	tos_count_tOracleInput_44++;

/**
 * [tOracleInput_44 main ] stop
 */
	
	/**
	 * [tOracleInput_44 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_44";
	
	

 



/**
 * [tOracleInput_44 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row12 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					


			   
			   

					row12Struct row12_HashRow = new row12Struct();
		   	   	   
				
				row12_HashRow.ID = row12.ID;
				
				row12_HashRow.NOMBRE = row12.NOMBRE;
				
				row12_HashRow.ESTADO = row12.ESTADO;
				
				row12_HashRow.ESTREGISTRO_ID = row12.ESTREGISTRO_ID;
				
				row12_HashRow.PADRE_ID = row12.PADRE_ID;
				
				row12_HashRow.SIGLA = row12.SIGLA;
				
				row12_HashRow.OBSERVACIONES = row12.OBSERVACIONES;
				
				row12_HashRow.CLASIFICACION = row12.CLASIFICACION;
				
				row12_HashRow.AUTORIZACION = row12.AUTORIZACION;
				
				row12_HashRow.SEXOS_ID = row12.SEXOS_ID;
				
			tHash_Lookup_row12.put(row12_HashRow);
			
            




 


	tos_count_tAdvancedHash_row12++;

/**
 * [tAdvancedHash_row12 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row12";
	
	

 



/**
 * [tAdvancedHash_row12 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row12 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row12";
	
	

 



/**
 * [tAdvancedHash_row12 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_44 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_44";
	
	

 



/**
 * [tOracleInput_44 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_44 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_44";
	
	

}
}finally{
	if (rs_tOracleInput_44 != null) {
		rs_tOracleInput_44.close();
	}
	if (stmt_tOracleInput_44 != null) {
		stmt_tOracleInput_44.close();
	}
}

globalMap.put("tOracleInput_44_NB_LINE",nb_line_tOracleInput_44);
 

ok_Hash.put("tOracleInput_44", true);
end_Hash.put("tOracleInput_44", System.currentTimeMillis());




/**
 * [tOracleInput_44 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row12 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row12";
	
	

tHash_Lookup_row12.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row12", true);
end_Hash.put("tAdvancedHash_row12", System.currentTimeMillis());




/**
 * [tAdvancedHash_row12 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_44 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_44";
	
	

 



/**
 * [tOracleInput_44 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row12 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row12";
	
	

 



/**
 * [tAdvancedHash_row12 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_44_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableComparableLookupRow<row13Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public BigDecimal ESTREGISTRO_ID;

				public BigDecimal getESTREGISTRO_ID () {
					return this.ESTREGISTRO_ID;
				}

				public Boolean ESTREGISTRO_IDIsNullable(){
				    return false;
				}
				public Boolean ESTREGISTRO_IDIsKey(){
				    return false;
				}
				public Integer ESTREGISTRO_IDLength(){
				    return 0;
				}
				public Integer ESTREGISTRO_IDPrecision(){
				    return null;
				}
				public String ESTREGISTRO_IDDefault(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDComment(){
				
				    return "";
				
				}
				public String ESTREGISTRO_IDPattern(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDOriginalDbColumnName(){
				
					return "ESTREGISTRO_ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 5;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row13Struct other = (row13Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row13Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.ESTREGISTRO_ID = this.ESTREGISTRO_ID;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row13Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) ois.readObject();
					
						this.SIGLA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) objectIn.readObject();
					
						this.SIGLA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
       			    	oos.writeObject(this.ESTREGISTRO_ID);
					
						writeString(this.SIGLA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ESTREGISTRO_ID);
					
						writeString(this.SIGLA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",ESTREGISTRO_ID="+String.valueOf(ESTREGISTRO_ID));
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_26Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_26_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tAdvancedHash_row13 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row13", false);
		start_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tAdvancedHash_row13 = 0;
		

			   		// connection name:row13
			   		// source node:tOracleInput_26 - inputs:(after_tOracleInput_38) outputs:(row13,row13) | target node:tAdvancedHash_row13 - inputs:(row13) outputs:()
			   		// linked node: tMap_3 - inputs:(out5,row13) outputs:(out6)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row13 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row13Struct>getLookup(matchingModeEnum_row13);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row13", tHash_Lookup_row13);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row13 begin ] stop
 */



	
	/**
	 * [tOracleInput_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_26", false);
		start_Hash.put("tOracleInput_26", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_26";
	
	
		int tos_count_tOracleInput_26 = 0;
		
	


	
		    int nb_line_tOracleInput_26 = 0;
		    java.sql.Connection conn_tOracleInput_26 = null;
				conn_tOracleInput_26 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_26 = false;
				boolean isConnectionWrapped_tOracleInput_26 = !(conn_tOracleInput_26 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_26.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_26 = null;
                if (isConnectionWrapped_tOracleInput_26) {
					unwrappedOraConn_tOracleInput_26 = conn_tOracleInput_26.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_26 != null) {
                        isTimeZoneNull_tOracleInput_26 = (unwrappedOraConn_tOracleInput_26.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_26 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_26).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_26) {
					java.sql.Statement stmtGetTZ_tOracleInput_26 = conn_tOracleInput_26.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_26 = stmtGetTZ_tOracleInput_26.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_26 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_26.next()) {
						sessionTimezone_tOracleInput_26 = rsGetTZ_tOracleInput_26.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_26 && unwrappedOraConn_tOracleInput_26 != null) {
                        unwrappedOraConn_tOracleInput_26.setSessionTimeZone(sessionTimezone_tOracleInput_26);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_26).setSessionTimeZone(sessionTimezone_tOracleInput_26);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_26 = conn_tOracleInput_26.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_26.setFetchSize(1000);


		    String dbquery_tOracleInput_26 = "SELECT \n  "+context.db_origen_Schema+".GEN_TFORMULAS.\"ID\", \n  "+context.db_origen_Schema+".GEN_TFORMULAS.NOMBRE, \n  "+context.db_origen_Schema+".GEN_TFORMULAS.ESTREGISTRO_ID, \n  "+context.db_origen_Schema+".GEN_TFORMULAS.SIGLA\nFROM "+context.db_origen_Schema+".GEN_TFORMULAS";
		    

		    globalMap.put("tOracleInput_26_QUERY",dbquery_tOracleInput_26);

		    java.sql.ResultSet rs_tOracleInput_26 = null;

		    try {
		    	rs_tOracleInput_26 = stmt_tOracleInput_26.executeQuery(dbquery_tOracleInput_26);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_26 = rs_tOracleInput_26.getMetaData();
		    	int colQtyInRs_tOracleInput_26 = rsmd_tOracleInput_26.getColumnCount();

		    String tmpContent_tOracleInput_26 = null;
		    
		    
		    while (rs_tOracleInput_26.next()) {
		        nb_line_tOracleInput_26++;
		        
							if(colQtyInRs_tOracleInput_26 < 1) {
								row13.ID = null;
							} else {
		                          
					if(rs_tOracleInput_26.getObject(1) != null) {
						row13.ID = rs_tOracleInput_26.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_26 < 2) {
								row13.NOMBRE = null;
							} else {
	                         		
        	row13.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_26, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_26 < 3) {
								row13.ESTREGISTRO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_26.getObject(3) != null) {
						row13.ESTREGISTRO_ID = rs_tOracleInput_26.getBigDecimal(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_26 < 4) {
								row13.SIGLA = null;
							} else {
	                         		
        	row13.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_26, 4, false);
		                    }
					




 



/**
 * [tOracleInput_26 begin ] stop
 */
	
	/**
	 * [tOracleInput_26 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 


	tos_count_tOracleInput_26++;

/**
 * [tOracleInput_26 main ] stop
 */
	
	/**
	 * [tOracleInput_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					


			   
			   

					row13Struct row13_HashRow = new row13Struct();
		   	   	   
				
				row13_HashRow.ID = row13.ID;
				
				row13_HashRow.NOMBRE = row13.NOMBRE;
				
				row13_HashRow.ESTREGISTRO_ID = row13.ESTREGISTRO_ID;
				
				row13_HashRow.SIGLA = row13.SIGLA;
				
			tHash_Lookup_row13.put(row13_HashRow);
			
            




 


	tos_count_tAdvancedHash_row13++;

/**
 * [tAdvancedHash_row13 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_26 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

}
}finally{
	if (rs_tOracleInput_26 != null) {
		rs_tOracleInput_26.close();
	}
	if (stmt_tOracleInput_26 != null) {
		stmt_tOracleInput_26.close();
	}
}

globalMap.put("tOracleInput_26_NB_LINE",nb_line_tOracleInput_26);
 

ok_Hash.put("tOracleInput_26", true);
end_Hash.put("tOracleInput_26", System.currentTimeMillis());




/**
 * [tOracleInput_26 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

tHash_Lookup_row13.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row13", true);
end_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());




/**
 * [tAdvancedHash_row13 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_26 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_26_SUBPROCESS_STATE", 1);
	}
	


public static class row14Struct implements routines.system.IPersistableComparableLookupRow<row14Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public BigDecimal ESTREGISTRO_ID;

				public BigDecimal getESTREGISTRO_ID () {
					return this.ESTREGISTRO_ID;
				}

				public Boolean ESTREGISTRO_IDIsNullable(){
				    return false;
				}
				public Boolean ESTREGISTRO_IDIsKey(){
				    return false;
				}
				public Integer ESTREGISTRO_IDLength(){
				    return 0;
				}
				public Integer ESTREGISTRO_IDPrecision(){
				    return null;
				}
				public String ESTREGISTRO_IDDefault(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDComment(){
				
				    return "";
				
				}
				public String ESTREGISTRO_IDPattern(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDOriginalDbColumnName(){
				
					return "ESTREGISTRO_ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row14Struct other = (row14Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row14Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.ESTREGISTRO_ID = this.ESTREGISTRO_ID;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row14Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) ois.readObject();
					
						this.SIGLA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) objectIn.readObject();
					
						this.SIGLA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
       			    	oos.writeObject(this.ESTREGISTRO_ID);
					
						writeString(this.SIGLA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ESTREGISTRO_ID);
					
						writeString(this.SIGLA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",ESTREGISTRO_ID="+String.valueOf(ESTREGISTRO_ID));
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_51Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_51_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();




	
	/**
	 * [tAdvancedHash_row14 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row14", false);
		start_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tAdvancedHash_row14 = 0;
		

			   		// connection name:row14
			   		// source node:tOracleInput_51 - inputs:(after_tOracleInput_38) outputs:(row14,row14) | target node:tAdvancedHash_row14 - inputs:(row14) outputs:()
			   		// linked node: tMap_7 - inputs:(out6,row14) outputs:(out7)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row14 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row14Struct>getLookup(matchingModeEnum_row14);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row14", tHash_Lookup_row14);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row14 begin ] stop
 */



	
	/**
	 * [tOracleInput_51 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_51", false);
		start_Hash.put("tOracleInput_51", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_51";
	
	
		int tos_count_tOracleInput_51 = 0;
		
	


	
		    int nb_line_tOracleInput_51 = 0;
		    java.sql.Connection conn_tOracleInput_51 = null;
				conn_tOracleInput_51 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_51 = false;
				boolean isConnectionWrapped_tOracleInput_51 = !(conn_tOracleInput_51 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_51.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_51 = null;
                if (isConnectionWrapped_tOracleInput_51) {
					unwrappedOraConn_tOracleInput_51 = conn_tOracleInput_51.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_51 != null) {
                        isTimeZoneNull_tOracleInput_51 = (unwrappedOraConn_tOracleInput_51.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_51 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_51).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_51) {
					java.sql.Statement stmtGetTZ_tOracleInput_51 = conn_tOracleInput_51.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_51 = stmtGetTZ_tOracleInput_51.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_51 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_51.next()) {
						sessionTimezone_tOracleInput_51 = rsGetTZ_tOracleInput_51.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_51 && unwrappedOraConn_tOracleInput_51 != null) {
                        unwrappedOraConn_tOracleInput_51.setSessionTimeZone(sessionTimezone_tOracleInput_51);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_51).setSessionTimeZone(sessionTimezone_tOracleInput_51);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_51 = conn_tOracleInput_51.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_51.setFetchSize(1000);


		    String dbquery_tOracleInput_51 = "SELECT \n  "+context.db_origen_Schema+".RCA_TORIGEN.\"ID\", \n  "+context.db_origen_Schema+".RCA_TORIGEN.NOMBRE, \n  "+context.db_origen_Schema+".RCA_TORIGEN.ESTREGISTRO_ID, \n  "+context.db_origen_Schema+".RCA_TORIGEN.SIGLA\nFROM "+context.db_origen_Schema+".RCA_TORIGEN";
		    

		    globalMap.put("tOracleInput_51_QUERY",dbquery_tOracleInput_51);

		    java.sql.ResultSet rs_tOracleInput_51 = null;

		    try {
		    	rs_tOracleInput_51 = stmt_tOracleInput_51.executeQuery(dbquery_tOracleInput_51);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_51 = rs_tOracleInput_51.getMetaData();
		    	int colQtyInRs_tOracleInput_51 = rsmd_tOracleInput_51.getColumnCount();

		    String tmpContent_tOracleInput_51 = null;
		    
		    
		    while (rs_tOracleInput_51.next()) {
		        nb_line_tOracleInput_51++;
		        
							if(colQtyInRs_tOracleInput_51 < 1) {
								row14.ID = null;
							} else {
		                          
					if(rs_tOracleInput_51.getObject(1) != null) {
						row14.ID = rs_tOracleInput_51.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_51 < 2) {
								row14.NOMBRE = null;
							} else {
	                         		
        	row14.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_51, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_51 < 3) {
								row14.ESTREGISTRO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_51.getObject(3) != null) {
						row14.ESTREGISTRO_ID = rs_tOracleInput_51.getBigDecimal(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_51 < 4) {
								row14.SIGLA = null;
							} else {
	                         		
        	row14.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_51, 4, false);
		                    }
					




 



/**
 * [tOracleInput_51 begin ] stop
 */
	
	/**
	 * [tOracleInput_51 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_51";
	
	

 


	tos_count_tOracleInput_51++;

/**
 * [tOracleInput_51 main ] stop
 */
	
	/**
	 * [tOracleInput_51 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_51";
	
	

 



/**
 * [tOracleInput_51 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					


			   
			   

					row14Struct row14_HashRow = new row14Struct();
		   	   	   
				
				row14_HashRow.ID = row14.ID;
				
				row14_HashRow.NOMBRE = row14.NOMBRE;
				
				row14_HashRow.ESTREGISTRO_ID = row14.ESTREGISTRO_ID;
				
				row14_HashRow.SIGLA = row14.SIGLA;
				
			tHash_Lookup_row14.put(row14_HashRow);
			
            




 


	tos_count_tAdvancedHash_row14++;

/**
 * [tAdvancedHash_row14 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_51 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_51";
	
	

 



/**
 * [tOracleInput_51 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_51 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_51";
	
	

}
}finally{
	if (rs_tOracleInput_51 != null) {
		rs_tOracleInput_51.close();
	}
	if (stmt_tOracleInput_51 != null) {
		stmt_tOracleInput_51.close();
	}
}

globalMap.put("tOracleInput_51_NB_LINE",nb_line_tOracleInput_51);
 

ok_Hash.put("tOracleInput_51", true);
end_Hash.put("tOracleInput_51", System.currentTimeMillis());




/**
 * [tOracleInput_51 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

tHash_Lookup_row14.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row14", true);
end_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());




/**
 * [tAdvancedHash_row14 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_51 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_51";
	
	

 



/**
 * [tOracleInput_51 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_51_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableComparableLookupRow<row15Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal FORMASFARMACEUTICAS_ID;

				public BigDecimal getFORMASFARMACEUTICAS_ID () {
					return this.FORMASFARMACEUTICAS_ID;
				}

				public Boolean FORMASFARMACEUTICAS_IDIsNullable(){
				    return false;
				}
				public Boolean FORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer FORMASFARMACEUTICAS_IDLength(){
				    return 0;
				}
				public Integer FORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String FORMASFARMACEUTICAS_IDDefault(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String FORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String FORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "FORMASFARMACEUTICAS_ID";
				
				}

				
			    public BigDecimal DACUERDOS_ID;

				public BigDecimal getDACUERDOS_ID () {
					return this.DACUERDOS_ID;
				}

				public Boolean DACUERDOS_IDIsNullable(){
				    return false;
				}
				public Boolean DACUERDOS_IDIsKey(){
				    return false;
				}
				public Integer DACUERDOS_IDLength(){
				    return 0;
				}
				public Integer DACUERDOS_IDPrecision(){
				    return null;
				}
				public String DACUERDOS_IDDefault(){
				
					return "";
				
				}
				public String DACUERDOS_IDComment(){
				
				    return "";
				
				}
				public String DACUERDOS_IDPattern(){
				
					return "";
				
				}
				public String DACUERDOS_IDOriginalDbColumnName(){
				
					return "DACUERDOS_ID";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 15;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NIVEL_ATENCION;

				public String getNIVEL_ATENCION () {
					return this.NIVEL_ATENCION;
				}

				public Boolean NIVEL_ATENCIONIsNullable(){
				    return true;
				}
				public Boolean NIVEL_ATENCIONIsKey(){
				    return false;
				}
				public Integer NIVEL_ATENCIONLength(){
				    return 50;
				}
				public Integer NIVEL_ATENCIONPrecision(){
				    return 0;
				}
				public String NIVEL_ATENCIONDefault(){
				
					return null;
				
				}
				public String NIVEL_ATENCIONComment(){
				
				    return "";
				
				}
				public String NIVEL_ATENCIONPattern(){
				
					return "";
				
				}
				public String NIVEL_ATENCIONOriginalDbColumnName(){
				
					return "NIVEL_ATENCION";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.FORMASFARMACEUTICAS_ID == null) ? 0 : this.FORMASFARMACEUTICAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row15Struct other = (row15Struct) obj;
		
						if (this.FORMASFARMACEUTICAS_ID == null) {
							if (other.FORMASFARMACEUTICAS_ID != null)
								return false;
						
						} else if (!this.FORMASFARMACEUTICAS_ID.equals(other.FORMASFARMACEUTICAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row15Struct other) {

		other.FORMASFARMACEUTICAS_ID = this.FORMASFARMACEUTICAS_ID;
	            other.DACUERDOS_ID = this.DACUERDOS_ID;
	            other.CODIGO_SSMP = this.CODIGO_SSMP;
	            other.NIVEL_ATENCION = this.NIVEL_ATENCION;
	            
	}

	public void copyKeysDataTo(row15Struct other) {

		other.FORMASFARMACEUTICAS_ID = this.FORMASFARMACEUTICAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.FORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FORMASFARMACEUTICAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.DACUERDOS_ID = (BigDecimal) ois.readObject();
					
						this.CODIGO_SSMP = readString(dis,ois);
					
						this.NIVEL_ATENCION = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.DACUERDOS_ID = (BigDecimal) objectIn.readObject();
					
						this.CODIGO_SSMP = readString(dis,objectIn);
					
						this.NIVEL_ATENCION = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.DACUERDOS_ID);
					
						writeString(this.CODIGO_SSMP, dos, oos);
					
						writeString(this.NIVEL_ATENCION, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.DACUERDOS_ID);
					
						writeString(this.CODIGO_SSMP, dos, objectOut);
					
						writeString(this.NIVEL_ATENCION, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FORMASFARMACEUTICAS_ID="+String.valueOf(FORMASFARMACEUTICAS_ID));
		sb.append(",DACUERDOS_ID="+String.valueOf(DACUERDOS_ID));
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NIVEL_ATENCION="+NIVEL_ATENCION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.FORMASFARMACEUTICAS_ID, other.FORMASFARMACEUTICAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_29Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_29_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();




	
	/**
	 * [tAdvancedHash_row15 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row15", false);
		start_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tAdvancedHash_row15 = 0;
		

			   		// connection name:row15
			   		// source node:tOracleInput_29 - inputs:(after_tOracleInput_38) outputs:(row15,row15) | target node:tAdvancedHash_row15 - inputs:(row15) outputs:()
			   		// linked node: tMap_8 - inputs:(out7,row15) outputs:(out8)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row15 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row15Struct>getLookup(matchingModeEnum_row15);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row15", tHash_Lookup_row15);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row15 begin ] stop
 */



	
	/**
	 * [tOracleInput_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_29", false);
		start_Hash.put("tOracleInput_29", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_29";
	
	
		int tos_count_tOracleInput_29 = 0;
		
	


	
		    int nb_line_tOracleInput_29 = 0;
		    java.sql.Connection conn_tOracleInput_29 = null;
				conn_tOracleInput_29 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_29 = false;
				boolean isConnectionWrapped_tOracleInput_29 = !(conn_tOracleInput_29 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_29.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_29 = null;
                if (isConnectionWrapped_tOracleInput_29) {
					unwrappedOraConn_tOracleInput_29 = conn_tOracleInput_29.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_29 != null) {
                        isTimeZoneNull_tOracleInput_29 = (unwrappedOraConn_tOracleInput_29.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_29 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_29).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_29) {
					java.sql.Statement stmtGetTZ_tOracleInput_29 = conn_tOracleInput_29.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_29 = stmtGetTZ_tOracleInput_29.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_29 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_29.next()) {
						sessionTimezone_tOracleInput_29 = rsGetTZ_tOracleInput_29.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_29 && unwrappedOraConn_tOracleInput_29 != null) {
                        unwrappedOraConn_tOracleInput_29.setSessionTimeZone(sessionTimezone_tOracleInput_29);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_29).setSessionTimeZone(sessionTimezone_tOracleInput_29);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_29 = conn_tOracleInput_29.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_29.setFetchSize(1000);


		    String dbquery_tOracleInput_29 = "  SELECT \n    dacueforma.formasfarmaceuticas_id \n    , dacueforma.dacuerdos_id as dAcuerdos_Id\n    , nvl(dacuerdo.co"
+"dssmp, ' ') as CODIGO_SSMP\n    , nvl(natencion.nombre, ' ') AS NIVEL_ATENCION\n  FROM med_dacuerdosformas dacueforma \n"
+"  LEFT JOIN med_dacuerdos dacuerdo  on dacuerdo.id = dacueforma.dacuerdos_id  and dacuerdo.estado = 'Activo'  \n  LEFT J"
+"OIN med_natencion natencion on natencion.id = dacuerdo.natencion_id\n  WHERE dacuerdo.ESTREGISTRO_ID = 1 ";
		    

		    globalMap.put("tOracleInput_29_QUERY",dbquery_tOracleInput_29);

		    java.sql.ResultSet rs_tOracleInput_29 = null;

		    try {
		    	rs_tOracleInput_29 = stmt_tOracleInput_29.executeQuery(dbquery_tOracleInput_29);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_29 = rs_tOracleInput_29.getMetaData();
		    	int colQtyInRs_tOracleInput_29 = rsmd_tOracleInput_29.getColumnCount();

		    String tmpContent_tOracleInput_29 = null;
		    
		    
		    while (rs_tOracleInput_29.next()) {
		        nb_line_tOracleInput_29++;
		        
							if(colQtyInRs_tOracleInput_29 < 1) {
								row15.FORMASFARMACEUTICAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(1) != null) {
						row15.FORMASFARMACEUTICAS_ID = rs_tOracleInput_29.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 2) {
								row15.DACUERDOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(2) != null) {
						row15.DACUERDOS_ID = rs_tOracleInput_29.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 3) {
								row15.CODIGO_SSMP = null;
							} else {
	                         		
        	row15.CODIGO_SSMP = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 4) {
								row15.NIVEL_ATENCION = null;
							} else {
	                         		
        	row15.NIVEL_ATENCION = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 4, false);
		                    }
					




 



/**
 * [tOracleInput_29 begin ] stop
 */
	
	/**
	 * [tOracleInput_29 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 


	tos_count_tOracleInput_29++;

/**
 * [tOracleInput_29 main ] stop
 */
	
	/**
	 * [tOracleInput_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					


			   
			   

					row15Struct row15_HashRow = new row15Struct();
		   	   	   
				
				row15_HashRow.FORMASFARMACEUTICAS_ID = row15.FORMASFARMACEUTICAS_ID;
				
				row15_HashRow.DACUERDOS_ID = row15.DACUERDOS_ID;
				
				row15_HashRow.CODIGO_SSMP = row15.CODIGO_SSMP;
				
				row15_HashRow.NIVEL_ATENCION = row15.NIVEL_ATENCION;
				
			tHash_Lookup_row15.put(row15_HashRow);
			
            




 


	tos_count_tAdvancedHash_row15++;

/**
 * [tAdvancedHash_row15 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_29 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

}
}finally{
	if (rs_tOracleInput_29 != null) {
		rs_tOracleInput_29.close();
	}
	if (stmt_tOracleInput_29 != null) {
		stmt_tOracleInput_29.close();
	}
}

globalMap.put("tOracleInput_29_NB_LINE",nb_line_tOracleInput_29);
 

ok_Hash.put("tOracleInput_29", true);
end_Hash.put("tOracleInput_29", System.currentTimeMillis());




/**
 * [tOracleInput_29 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

tHash_Lookup_row15.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row15", true);
end_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());




/**
 * [tAdvancedHash_row15 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_29 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_29_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableComparableLookupRow<row16Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 10;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String MEDIBLE;

				public String getMEDIBLE () {
					return this.MEDIBLE;
				}

				public Boolean MEDIBLEIsNullable(){
				    return true;
				}
				public Boolean MEDIBLEIsKey(){
				    return false;
				}
				public Integer MEDIBLELength(){
				    return 2;
				}
				public Integer MEDIBLEPrecision(){
				    return 0;
				}
				public String MEDIBLEDefault(){
				
					return null;
				
				}
				public String MEDIBLEComment(){
				
				    return "";
				
				}
				public String MEDIBLEPattern(){
				
					return "";
				
				}
				public String MEDIBLEOriginalDbColumnName(){
				
					return "MEDIBLE";
				
				}

				
			    public BigDecimal ESTREGISTRO_ID;

				public BigDecimal getESTREGISTRO_ID () {
					return this.ESTREGISTRO_ID;
				}

				public Boolean ESTREGISTRO_IDIsNullable(){
				    return false;
				}
				public Boolean ESTREGISTRO_IDIsKey(){
				    return false;
				}
				public Integer ESTREGISTRO_IDLength(){
				    return 0;
				}
				public Integer ESTREGISTRO_IDPrecision(){
				    return null;
				}
				public String ESTREGISTRO_IDDefault(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDComment(){
				
				    return "";
				
				}
				public String ESTREGISTRO_IDPattern(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDOriginalDbColumnName(){
				
					return "ESTREGISTRO_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row16Struct other = (row16Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row16Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            other.MEDIBLE = this.MEDIBLE;
	            other.ESTREGISTRO_ID = this.ESTREGISTRO_ID;
	            
	}

	public void copyKeysDataTo(row16Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
						this.SIGLA = readString(dis,ois);
					
						this.MEDIBLE = readString(dis,ois);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
						this.SIGLA = readString(dis,objectIn);
					
						this.MEDIBLE = readString(dis,objectIn);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
						writeString(this.SIGLA, dos, oos);
					
						writeString(this.MEDIBLE, dos, oos);
					
       			    	oos.writeObject(this.ESTREGISTRO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						writeString(this.SIGLA, dos, objectOut);
					
						writeString(this.MEDIBLE, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ESTREGISTRO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
		sb.append(",MEDIBLE="+MEDIBLE);
		sb.append(",ESTREGISTRO_ID="+String.valueOf(ESTREGISTRO_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_28Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_28_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tAdvancedHash_row16 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row16", false);
		start_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tAdvancedHash_row16 = 0;
		

			   		// connection name:row16
			   		// source node:tOracleInput_28 - inputs:(after_tOracleInput_38) outputs:(row16,row16) | target node:tAdvancedHash_row16 - inputs:(row16) outputs:()
			   		// linked node: tMap_9 - inputs:(out8,row16) outputs:(out9)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row16 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row16Struct>getLookup(matchingModeEnum_row16);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row16", tHash_Lookup_row16);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row16 begin ] stop
 */



	
	/**
	 * [tOracleInput_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_28", false);
		start_Hash.put("tOracleInput_28", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_28";
	
	
		int tos_count_tOracleInput_28 = 0;
		
	


	
		    int nb_line_tOracleInput_28 = 0;
		    java.sql.Connection conn_tOracleInput_28 = null;
				conn_tOracleInput_28 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_28 = false;
				boolean isConnectionWrapped_tOracleInput_28 = !(conn_tOracleInput_28 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_28.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_28 = null;
                if (isConnectionWrapped_tOracleInput_28) {
					unwrappedOraConn_tOracleInput_28 = conn_tOracleInput_28.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_28 != null) {
                        isTimeZoneNull_tOracleInput_28 = (unwrappedOraConn_tOracleInput_28.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_28 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_28).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_28) {
					java.sql.Statement stmtGetTZ_tOracleInput_28 = conn_tOracleInput_28.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_28 = stmtGetTZ_tOracleInput_28.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_28 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_28.next()) {
						sessionTimezone_tOracleInput_28 = rsGetTZ_tOracleInput_28.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_28 && unwrappedOraConn_tOracleInput_28 != null) {
                        unwrappedOraConn_tOracleInput_28.setSessionTimeZone(sessionTimezone_tOracleInput_28);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_28).setSessionTimeZone(sessionTimezone_tOracleInput_28);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_28 = conn_tOracleInput_28.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_28.setFetchSize(1000);


		    String dbquery_tOracleInput_28 = "SELECT \n  "+context.db_origen_Schema+".MED_TFORMASFARMACEUTICAS.\"ID\", \n  "+context.db_origen_Schema+".MED_TFORMASFARMACEUTICAS.NOMBRE, \n  "+context.db_origen_Schema+".MED_TFORMASFARMACEUTICAS.SIGLA, \n  "+context.db_origen_Schema+".MED_TFORMASFARMACEUTICAS.MEDIBLE, \n  "+context.db_origen_Schema+".MED_TFORMASFARMACEUTICAS.ESTREGISTRO_ID\nFROM "+context.db_origen_Schema+".MED_TFORMASFARMACEUTICAS";
		    

		    globalMap.put("tOracleInput_28_QUERY",dbquery_tOracleInput_28);

		    java.sql.ResultSet rs_tOracleInput_28 = null;

		    try {
		    	rs_tOracleInput_28 = stmt_tOracleInput_28.executeQuery(dbquery_tOracleInput_28);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_28 = rs_tOracleInput_28.getMetaData();
		    	int colQtyInRs_tOracleInput_28 = rsmd_tOracleInput_28.getColumnCount();

		    String tmpContent_tOracleInput_28 = null;
		    
		    
		    while (rs_tOracleInput_28.next()) {
		        nb_line_tOracleInput_28++;
		        
							if(colQtyInRs_tOracleInput_28 < 1) {
								row16.ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(1) != null) {
						row16.ID = rs_tOracleInput_28.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 2) {
								row16.NOMBRE = null;
							} else {
	                         		
        	row16.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_28 < 3) {
								row16.SIGLA = null;
							} else {
	                         		
        	row16.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_28 < 4) {
								row16.MEDIBLE = null;
							} else {
	                         		
        	row16.MEDIBLE = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_28 < 5) {
								row16.ESTREGISTRO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(5) != null) {
						row16.ESTREGISTRO_ID = rs_tOracleInput_28.getBigDecimal(5);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_28 begin ] stop
 */
	
	/**
	 * [tOracleInput_28 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 


	tos_count_tOracleInput_28++;

/**
 * [tOracleInput_28 main ] stop
 */
	
	/**
	 * [tOracleInput_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					


			   
			   

					row16Struct row16_HashRow = new row16Struct();
		   	   	   
				
				row16_HashRow.ID = row16.ID;
				
				row16_HashRow.NOMBRE = row16.NOMBRE;
				
				row16_HashRow.SIGLA = row16.SIGLA;
				
				row16_HashRow.MEDIBLE = row16.MEDIBLE;
				
				row16_HashRow.ESTREGISTRO_ID = row16.ESTREGISTRO_ID;
				
			tHash_Lookup_row16.put(row16_HashRow);
			
            




 


	tos_count_tAdvancedHash_row16++;

/**
 * [tAdvancedHash_row16 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_28 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

}
}finally{
	if (rs_tOracleInput_28 != null) {
		rs_tOracleInput_28.close();
	}
	if (stmt_tOracleInput_28 != null) {
		stmt_tOracleInput_28.close();
	}
}

globalMap.put("tOracleInput_28_NB_LINE",nb_line_tOracleInput_28);
 

ok_Hash.put("tOracleInput_28", true);
end_Hash.put("tOracleInput_28", System.currentTimeMillis());




/**
 * [tOracleInput_28 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

tHash_Lookup_row16.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row16", true);
end_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());




/**
 * [tAdvancedHash_row16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_28 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_28_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableComparableLookupRow<row17Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal DACUERDOS_ID;

				public BigDecimal getDACUERDOS_ID () {
					return this.DACUERDOS_ID;
				}

				public Boolean DACUERDOS_IDIsNullable(){
				    return false;
				}
				public Boolean DACUERDOS_IDIsKey(){
				    return false;
				}
				public Integer DACUERDOS_IDLength(){
				    return 0;
				}
				public Integer DACUERDOS_IDPrecision(){
				    return null;
				}
				public String DACUERDOS_IDDefault(){
				
					return "";
				
				}
				public String DACUERDOS_IDComment(){
				
				    return "";
				
				}
				public String DACUERDOS_IDPattern(){
				
					return "";
				
				}
				public String DACUERDOS_IDOriginalDbColumnName(){
				
					return "DACUERDOS_ID";
				
				}

				
			    public String NIVELES_USO;

				public String getNIVELES_USO () {
					return this.NIVELES_USO;
				}

				public Boolean NIVELES_USOIsNullable(){
				    return true;
				}
				public Boolean NIVELES_USOIsKey(){
				    return false;
				}
				public Integer NIVELES_USOLength(){
				    return 4000;
				}
				public Integer NIVELES_USOPrecision(){
				    return 0;
				}
				public String NIVELES_USODefault(){
				
					return null;
				
				}
				public String NIVELES_USOComment(){
				
				    return "";
				
				}
				public String NIVELES_USOPattern(){
				
					return "";
				
				}
				public String NIVELES_USOOriginalDbColumnName(){
				
					return "NIVELES_USO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.DACUERDOS_ID == null) ? 0 : this.DACUERDOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row17Struct other = (row17Struct) obj;
		
						if (this.DACUERDOS_ID == null) {
							if (other.DACUERDOS_ID != null)
								return false;
						
						} else if (!this.DACUERDOS_ID.equals(other.DACUERDOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row17Struct other) {

		other.DACUERDOS_ID = this.DACUERDOS_ID;
	            other.NIVELES_USO = this.NIVELES_USO;
	            
	}

	public void copyKeysDataTo(row17Struct other) {

		other.DACUERDOS_ID = this.DACUERDOS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DACUERDOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DACUERDOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DACUERDOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DACUERDOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NIVELES_USO = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NIVELES_USO = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NIVELES_USO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NIVELES_USO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DACUERDOS_ID="+String.valueOf(DACUERDOS_ID));
		sb.append(",NIVELES_USO="+NIVELES_USO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.DACUERDOS_ID, other.DACUERDOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_52Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_52_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();




	
	/**
	 * [tAdvancedHash_row17 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row17", false);
		start_Hash.put("tAdvancedHash_row17", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tAdvancedHash_row17 = 0;
		

			   		// connection name:row17
			   		// source node:tOracleInput_52 - inputs:(after_tOracleInput_38) outputs:(row17,row17) | target node:tAdvancedHash_row17 - inputs:(row17) outputs:()
			   		// linked node: tMap_10 - inputs:(out9,row17) outputs:(out10)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row17 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct> tHash_Lookup_row17 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row17Struct>getLookup(matchingModeEnum_row17);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row17", tHash_Lookup_row17);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row17 begin ] stop
 */



	
	/**
	 * [tOracleInput_52 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_52", false);
		start_Hash.put("tOracleInput_52", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_52";
	
	
		int tos_count_tOracleInput_52 = 0;
		
	


	
		    int nb_line_tOracleInput_52 = 0;
		    java.sql.Connection conn_tOracleInput_52 = null;
				conn_tOracleInput_52 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_52 = false;
				boolean isConnectionWrapped_tOracleInput_52 = !(conn_tOracleInput_52 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_52.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_52 = null;
                if (isConnectionWrapped_tOracleInput_52) {
					unwrappedOraConn_tOracleInput_52 = conn_tOracleInput_52.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_52 != null) {
                        isTimeZoneNull_tOracleInput_52 = (unwrappedOraConn_tOracleInput_52.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_52 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_52).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_52) {
					java.sql.Statement stmtGetTZ_tOracleInput_52 = conn_tOracleInput_52.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_52 = stmtGetTZ_tOracleInput_52.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_52 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_52.next()) {
						sessionTimezone_tOracleInput_52 = rsGetTZ_tOracleInput_52.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_52 && unwrappedOraConn_tOracleInput_52 != null) {
                        unwrappedOraConn_tOracleInput_52.setSessionTimeZone(sessionTimezone_tOracleInput_52);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_52).setSessionTimeZone(sessionTimezone_tOracleInput_52);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_52 = conn_tOracleInput_52.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_52.setFetchSize(1000);


		    String dbquery_tOracleInput_52 = "SELECT niv.dacuerdos_id, LISTAGG(tniv.sigla, '; ') WITHIN GROUP(ORDER BY tniv.sigla) AS NIVELES_USO\nFROM med_nivelesus"
+"o niv\nINNER JOIN med_tnivelesuso tniv ON tniv.id = niv.tnivelesuso_id\nWHERE niv.estado = 'Activo'\nGROUP BY niv.dacuer"
+"dos_id";
		    

		    globalMap.put("tOracleInput_52_QUERY",dbquery_tOracleInput_52);

		    java.sql.ResultSet rs_tOracleInput_52 = null;

		    try {
		    	rs_tOracleInput_52 = stmt_tOracleInput_52.executeQuery(dbquery_tOracleInput_52);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_52 = rs_tOracleInput_52.getMetaData();
		    	int colQtyInRs_tOracleInput_52 = rsmd_tOracleInput_52.getColumnCount();

		    String tmpContent_tOracleInput_52 = null;
		    
		    
		    while (rs_tOracleInput_52.next()) {
		        nb_line_tOracleInput_52++;
		        
							if(colQtyInRs_tOracleInput_52 < 1) {
								row17.DACUERDOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_52.getObject(1) != null) {
						row17.DACUERDOS_ID = rs_tOracleInput_52.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_52 < 2) {
								row17.NIVELES_USO = null;
							} else {
	                         		
        	row17.NIVELES_USO = routines.system.JDBCUtil.getString(rs_tOracleInput_52, 2, false);
		                    }
					




 



/**
 * [tOracleInput_52 begin ] stop
 */
	
	/**
	 * [tOracleInput_52 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_52";
	
	

 


	tos_count_tOracleInput_52++;

/**
 * [tOracleInput_52 main ] stop
 */
	
	/**
	 * [tOracleInput_52 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_52";
	
	

 



/**
 * [tOracleInput_52 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row17 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					


			   
			   

					row17Struct row17_HashRow = new row17Struct();
		   	   	   
				
				row17_HashRow.DACUERDOS_ID = row17.DACUERDOS_ID;
				
				row17_HashRow.NIVELES_USO = row17.NIVELES_USO;
				
			tHash_Lookup_row17.put(row17_HashRow);
			
            




 


	tos_count_tAdvancedHash_row17++;

/**
 * [tAdvancedHash_row17 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

 



/**
 * [tAdvancedHash_row17 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row17 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

 



/**
 * [tAdvancedHash_row17 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_52 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_52";
	
	

 



/**
 * [tOracleInput_52 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_52 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_52";
	
	

}
}finally{
	if (rs_tOracleInput_52 != null) {
		rs_tOracleInput_52.close();
	}
	if (stmt_tOracleInput_52 != null) {
		stmt_tOracleInput_52.close();
	}
}

globalMap.put("tOracleInput_52_NB_LINE",nb_line_tOracleInput_52);
 

ok_Hash.put("tOracleInput_52", true);
end_Hash.put("tOracleInput_52", System.currentTimeMillis());




/**
 * [tOracleInput_52 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row17 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

tHash_Lookup_row17.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row17", true);
end_Hash.put("tAdvancedHash_row17", System.currentTimeMillis());




/**
 * [tAdvancedHash_row17 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_52 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_52";
	
	

 



/**
 * [tOracleInput_52 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row17 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

 



/**
 * [tAdvancedHash_row17 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_52_SUBPROCESS_STATE", 1);
	}
	


public static class row1Struct implements routines.system.IPersistableComparableLookupRow<row1Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GENERICOS_ID;

				public BigDecimal getGENERICOS_ID () {
					return this.GENERICOS_ID;
				}

				public Boolean GENERICOS_IDIsNullable(){
				    return false;
				}
				public Boolean GENERICOS_IDIsKey(){
				    return false;
				}
				public Integer GENERICOS_IDLength(){
				    return 0;
				}
				public Integer GENERICOS_IDPrecision(){
				    return null;
				}
				public String GENERICOS_IDDefault(){
				
					return "";
				
				}
				public String GENERICOS_IDComment(){
				
				    return "";
				
				}
				public String GENERICOS_IDPattern(){
				
					return "";
				
				}
				public String GENERICOS_IDOriginalDbColumnName(){
				
					return "GENERICOS_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 20;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 200;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String DESCRIPCION;

				public String getDESCRIPCION () {
					return this.DESCRIPCION;
				}

				public Boolean DESCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCIONIsKey(){
				    return false;
				}
				public Integer DESCRIPCIONLength(){
				    return 1000;
				}
				public Integer DESCRIPCIONPrecision(){
				    return 0;
				}
				public String DESCRIPCIONDefault(){
				
					return null;
				
				}
				public String DESCRIPCIONComment(){
				
				    return "";
				
				}
				public String DESCRIPCIONPattern(){
				
					return "";
				
				}
				public String DESCRIPCIONOriginalDbColumnName(){
				
					return "DESCRIPCION";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GENERICOS_ID == null) ? 0 : this.GENERICOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row1Struct other = (row1Struct) obj;
		
						if (this.GENERICOS_ID == null) {
							if (other.GENERICOS_ID != null)
								return false;
						
						} else if (!this.GENERICOS_ID.equals(other.GENERICOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row1Struct other) {

		other.GENERICOS_ID = this.GENERICOS_ID;
	            other.ESTADO = this.ESTADO;
	            other.NOMBRE = this.NOMBRE;
	            other.DESCRIPCION = this.DESCRIPCION;
	            
	}

	public void copyKeysDataTo(row1Struct other) {

		other.GENERICOS_ID = this.GENERICOS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.GENERICOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.GENERICOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GENERICOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GENERICOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.ESTADO = readString(dis,ois);
					
						this.NOMBRE = readString(dis,ois);
					
						this.DESCRIPCION = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.ESTADO = readString(dis,objectIn);
					
						this.NOMBRE = readString(dis,objectIn);
					
						this.DESCRIPCION = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.ESTADO, dos, oos);
					
						writeString(this.NOMBRE, dos, oos);
					
						writeString(this.DESCRIPCION, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.ESTADO, dos, objectOut);
					
						writeString(this.NOMBRE, dos, objectOut);
					
						writeString(this.DESCRIPCION, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GENERICOS_ID="+String.valueOf(GENERICOS_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",DESCRIPCION="+DESCRIPCION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GENERICOS_ID, other.GENERICOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();




	
	/**
	 * [tAdvancedHash_row1 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row1", false);
		start_Hash.put("tAdvancedHash_row1", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tAdvancedHash_row1 = 0;
		

			   		// connection name:row1
			   		// source node:tOracleInput_1 - inputs:(after_tOracleInput_38) outputs:(row1,row1) | target node:tAdvancedHash_row1 - inputs:(row1) outputs:()
			   		// linked node: tMap_11 - inputs:(out10,row1) outputs:(out11)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row1 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row1Struct> tHash_Lookup_row1 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row1Struct>getLookup(matchingModeEnum_row1);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row1", tHash_Lookup_row1);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row1 begin ] stop
 */



	
	/**
	 * [tOracleInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_1", false);
		start_Hash.put("tOracleInput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_1";
	
	
		int tos_count_tOracleInput_1 = 0;
		
	


	
		    int nb_line_tOracleInput_1 = 0;
		    java.sql.Connection conn_tOracleInput_1 = null;
				conn_tOracleInput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_1 = false;
				boolean isConnectionWrapped_tOracleInput_1 = !(conn_tOracleInput_1 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_1.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_1 = null;
                if (isConnectionWrapped_tOracleInput_1) {
					unwrappedOraConn_tOracleInput_1 = conn_tOracleInput_1.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_1 != null) {
                        isTimeZoneNull_tOracleInput_1 = (unwrappedOraConn_tOracleInput_1.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_1 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_1).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_1) {
					java.sql.Statement stmtGetTZ_tOracleInput_1 = conn_tOracleInput_1.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_1 = stmtGetTZ_tOracleInput_1.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_1 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_1.next()) {
						sessionTimezone_tOracleInput_1 = rsGetTZ_tOracleInput_1.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_1 && unwrappedOraConn_tOracleInput_1 != null) {
                        unwrappedOraConn_tOracleInput_1.setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_1).setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_1 = conn_tOracleInput_1.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_1.setFetchSize(1000);


		    String dbquery_tOracleInput_1 = "select \nMAG.GENERICOS_ID,\nMAG.ESTADO,\nPA.NOMBRE,\nPA.DESCRIPCION\n from  MED_ACTIVOSGENERICOS MAG \nINNER JOIN MED_P"
+"RINCIPIOSACTIVOS PA ON PA.ID=MAG.PRINCIPIOSACTIVOS_ID  ";
		    

		    globalMap.put("tOracleInput_1_QUERY",dbquery_tOracleInput_1);

		    java.sql.ResultSet rs_tOracleInput_1 = null;

		    try {
		    	rs_tOracleInput_1 = stmt_tOracleInput_1.executeQuery(dbquery_tOracleInput_1);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_1 = rs_tOracleInput_1.getMetaData();
		    	int colQtyInRs_tOracleInput_1 = rsmd_tOracleInput_1.getColumnCount();

		    String tmpContent_tOracleInput_1 = null;
		    
		    
		    while (rs_tOracleInput_1.next()) {
		        nb_line_tOracleInput_1++;
		        
							if(colQtyInRs_tOracleInput_1 < 1) {
								row1.GENERICOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(1) != null) {
						row1.GENERICOS_ID = rs_tOracleInput_1.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 2) {
								row1.ESTADO = null;
							} else {
	                         		
        	row1.ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 3) {
								row1.NOMBRE = null;
							} else {
	                         		
        	row1.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 4) {
								row1.DESCRIPCION = null;
							} else {
	                         		
        	row1.DESCRIPCION = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 4, false);
		                    }
					




 



/**
 * [tOracleInput_1 begin ] stop
 */
	
	/**
	 * [tOracleInput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 


	tos_count_tOracleInput_1++;

/**
 * [tOracleInput_1 main ] stop
 */
	
	/**
	 * [tOracleInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row1 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					


			   
			   

					row1Struct row1_HashRow = new row1Struct();
		   	   	   
				
				row1_HashRow.GENERICOS_ID = row1.GENERICOS_ID;
				
				row1_HashRow.ESTADO = row1.ESTADO;
				
				row1_HashRow.NOMBRE = row1.NOMBRE;
				
				row1_HashRow.DESCRIPCION = row1.DESCRIPCION;
				
			tHash_Lookup_row1.put(row1_HashRow);
			
            




 


	tos_count_tAdvancedHash_row1++;

/**
 * [tAdvancedHash_row1 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row1";
	
	

 



/**
 * [tAdvancedHash_row1 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row1 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row1";
	
	

 



/**
 * [tAdvancedHash_row1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

}
}finally{
	if (rs_tOracleInput_1 != null) {
		rs_tOracleInput_1.close();
	}
	if (stmt_tOracleInput_1 != null) {
		stmt_tOracleInput_1.close();
	}
}

globalMap.put("tOracleInput_1_NB_LINE",nb_line_tOracleInput_1);
 

ok_Hash.put("tOracleInput_1", true);
end_Hash.put("tOracleInput_1", System.currentTimeMillis());




/**
 * [tOracleInput_1 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row1 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row1";
	
	

tHash_Lookup_row1.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row1", true);
end_Hash.put("tAdvancedHash_row1", System.currentTimeMillis());




/**
 * [tAdvancedHash_row1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row1 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row1";
	
	

 



/**
 * [tAdvancedHash_row1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row2Struct implements routines.system.IPersistableComparableLookupRow<row2Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal DIAGNOSTICOS_ID;

				public BigDecimal getDIAGNOSTICOS_ID () {
					return this.DIAGNOSTICOS_ID;
				}

				public Boolean DIAGNOSTICOS_IDIsNullable(){
				    return true;
				}
				public Boolean DIAGNOSTICOS_IDIsKey(){
				    return true;
				}
				public Integer DIAGNOSTICOS_IDLength(){
				    return 0;
				}
				public Integer DIAGNOSTICOS_IDPrecision(){
				    return null;
				}
				public String DIAGNOSTICOS_IDDefault(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDComment(){
				
				    return "";
				
				}
				public String DIAGNOSTICOS_IDPattern(){
				
					return "";
				
				}
				public String DIAGNOSTICOS_IDOriginalDbColumnName(){
				
					return "DIAGNOSTICOS_ID";
				
				}

				
			    public BigDecimal UNO;

				public BigDecimal getUNO () {
					return this.UNO;
				}

				public Boolean UNOIsNullable(){
				    return true;
				}
				public Boolean UNOIsKey(){
				    return false;
				}
				public Integer UNOLength(){
				    return 10;
				}
				public Integer UNOPrecision(){
				    return 0;
				}
				public String UNODefault(){
				
					return null;
				
				}
				public String UNOComment(){
				
				    return "";
				
				}
				public String UNOPattern(){
				
					return "";
				
				}
				public String UNOOriginalDbColumnName(){
				
					return "UNO";
				
				}

				
			    public BigDecimal DOS;

				public BigDecimal getDOS () {
					return this.DOS;
				}

				public Boolean DOSIsNullable(){
				    return true;
				}
				public Boolean DOSIsKey(){
				    return false;
				}
				public Integer DOSLength(){
				    return 10;
				}
				public Integer DOSPrecision(){
				    return 0;
				}
				public String DOSDefault(){
				
					return null;
				
				}
				public String DOSComment(){
				
				    return "";
				
				}
				public String DOSPattern(){
				
					return "";
				
				}
				public String DOSOriginalDbColumnName(){
				
					return "DOS";
				
				}

				
			    public BigDecimal TRES;

				public BigDecimal getTRES () {
					return this.TRES;
				}

				public Boolean TRESIsNullable(){
				    return true;
				}
				public Boolean TRESIsKey(){
				    return false;
				}
				public Integer TRESLength(){
				    return 10;
				}
				public Integer TRESPrecision(){
				    return 0;
				}
				public String TRESDefault(){
				
					return null;
				
				}
				public String TRESComment(){
				
				    return "";
				
				}
				public String TRESPattern(){
				
					return "";
				
				}
				public String TRESOriginalDbColumnName(){
				
					return "TRES";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.DIAGNOSTICOS_ID == null) ? 0 : this.DIAGNOSTICOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row2Struct other = (row2Struct) obj;
		
						if (this.DIAGNOSTICOS_ID == null) {
							if (other.DIAGNOSTICOS_ID != null)
								return false;
						
						} else if (!this.DIAGNOSTICOS_ID.equals(other.DIAGNOSTICOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row2Struct other) {

		other.DIAGNOSTICOS_ID = this.DIAGNOSTICOS_ID;
	            other.UNO = this.UNO;
	            other.DOS = this.DOS;
	            other.TRES = this.TRES;
	            
	}

	public void copyKeysDataTo(row2Struct other) {

		other.DIAGNOSTICOS_ID = this.DIAGNOSTICOS_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.DIAGNOSTICOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DIAGNOSTICOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAGNOSTICOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.UNO = (BigDecimal) ois.readObject();
					
       			    	this.DOS = (BigDecimal) ois.readObject();
					
       			    	this.TRES = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.UNO = (BigDecimal) objectIn.readObject();
					
       			    	this.DOS = (BigDecimal) objectIn.readObject();
					
       			    	this.TRES = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.UNO);
					
       			    	oos.writeObject(this.DOS);
					
       			    	oos.writeObject(this.TRES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.UNO);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.DOS);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.TRES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DIAGNOSTICOS_ID="+String.valueOf(DIAGNOSTICOS_ID));
		sb.append(",UNO="+String.valueOf(UNO));
		sb.append(",DOS="+String.valueOf(DOS));
		sb.append(",TRES="+String.valueOf(TRES));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.DIAGNOSTICOS_ID, other.DIAGNOSTICOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();




	
	/**
	 * [tAdvancedHash_row2 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row2", false);
		start_Hash.put("tAdvancedHash_row2", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tAdvancedHash_row2 = 0;
		

			   		// connection name:row2
			   		// source node:tOracleInput_3 - inputs:(after_tOracleInput_38) outputs:(row2,row2) | target node:tAdvancedHash_row2 - inputs:(row2) outputs:()
			   		// linked node: tMap_4 - inputs:(out11,row2) outputs:(out1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row2 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct> tHash_Lookup_row2 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row2Struct>getLookup(matchingModeEnum_row2);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row2", tHash_Lookup_row2);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row2 begin ] stop
 */



	
	/**
	 * [tOracleInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_3", false);
		start_Hash.put("tOracleInput_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_3";
	
	
		int tos_count_tOracleInput_3 = 0;
		
	


	
		    int nb_line_tOracleInput_3 = 0;
		    java.sql.Connection conn_tOracleInput_3 = null;
				conn_tOracleInput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_3 = false;
				boolean isConnectionWrapped_tOracleInput_3 = !(conn_tOracleInput_3 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_3.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_3 = null;
                if (isConnectionWrapped_tOracleInput_3) {
					unwrappedOraConn_tOracleInput_3 = conn_tOracleInput_3.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_3 != null) {
                        isTimeZoneNull_tOracleInput_3 = (unwrappedOraConn_tOracleInput_3.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_3 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_3).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_3) {
					java.sql.Statement stmtGetTZ_tOracleInput_3 = conn_tOracleInput_3.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_3 = stmtGetTZ_tOracleInput_3.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_3 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_3.next()) {
						sessionTimezone_tOracleInput_3 = rsGetTZ_tOracleInput_3.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_3 && unwrappedOraConn_tOracleInput_3 != null) {
                        unwrappedOraConn_tOracleInput_3.setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_3).setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_3 = conn_tOracleInput_3.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_3.setFetchSize(1000);


		    String dbquery_tOracleInput_3 = "SELECT * FROM (SELECT RELA.CIE10,NUM.NUMERO AS NUMERO_123,RELA.DIAGNOSTICOS_ID FROM (\n              SELECT \n         "
+"     ROW_NUMBER()OVER (PARTITION BY DIAG.ID_DI ORDER BY DIAG.ID_DI) AS NUMERO ,\n              DIAG.ID_DI AS DIAGNOSTICO"
+"S_ID,\n              CIE.ID AS CIE10\n              FROM (\n                    SELECT  \n                      diag.ID "
+"AS ID_DI\n                    FROM HCL_DIAGNOSTICOS diag\n                    INNER JOIN HCL_FORMMEDICAS formu ON formu."
+"PROCESOSASISTENCIALES_ID = diag.PROCESOSASISTENCIALES_ID \n                    INNER JOIN HCL_FORMMEDINSUMOS formmedin O"
+"N formmedin.formmedicas_id = formu.id\n                    INNER JOIN HCL_DFORMMEDINSUMOS dformmedin ON  formmedin.id = "
+"dformmedin.formmedinsumos_id \n					"+ context.COND_HCL_FORMMEDICAS+"\n                    ) DIAG\n              INNER JOIN HCL_DIAGRELACIONADOS RE ON RE.DIAGNOSTICOS_ID = DIAG.ID_DI\n    "
+"          INNER JOIN GEN_CIE10 CIE ON CIE.ID = RE.CIE10_ID\n              ) RELA              \n              RIGHT JOIN"
+" (SELECT '1' AS NUMERO FROM DUAL\n                          UNION\n                          SELECT '2' AS NUMERO FROM D"
+"UAL\n                          UNION \n                          SELECT '3' AS NUMERO FROM DUAL \n                      "
+"    ) NUM ON NUM.NUMERO = RELA.NUMERO\n                          ) \n              PIVOT \n              (\n            "
+"    MIN(CIE10)\n                FOR NUMERO_123\n                IN ( '1' UNO, '2' DOS,'3' TRES)                 \n      "
+"        )";
		    

		    globalMap.put("tOracleInput_3_QUERY",dbquery_tOracleInput_3);

		    java.sql.ResultSet rs_tOracleInput_3 = null;

		    try {
		    	rs_tOracleInput_3 = stmt_tOracleInput_3.executeQuery(dbquery_tOracleInput_3);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_3 = rs_tOracleInput_3.getMetaData();
		    	int colQtyInRs_tOracleInput_3 = rsmd_tOracleInput_3.getColumnCount();

		    String tmpContent_tOracleInput_3 = null;
		    
		    
		    while (rs_tOracleInput_3.next()) {
		        nb_line_tOracleInput_3++;
		        
							if(colQtyInRs_tOracleInput_3 < 1) {
								row2.DIAGNOSTICOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(1) != null) {
						row2.DIAGNOSTICOS_ID = rs_tOracleInput_3.getBigDecimal(1);
					} else {
				
						row2.DIAGNOSTICOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_3 < 2) {
								row2.UNO = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(2) != null) {
						row2.UNO = rs_tOracleInput_3.getBigDecimal(2);
					} else {
				
						row2.UNO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_3 < 3) {
								row2.DOS = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(3) != null) {
						row2.DOS = rs_tOracleInput_3.getBigDecimal(3);
					} else {
				
						row2.DOS = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_3 < 4) {
								row2.TRES = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(4) != null) {
						row2.TRES = rs_tOracleInput_3.getBigDecimal(4);
					} else {
				
						row2.TRES = null;
					}
		                    }
					




 



/**
 * [tOracleInput_3 begin ] stop
 */
	
	/**
	 * [tOracleInput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 


	tos_count_tOracleInput_3++;

/**
 * [tOracleInput_3 main ] stop
 */
	
	/**
	 * [tOracleInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row2 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					


			   
			   

					row2Struct row2_HashRow = new row2Struct();
		   	   	   
				
				row2_HashRow.DIAGNOSTICOS_ID = row2.DIAGNOSTICOS_ID;
				
				row2_HashRow.UNO = row2.UNO;
				
				row2_HashRow.DOS = row2.DOS;
				
				row2_HashRow.TRES = row2.TRES;
				
			tHash_Lookup_row2.put(row2_HashRow);
			
            




 


	tos_count_tAdvancedHash_row2++;

/**
 * [tAdvancedHash_row2 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

 



/**
 * [tAdvancedHash_row2 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row2 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

 



/**
 * [tAdvancedHash_row2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

}
}finally{
	if (rs_tOracleInput_3 != null) {
		rs_tOracleInput_3.close();
	}
	if (stmt_tOracleInput_3 != null) {
		stmt_tOracleInput_3.close();
	}
}

globalMap.put("tOracleInput_3_NB_LINE",nb_line_tOracleInput_3);
 

ok_Hash.put("tOracleInput_3", true);
end_Hash.put("tOracleInput_3", System.currentTimeMillis());




/**
 * [tOracleInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row2 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

tHash_Lookup_row2.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row2", true);
end_Hash.put("tAdvancedHash_row2", System.currentTimeMillis());




/**
 * [tAdvancedHash_row2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row2 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

 



/**
 * [tAdvancedHash_row2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableComparableLookupRow<row5Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal PENDIENTES_ID;

				public BigDecimal getPENDIENTES_ID () {
					return this.PENDIENTES_ID;
				}

				public Boolean PENDIENTES_IDIsNullable(){
				    return true;
				}
				public Boolean PENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PENDIENTES_IDPrecision(){
				    return null;
				}
				public String PENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PENDIENTES_IDOriginalDbColumnName(){
				
					return "PENDIENTES_ID";
				
				}

				
			    public String NOVEDAD_PENDIENTE;

				public String getNOVEDAD_PENDIENTE () {
					return this.NOVEDAD_PENDIENTE;
				}

				public Boolean NOVEDAD_PENDIENTEIsNullable(){
				    return true;
				}
				public Boolean NOVEDAD_PENDIENTEIsKey(){
				    return false;
				}
				public Integer NOVEDAD_PENDIENTELength(){
				    return 500;
				}
				public Integer NOVEDAD_PENDIENTEPrecision(){
				    return 0;
				}
				public String NOVEDAD_PENDIENTEDefault(){
				
					return null;
				
				}
				public String NOVEDAD_PENDIENTEComment(){
				
				    return "";
				
				}
				public String NOVEDAD_PENDIENTEPattern(){
				
					return "";
				
				}
				public String NOVEDAD_PENDIENTEOriginalDbColumnName(){
				
					return "NOVEDAD_PENDIENTE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PENDIENTES_ID == null) ? 0 : this.PENDIENTES_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row5Struct other = (row5Struct) obj;
		
						if (this.PENDIENTES_ID == null) {
							if (other.PENDIENTES_ID != null)
								return false;
						
						} else if (!this.PENDIENTES_ID.equals(other.PENDIENTES_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row5Struct other) {

		other.PENDIENTES_ID = this.PENDIENTES_ID;
	            other.NOVEDAD_PENDIENTE = this.NOVEDAD_PENDIENTE;
	            
	}

	public void copyKeysDataTo(row5Struct other) {

		other.PENDIENTES_ID = this.PENDIENTES_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOVEDAD_PENDIENTE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOVEDAD_PENDIENTE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOVEDAD_PENDIENTE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOVEDAD_PENDIENTE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PENDIENTES_ID="+String.valueOf(PENDIENTES_ID));
		sb.append(",NOVEDAD_PENDIENTE="+NOVEDAD_PENDIENTE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PENDIENTES_ID, other.PENDIENTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_41Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_41_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();




	
	/**
	 * [tAdvancedHash_row5 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row5", false);
		start_Hash.put("tAdvancedHash_row5", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tAdvancedHash_row5 = 0;
		

			   		// connection name:row5
			   		// source node:tOracleInput_41 - inputs:(after_tOracleInput_57) outputs:(row5,row5) | target node:tAdvancedHash_row5 - inputs:(row5) outputs:()
			   		// linked node: tMap_17 - inputs:(row138,row5) outputs:(out16)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row5 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row5Struct> tHash_Lookup_row5 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row5Struct>getLookup(matchingModeEnum_row5);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row5", tHash_Lookup_row5);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row5 begin ] stop
 */



	
	/**
	 * [tOracleInput_41 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_41", false);
		start_Hash.put("tOracleInput_41", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_41";
	
	
		int tos_count_tOracleInput_41 = 0;
		
	


	
		    int nb_line_tOracleInput_41 = 0;
		    java.sql.Connection conn_tOracleInput_41 = null;
				conn_tOracleInput_41 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_41 = false;
				boolean isConnectionWrapped_tOracleInput_41 = !(conn_tOracleInput_41 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_41.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_41 = null;
                if (isConnectionWrapped_tOracleInput_41) {
					unwrappedOraConn_tOracleInput_41 = conn_tOracleInput_41.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_41 != null) {
                        isTimeZoneNull_tOracleInput_41 = (unwrappedOraConn_tOracleInput_41.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_41 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_41).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_41) {
					java.sql.Statement stmtGetTZ_tOracleInput_41 = conn_tOracleInput_41.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_41 = stmtGetTZ_tOracleInput_41.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_41 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_41.next()) {
						sessionTimezone_tOracleInput_41 = rsGetTZ_tOracleInput_41.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_41 && unwrappedOraConn_tOracleInput_41 != null) {
                        unwrappedOraConn_tOracleInput_41.setSessionTimeZone(sessionTimezone_tOracleInput_41);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_41).setSessionTimeZone(sessionTimezone_tOracleInput_41);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_41 = conn_tOracleInput_41.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_41.setFetchSize(1000);


		    String dbquery_tOracleInput_41 = "SELECT \n  nov.pendientes_id\n  , nvl(tnov.NOMBRE, ' ') as NOVEDAD_PENDIENTE\n  \nFROM med_novedades nov \nleft join me"
+"d_tnovedades tnov  on tnov.id = nov.tnovedades_id\n/*WHERE nov.pendientes_id IS NOT NULL*/ ";
		    

		    globalMap.put("tOracleInput_41_QUERY",dbquery_tOracleInput_41);

		    java.sql.ResultSet rs_tOracleInput_41 = null;

		    try {
		    	rs_tOracleInput_41 = stmt_tOracleInput_41.executeQuery(dbquery_tOracleInput_41);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_41 = rs_tOracleInput_41.getMetaData();
		    	int colQtyInRs_tOracleInput_41 = rsmd_tOracleInput_41.getColumnCount();

		    String tmpContent_tOracleInput_41 = null;
		    
		    
		    while (rs_tOracleInput_41.next()) {
		        nb_line_tOracleInput_41++;
		        
							if(colQtyInRs_tOracleInput_41 < 1) {
								row5.PENDIENTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_41.getObject(1) != null) {
						row5.PENDIENTES_ID = rs_tOracleInput_41.getBigDecimal(1);
					} else {
				
						row5.PENDIENTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_41 < 2) {
								row5.NOVEDAD_PENDIENTE = null;
							} else {
	                         		
        	row5.NOVEDAD_PENDIENTE = routines.system.JDBCUtil.getString(rs_tOracleInput_41, 2, false);
		                    }
					




 



/**
 * [tOracleInput_41 begin ] stop
 */
	
	/**
	 * [tOracleInput_41 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 


	tos_count_tOracleInput_41++;

/**
 * [tOracleInput_41 main ] stop
 */
	
	/**
	 * [tOracleInput_41 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row5 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					


			   
			   

					row5Struct row5_HashRow = new row5Struct();
		   	   	   
				
				row5_HashRow.PENDIENTES_ID = row5.PENDIENTES_ID;
				
				row5_HashRow.NOVEDAD_PENDIENTE = row5.NOVEDAD_PENDIENTE;
				
			tHash_Lookup_row5.put(row5_HashRow);
			
            




 


	tos_count_tAdvancedHash_row5++;

/**
 * [tAdvancedHash_row5 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row5";
	
	

 



/**
 * [tAdvancedHash_row5 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row5 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row5";
	
	

 



/**
 * [tAdvancedHash_row5 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_41 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_41 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

}
}finally{
	if (rs_tOracleInput_41 != null) {
		rs_tOracleInput_41.close();
	}
	if (stmt_tOracleInput_41 != null) {
		stmt_tOracleInput_41.close();
	}
}

globalMap.put("tOracleInput_41_NB_LINE",nb_line_tOracleInput_41);
 

ok_Hash.put("tOracleInput_41", true);
end_Hash.put("tOracleInput_41", System.currentTimeMillis());




/**
 * [tOracleInput_41 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row5 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row5";
	
	

tHash_Lookup_row5.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row5", true);
end_Hash.put("tAdvancedHash_row5", System.currentTimeMillis());




/**
 * [tAdvancedHash_row5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_41 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row5 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row5";
	
	

 



/**
 * [tAdvancedHash_row5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_41_SUBPROCESS_STATE", 1);
	}
	


public static class row6Struct implements routines.system.IPersistableComparableLookupRow<row6Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "SALUDSIS\".\"ISEQ$$_97104\".nextval";
				
				}
				public String IDComment(){
				
				    return "PK - Llave Primaria";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal PENDIENTES_ID;

				public BigDecimal getPENDIENTES_ID () {
					return this.PENDIENTES_ID;
				}

				public Boolean PENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PENDIENTES_IDPrecision(){
				    return null;
				}
				public String PENDIENTES_IDDefault(){
				
					return null;
				
				}
				public String PENDIENTES_IDComment(){
				
				    return "FK - MED_PENDIENTES";
				
				}
				public String PENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PENDIENTES_IDOriginalDbColumnName(){
				
					return "PENDIENTES_ID";
				
				}

				
			    public java.util.Date FINICIO;

				public java.util.Date getFINICIO () {
					return this.FINICIO;
				}

				public Boolean FINICIOIsNullable(){
				    return false;
				}
				public Boolean FINICIOIsKey(){
				    return false;
				}
				public Integer FINICIOLength(){
				    return 7;
				}
				public Integer FINICIOPrecision(){
				    return 0;
				}
				public String FINICIODefault(){
				
					return null;
				
				}
				public String FINICIOComment(){
				
				    return "Fecha inicio";
				
				}
				public String FINICIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FINICIOOriginalDbColumnName(){
				
					return "FINICIO";
				
				}

				
			    public BigDecimal CANTIDAD;

				public BigDecimal getCANTIDAD () {
					return this.CANTIDAD;
				}

				public Boolean CANTIDADIsNullable(){
				    return false;
				}
				public Boolean CANTIDADIsKey(){
				    return false;
				}
				public Integer CANTIDADLength(){
				    return 0;
				}
				public Integer CANTIDADPrecision(){
				    return null;
				}
				public String CANTIDADDefault(){
				
					return null;
				
				}
				public String CANTIDADComment(){
				
				    return "Cantidad";
				
				}
				public String CANTIDADPattern(){
				
					return "";
				
				}
				public String CANTIDADOriginalDbColumnName(){
				
					return "CANTIDAD";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 50;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "Estado (Activo, Cancelado por vencimiento, Cancelado, Entregado)";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public BigDecimal ESTREGISTRO_ID;

				public BigDecimal getESTREGISTRO_ID () {
					return this.ESTREGISTRO_ID;
				}

				public Boolean ESTREGISTRO_IDIsNullable(){
				    return false;
				}
				public Boolean ESTREGISTRO_IDIsKey(){
				    return false;
				}
				public Integer ESTREGISTRO_IDLength(){
				    return 0;
				}
				public Integer ESTREGISTRO_IDPrecision(){
				    return null;
				}
				public String ESTREGISTRO_IDDefault(){
				
					return "1";
				
				}
				public String ESTREGISTRO_IDComment(){
				
				    return "FK - GEN_ESTREGISTRO";
				
				}
				public String ESTREGISTRO_IDPattern(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDOriginalDbColumnName(){
				
					return "ESTREGISTRO_ID";
				
				}

				
			    public java.util.Date FESTADO;

				public java.util.Date getFESTADO () {
					return this.FESTADO;
				}

				public Boolean FESTADOIsNullable(){
				    return true;
				}
				public Boolean FESTADOIsKey(){
				    return false;
				}
				public Integer FESTADOLength(){
				    return 7;
				}
				public Integer FESTADOPrecision(){
				    return 0;
				}
				public String FESTADODefault(){
				
					return null;
				
				}
				public String FESTADOComment(){
				
				    return "Fecha del estado";
				
				}
				public String FESTADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FESTADOOriginalDbColumnName(){
				
					return "FESTADO";
				
				}

				
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return null;
				}
				public String INVENTARIOS_IDDefault(){
				
					return null;
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "FK - MED_INVENTARIOS";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PENDIENTES_ID == null) ? 0 : this.PENDIENTES_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row6Struct other = (row6Struct) obj;
		
						if (this.PENDIENTES_ID == null) {
							if (other.PENDIENTES_ID != null)
								return false;
						
						} else if (!this.PENDIENTES_ID.equals(other.PENDIENTES_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row6Struct other) {

		other.ID = this.ID;
	            other.PENDIENTES_ID = this.PENDIENTES_ID;
	            other.FINICIO = this.FINICIO;
	            other.CANTIDAD = this.CANTIDAD;
	            other.ESTADO = this.ESTADO;
	            other.ESTREGISTRO_ID = this.ESTREGISTRO_ID;
	            other.FESTADO = this.FESTADO;
	            other.INVENTARIOS_ID = this.INVENTARIOS_ID;
	            
	}

	public void copyKeysDataTo(row6Struct other) {

		other.PENDIENTES_ID = this.PENDIENTES_ID;
	            	
	}




	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.FINICIO = readDate(dis,ois);
					
       			    	this.CANTIDAD = (BigDecimal) ois.readObject();
					
						this.ESTADO = readString(dis,ois);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) ois.readObject();
					
						this.FESTADO = readDate(dis,ois);
					
       			    	this.INVENTARIOS_ID = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.FINICIO = readDate(dis,objectIn);
					
       			    	this.CANTIDAD = (BigDecimal) objectIn.readObject();
					
						this.ESTADO = readString(dis,objectIn);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) objectIn.readObject();
					
						this.FESTADO = readDate(dis,objectIn);
					
       			    	this.INVENTARIOS_ID = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeDate(this.FINICIO, dos, oos);
					
       			    	oos.writeObject(this.CANTIDAD);
					
						writeString(this.ESTADO, dos, oos);
					
       			    	oos.writeObject(this.ESTREGISTRO_ID);
					
						writeDate(this.FESTADO, dos, oos);
					
       			    	oos.writeObject(this.INVENTARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeDate(this.FINICIO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.CANTIDAD);
					
						writeString(this.ESTADO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ESTREGISTRO_ID);
					
						writeDate(this.FESTADO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.INVENTARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PENDIENTES_ID="+String.valueOf(PENDIENTES_ID));
		sb.append(",FINICIO="+String.valueOf(FINICIO));
		sb.append(",CANTIDAD="+String.valueOf(CANTIDAD));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",ESTREGISTRO_ID="+String.valueOf(ESTREGISTRO_ID));
		sb.append(",FESTADO="+String.valueOf(FESTADO));
		sb.append(",INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PENDIENTES_ID, other.PENDIENTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_45Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_45_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();




	
	/**
	 * [tAdvancedHash_row6 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row6", false);
		start_Hash.put("tAdvancedHash_row6", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tAdvancedHash_row6 = 0;
		

			   		// connection name:row6
			   		// source node:tOracleInput_45 - inputs:(after_tOracleInput_57) outputs:(row6,row6) | target node:tAdvancedHash_row6 - inputs:(row6) outputs:()
			   		// linked node: tMap_18 - inputs:(out16,row6) outputs:(out17)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row6 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct> tHash_Lookup_row6 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row6Struct>getLookup(matchingModeEnum_row6);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row6", tHash_Lookup_row6);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row6 begin ] stop
 */



	
	/**
	 * [tOracleInput_45 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_45", false);
		start_Hash.put("tOracleInput_45", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_45";
	
	
		int tos_count_tOracleInput_45 = 0;
		
	


	
		    int nb_line_tOracleInput_45 = 0;
		    java.sql.Connection conn_tOracleInput_45 = null;
				conn_tOracleInput_45 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_45 = false;
				boolean isConnectionWrapped_tOracleInput_45 = !(conn_tOracleInput_45 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_45.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_45 = null;
                if (isConnectionWrapped_tOracleInput_45) {
					unwrappedOraConn_tOracleInput_45 = conn_tOracleInput_45.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_45 != null) {
                        isTimeZoneNull_tOracleInput_45 = (unwrappedOraConn_tOracleInput_45.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_45 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_45).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_45) {
					java.sql.Statement stmtGetTZ_tOracleInput_45 = conn_tOracleInput_45.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_45 = stmtGetTZ_tOracleInput_45.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_45 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_45.next()) {
						sessionTimezone_tOracleInput_45 = rsGetTZ_tOracleInput_45.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_45 && unwrappedOraConn_tOracleInput_45 != null) {
                        unwrappedOraConn_tOracleInput_45.setSessionTimeZone(sessionTimezone_tOracleInput_45);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_45).setSessionTimeZone(sessionTimezone_tOracleInput_45);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_45 = conn_tOracleInput_45.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_45.setFetchSize(1000);


		    String dbquery_tOracleInput_45 = "SELECT \n  "+context.db_origen_Schema+".MED_BODEGASVIRTUALES.\"ID\", \n  "+context.db_origen_Schema+".MED_BODEGASVIRTUALES.PENDIENTES_ID, \n  "+context.db_origen_Schema+".MED_BODEGASVIRTUALES.FINICIO, \n  "+context.db_origen_Schema+".MED_BODEGASVIRTUALES.CANTIDAD, \n  "+context.db_origen_Schema+".MED_BODEGASVIRTUALES.ESTADO, \n  "+context.db_origen_Schema+".MED_BODEGASVIRTUALES.ESTREGISTRO_ID, \n  "+context.db_origen_Schema+".MED_BODEGASVIRTUALES.FESTADO, \n  "+context.db_origen_Schema+".MED_BODEGASVIRTUALES.INVENTARIOS_ID\nFROM "+context.db_origen_Schema+".MED_BODEGASVIRTUALES";
		    

		    globalMap.put("tOracleInput_45_QUERY",dbquery_tOracleInput_45);

		    java.sql.ResultSet rs_tOracleInput_45 = null;

		    try {
		    	rs_tOracleInput_45 = stmt_tOracleInput_45.executeQuery(dbquery_tOracleInput_45);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_45 = rs_tOracleInput_45.getMetaData();
		    	int colQtyInRs_tOracleInput_45 = rsmd_tOracleInput_45.getColumnCount();

		    String tmpContent_tOracleInput_45 = null;
		    
		    
		    while (rs_tOracleInput_45.next()) {
		        nb_line_tOracleInput_45++;
		        
							if(colQtyInRs_tOracleInput_45 < 1) {
								row6.ID = null;
							} else {
		                          
					if(rs_tOracleInput_45.getObject(1) != null) {
						row6.ID = rs_tOracleInput_45.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_45 < 2) {
								row6.PENDIENTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_45.getObject(2) != null) {
						row6.PENDIENTES_ID = rs_tOracleInput_45.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_45 < 3) {
								row6.FINICIO = null;
							} else {
										
			row6.FINICIO = routines.system.JDBCUtil.getDate(rs_tOracleInput_45, 3);
		                    }
							if(colQtyInRs_tOracleInput_45 < 4) {
								row6.CANTIDAD = null;
							} else {
		                          
					if(rs_tOracleInput_45.getObject(4) != null) {
						row6.CANTIDAD = rs_tOracleInput_45.getBigDecimal(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_45 < 5) {
								row6.ESTADO = null;
							} else {
	                         		
        	row6.ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_45, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_45 < 6) {
								row6.ESTREGISTRO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_45.getObject(6) != null) {
						row6.ESTREGISTRO_ID = rs_tOracleInput_45.getBigDecimal(6);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_45 < 7) {
								row6.FESTADO = null;
							} else {
										
			row6.FESTADO = routines.system.JDBCUtil.getDate(rs_tOracleInput_45, 7);
		                    }
							if(colQtyInRs_tOracleInput_45 < 8) {
								row6.INVENTARIOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_45.getObject(8) != null) {
						row6.INVENTARIOS_ID = rs_tOracleInput_45.getBigDecimal(8);
					} else {
				
						row6.INVENTARIOS_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_45 begin ] stop
 */
	
	/**
	 * [tOracleInput_45 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 


	tos_count_tOracleInput_45++;

/**
 * [tOracleInput_45 main ] stop
 */
	
	/**
	 * [tOracleInput_45 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 



/**
 * [tOracleInput_45 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row6 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					


			   
			   

					row6Struct row6_HashRow = new row6Struct();
		   	   	   
				
				row6_HashRow.ID = row6.ID;
				
				row6_HashRow.PENDIENTES_ID = row6.PENDIENTES_ID;
				
				row6_HashRow.FINICIO = row6.FINICIO;
				
				row6_HashRow.CANTIDAD = row6.CANTIDAD;
				
				row6_HashRow.ESTADO = row6.ESTADO;
				
				row6_HashRow.ESTREGISTRO_ID = row6.ESTREGISTRO_ID;
				
				row6_HashRow.FESTADO = row6.FESTADO;
				
				row6_HashRow.INVENTARIOS_ID = row6.INVENTARIOS_ID;
				
			tHash_Lookup_row6.put(row6_HashRow);
			
            




 


	tos_count_tAdvancedHash_row6++;

/**
 * [tAdvancedHash_row6 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

 



/**
 * [tAdvancedHash_row6 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row6 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

 



/**
 * [tAdvancedHash_row6 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_45 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 



/**
 * [tOracleInput_45 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_45 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

}
}finally{
	if (rs_tOracleInput_45 != null) {
		rs_tOracleInput_45.close();
	}
	if (stmt_tOracleInput_45 != null) {
		stmt_tOracleInput_45.close();
	}
}

globalMap.put("tOracleInput_45_NB_LINE",nb_line_tOracleInput_45);
 

ok_Hash.put("tOracleInput_45", true);
end_Hash.put("tOracleInput_45", System.currentTimeMillis());




/**
 * [tOracleInput_45 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row6 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

tHash_Lookup_row6.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row6", true);
end_Hash.put("tAdvancedHash_row6", System.currentTimeMillis());




/**
 * [tAdvancedHash_row6 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_45 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 



/**
 * [tOracleInput_45 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row6 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

 



/**
 * [tAdvancedHash_row6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_45_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableComparableLookupRow<row8Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal PENDIENTES_ID;

				public BigDecimal getPENDIENTES_ID () {
					return this.PENDIENTES_ID;
				}

				public Boolean PENDIENTES_IDIsNullable(){
				    return false;
				}
				public Boolean PENDIENTES_IDIsKey(){
				    return false;
				}
				public Integer PENDIENTES_IDLength(){
				    return 0;
				}
				public Integer PENDIENTES_IDPrecision(){
				    return null;
				}
				public String PENDIENTES_IDDefault(){
				
					return "";
				
				}
				public String PENDIENTES_IDComment(){
				
				    return "";
				
				}
				public String PENDIENTES_IDPattern(){
				
					return "";
				
				}
				public String PENDIENTES_IDOriginalDbColumnName(){
				
					return "PENDIENTES_ID";
				
				}

				
			    public String NOMBRES;

				public String getNOMBRES () {
					return this.NOMBRES;
				}

				public Boolean NOMBRESIsNullable(){
				    return false;
				}
				public Boolean NOMBRESIsKey(){
				    return false;
				}
				public Integer NOMBRESLength(){
				    return 1024;
				}
				public Integer NOMBRESPrecision(){
				    return 0;
				}
				public String NOMBRESDefault(){
				
					return null;
				
				}
				public String NOMBRESComment(){
				
				    return "";
				
				}
				public String NOMBRESPattern(){
				
					return "";
				
				}
				public String NOMBRESOriginalDbColumnName(){
				
					return "NOMBRES";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 50;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return false;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return 50;
				}
				public Integer TELEFONOPrecision(){
				    return 0;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return false;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return 1024;
				}
				public Integer DIRECCIONPrecision(){
				    return 0;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public BigDecimal ESTREGISTRO_ID;

				public BigDecimal getESTREGISTRO_ID () {
					return this.ESTREGISTRO_ID;
				}

				public Boolean ESTREGISTRO_IDIsNullable(){
				    return false;
				}
				public Boolean ESTREGISTRO_IDIsKey(){
				    return false;
				}
				public Integer ESTREGISTRO_IDLength(){
				    return 0;
				}
				public Integer ESTREGISTRO_IDPrecision(){
				    return null;
				}
				public String ESTREGISTRO_IDDefault(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDComment(){
				
				    return "";
				
				}
				public String ESTREGISTRO_IDPattern(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDOriginalDbColumnName(){
				
					return "ESTREGISTRO_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PENDIENTES_ID == null) ? 0 : this.PENDIENTES_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row8Struct other = (row8Struct) obj;
		
						if (this.PENDIENTES_ID == null) {
							if (other.PENDIENTES_ID != null)
								return false;
						
						} else if (!this.PENDIENTES_ID.equals(other.PENDIENTES_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row8Struct other) {

		other.ID = this.ID;
	            other.PENDIENTES_ID = this.PENDIENTES_ID;
	            other.NOMBRES = this.NOMBRES;
	            other.DOCUMENTO = this.DOCUMENTO;
	            other.TELEFONO = this.TELEFONO;
	            other.DIRECCION = this.DIRECCION;
	            other.ESTREGISTRO_ID = this.ESTREGISTRO_ID;
	            
	}

	public void copyKeysDataTo(row8Struct other) {

		other.PENDIENTES_ID = this.PENDIENTES_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PENDIENTES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PENDIENTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.NOMBRES = readString(dis,ois);
					
						this.DOCUMENTO = readString(dis,ois);
					
						this.TELEFONO = readString(dis,ois);
					
						this.DIRECCION = readString(dis,ois);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.NOMBRES = readString(dis,objectIn);
					
						this.DOCUMENTO = readString(dis,objectIn);
					
						this.TELEFONO = readString(dis,objectIn);
					
						this.DIRECCION = readString(dis,objectIn);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.NOMBRES, dos, oos);
					
						writeString(this.DOCUMENTO, dos, oos);
					
						writeString(this.TELEFONO, dos, oos);
					
						writeString(this.DIRECCION, dos, oos);
					
       			    	oos.writeObject(this.ESTREGISTRO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.NOMBRES, dos, objectOut);
					
						writeString(this.DOCUMENTO, dos, objectOut);
					
						writeString(this.TELEFONO, dos, objectOut);
					
						writeString(this.DIRECCION, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ESTREGISTRO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PENDIENTES_ID="+String.valueOf(PENDIENTES_ID));
		sb.append(",NOMBRES="+NOMBRES);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",ESTREGISTRO_ID="+String.valueOf(ESTREGISTRO_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PENDIENTES_ID, other.PENDIENTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_42Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_42_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tAdvancedHash_row8 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row8", false);
		start_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tAdvancedHash_row8 = 0;
		

			   		// connection name:row8
			   		// source node:tOracleInput_42 - inputs:(after_tOracleInput_57) outputs:(row8,row8) | target node:tAdvancedHash_row8 - inputs:(row8) outputs:()
			   		// linked node: tMap_19 - inputs:(out17,row8) outputs:(out18)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row8 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row8Struct>getLookup(matchingModeEnum_row8);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row8", tHash_Lookup_row8);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row8 begin ] stop
 */



	
	/**
	 * [tOracleInput_42 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_42", false);
		start_Hash.put("tOracleInput_42", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_42";
	
	
		int tos_count_tOracleInput_42 = 0;
		
	


	
		    int nb_line_tOracleInput_42 = 0;
		    java.sql.Connection conn_tOracleInput_42 = null;
				conn_tOracleInput_42 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_42 = false;
				boolean isConnectionWrapped_tOracleInput_42 = !(conn_tOracleInput_42 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_42.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_42 = null;
                if (isConnectionWrapped_tOracleInput_42) {
					unwrappedOraConn_tOracleInput_42 = conn_tOracleInput_42.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_42 != null) {
                        isTimeZoneNull_tOracleInput_42 = (unwrappedOraConn_tOracleInput_42.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_42 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_42).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_42) {
					java.sql.Statement stmtGetTZ_tOracleInput_42 = conn_tOracleInput_42.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_42 = stmtGetTZ_tOracleInput_42.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_42 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_42.next()) {
						sessionTimezone_tOracleInput_42 = rsGetTZ_tOracleInput_42.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_42 && unwrappedOraConn_tOracleInput_42 != null) {
                        unwrappedOraConn_tOracleInput_42.setSessionTimeZone(sessionTimezone_tOracleInput_42);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_42).setSessionTimeZone(sessionTimezone_tOracleInput_42);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_42 = conn_tOracleInput_42.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_42.setFetchSize(1000);


		    String dbquery_tOracleInput_42 = "SELECT \n  "+context.db_origen_Schema+".MED_PPENDIENTES.\"ID\", \n  "+context.db_origen_Schema+".MED_PPENDIENTES.PENDIENTES_ID, \n  "+context.db_origen_Schema+".MED_PPENDIENTES.NOMBRES, \n  "+context.db_origen_Schema+".MED_PPENDIENTES.DOCUMENTO, \n  "+context.db_origen_Schema+".MED_PPENDIENTES.TELEFONO, \n  "+context.db_origen_Schema+".MED_PPENDIENTES.DIRECCION, \n  "+context.db_origen_Schema+".MED_PPENDIENTES.ESTREGISTRO_ID\nFROM "+context.db_origen_Schema+".MED_PPENDIENTES ";
		    

		    globalMap.put("tOracleInput_42_QUERY",dbquery_tOracleInput_42);

		    java.sql.ResultSet rs_tOracleInput_42 = null;

		    try {
		    	rs_tOracleInput_42 = stmt_tOracleInput_42.executeQuery(dbquery_tOracleInput_42);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_42 = rs_tOracleInput_42.getMetaData();
		    	int colQtyInRs_tOracleInput_42 = rsmd_tOracleInput_42.getColumnCount();

		    String tmpContent_tOracleInput_42 = null;
		    
		    
		    while (rs_tOracleInput_42.next()) {
		        nb_line_tOracleInput_42++;
		        
							if(colQtyInRs_tOracleInput_42 < 1) {
								row8.ID = null;
							} else {
		                          
					if(rs_tOracleInput_42.getObject(1) != null) {
						row8.ID = rs_tOracleInput_42.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_42 < 2) {
								row8.PENDIENTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_42.getObject(2) != null) {
						row8.PENDIENTES_ID = rs_tOracleInput_42.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_42 < 3) {
								row8.NOMBRES = null;
							} else {
	                         		
        	row8.NOMBRES = routines.system.JDBCUtil.getString(rs_tOracleInput_42, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_42 < 4) {
								row8.DOCUMENTO = null;
							} else {
	                         		
        	row8.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_42, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_42 < 5) {
								row8.TELEFONO = null;
							} else {
	                         		
        	row8.TELEFONO = routines.system.JDBCUtil.getString(rs_tOracleInput_42, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_42 < 6) {
								row8.DIRECCION = null;
							} else {
	                         		
        	row8.DIRECCION = routines.system.JDBCUtil.getString(rs_tOracleInput_42, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_42 < 7) {
								row8.ESTREGISTRO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_42.getObject(7) != null) {
						row8.ESTREGISTRO_ID = rs_tOracleInput_42.getBigDecimal(7);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_42 begin ] stop
 */
	
	/**
	 * [tOracleInput_42 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 


	tos_count_tOracleInput_42++;

/**
 * [tOracleInput_42 main ] stop
 */
	
	/**
	 * [tOracleInput_42 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					


			   
			   

					row8Struct row8_HashRow = new row8Struct();
		   	   	   
				
				row8_HashRow.ID = row8.ID;
				
				row8_HashRow.PENDIENTES_ID = row8.PENDIENTES_ID;
				
				row8_HashRow.NOMBRES = row8.NOMBRES;
				
				row8_HashRow.DOCUMENTO = row8.DOCUMENTO;
				
				row8_HashRow.TELEFONO = row8.TELEFONO;
				
				row8_HashRow.DIRECCION = row8.DIRECCION;
				
				row8_HashRow.ESTREGISTRO_ID = row8.ESTREGISTRO_ID;
				
			tHash_Lookup_row8.put(row8_HashRow);
			
            




 


	tos_count_tAdvancedHash_row8++;

/**
 * [tAdvancedHash_row8 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_42 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_42 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

}
}finally{
	if (rs_tOracleInput_42 != null) {
		rs_tOracleInput_42.close();
	}
	if (stmt_tOracleInput_42 != null) {
		stmt_tOracleInput_42.close();
	}
}

globalMap.put("tOracleInput_42_NB_LINE",nb_line_tOracleInput_42);
 

ok_Hash.put("tOracleInput_42", true);
end_Hash.put("tOracleInput_42", System.currentTimeMillis());




/**
 * [tOracleInput_42 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

tHash_Lookup_row8.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row8", true);
end_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());




/**
 * [tAdvancedHash_row8 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_42 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_42_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableComparableLookupRow<row18Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal DMOVIMIENTOS_ID;

				public BigDecimal getDMOVIMIENTOS_ID () {
					return this.DMOVIMIENTOS_ID;
				}

				public Boolean DMOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean DMOVIMIENTOS_IDIsKey(){
				    return true;
				}
				public Integer DMOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer DMOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String DMOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String DMOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String DMOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String DMOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "DMOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal MOVIMIENTOS_ID;

				public BigDecimal getMOVIMIENTOS_ID () {
					return this.MOVIMIENTOS_ID;
				}

				public Boolean MOVIMIENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean MOVIMIENTOS_IDIsKey(){
				    return false;
				}
				public Integer MOVIMIENTOS_IDLength(){
				    return 0;
				}
				public Integer MOVIMIENTOS_IDPrecision(){
				    return 0;
				}
				public String MOVIMIENTOS_IDDefault(){
				
					return null;
				
				}
				public String MOVIMIENTOS_IDComment(){
				
				    return "";
				
				}
				public String MOVIMIENTOS_IDPattern(){
				
					return "";
				
				}
				public String MOVIMIENTOS_IDOriginalDbColumnName(){
				
					return "MOVIMIENTOS_ID";
				
				}

				
			    public BigDecimal CANTIDAD_DISPENSADA;

				public BigDecimal getCANTIDAD_DISPENSADA () {
					return this.CANTIDAD_DISPENSADA;
				}

				public Boolean CANTIDAD_DISPENSADAIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_DISPENSADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_DISPENSADALength(){
				    return 0;
				}
				public Integer CANTIDAD_DISPENSADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_DISPENSADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_DISPENSADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_DISPENSADAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_DISPENSADAOriginalDbColumnName(){
				
					return "CANTIDAD_DISPENSADA";
				
				}

				
			    public BigDecimal VALOR_UNITARIO_ITEM;

				public BigDecimal getVALOR_UNITARIO_ITEM () {
					return this.VALOR_UNITARIO_ITEM;
				}

				public Boolean VALOR_UNITARIO_ITEMIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIO_ITEMIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIO_ITEMLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIO_ITEMPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIO_ITEMDefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIO_ITEMComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIO_ITEMPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIO_ITEMOriginalDbColumnName(){
				
					return "VALOR_UNITARIO_ITEM";
				
				}

				
			    public BigDecimal PORCENTAJE_IVA;

				public BigDecimal getPORCENTAJE_IVA () {
					return this.PORCENTAJE_IVA;
				}

				public Boolean PORCENTAJE_IVAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_IVAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_IVALength(){
				    return 0;
				}
				public Integer PORCENTAJE_IVAPrecision(){
				    return 0;
				}
				public String PORCENTAJE_IVADefault(){
				
					return null;
				
				}
				public String PORCENTAJE_IVAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_IVAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_IVAOriginalDbColumnName(){
				
					return "PORCENTAJE_IVA";
				
				}

				
			    public BigDecimal VALOR_IVA_UNITARIO;

				public BigDecimal getVALOR_IVA_UNITARIO () {
					return this.VALOR_IVA_UNITARIO;
				}

				public Boolean VALOR_IVA_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_IVA_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_IVA_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_IVA_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_IVA_UNITARIO";
				
				}

				
			    public BigDecimal VALOR_INTERMEDIACION;

				public BigDecimal getVALOR_INTERMEDIACION () {
					return this.VALOR_INTERMEDIACION;
				}

				public Boolean VALOR_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_INTERMEDIACION";
				
				}

				
			    public BigDecimal PORCENTAJE_INTERMEDIACION;

				public BigDecimal getPORCENTAJE_INTERMEDIACION () {
					return this.PORCENTAJE_INTERMEDIACION;
				}

				public Boolean PORCENTAJE_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer PORCENTAJE_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String PORCENTAJE_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String PORCENTAJE_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_INTERMEDIACIONOriginalDbColumnName(){
				
					return "PORCENTAJE_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_IVA_INTERMEDIACION;

				public BigDecimal getVALOR_IVA_INTERMEDIACION () {
					return this.VALOR_IVA_INTERMEDIACION;
				}

				public Boolean VALOR_IVA_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_IVA_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_IVA_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_IVA_INTERMEDIACION";
				
				}

				
			    public BigDecimal VALOR_TOTAL_MEDICAMENTO;

				public BigDecimal getVALOR_TOTAL_MEDICAMENTO () {
					return this.VALOR_TOTAL_MEDICAMENTO;
				}

				public Boolean VALOR_TOTAL_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_MEDICAMENTOOriginalDbColumnName(){
				
					return "VALOR_TOTAL_MEDICAMENTO";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INTERMEDIACION;

				public BigDecimal getVALOR_TOTAL_INTERMEDIACION () {
					return this.VALOR_TOTAL_INTERMEDIACION;
				}

				public Boolean VALOR_TOTAL_INTERMEDIACIONIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INTERMEDIACIONIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONLength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INTERMEDIACIONPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INTERMEDIACIONDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INTERMEDIACIONOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INTERMEDIACION";
				
				}

				
			    public BigDecimal TOTAL_TRANSACCION_COMPLETA;

				public BigDecimal getTOTAL_TRANSACCION_COMPLETA () {
					return this.TOTAL_TRANSACCION_COMPLETA;
				}

				public Boolean TOTAL_TRANSACCION_COMPLETAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_TRANSACCION_COMPLETAIsKey(){
				    return false;
				}
				public Integer TOTAL_TRANSACCION_COMPLETALength(){
				    return 0;
				}
				public Integer TOTAL_TRANSACCION_COMPLETAPrecision(){
				    return 0;
				}
				public String TOTAL_TRANSACCION_COMPLETADefault(){
				
					return null;
				
				}
				public String TOTAL_TRANSACCION_COMPLETAComment(){
				
				    return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAPattern(){
				
					return "";
				
				}
				public String TOTAL_TRANSACCION_COMPLETAOriginalDbColumnName(){
				
					return "TOTAL_TRANSACCION_COMPLETA";
				
				}

				
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return false;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return 0;
				}
				public String INVENTARIOS_IDDefault(){
				
					return null;
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return 0;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return null;
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal DFORMULA_ID;

				public BigDecimal getDFORMULA_ID () {
					return this.DFORMULA_ID;
				}

				public Boolean DFORMULA_IDIsNullable(){
				    return true;
				}
				public Boolean DFORMULA_IDIsKey(){
				    return false;
				}
				public Integer DFORMULA_IDLength(){
				    return 0;
				}
				public Integer DFORMULA_IDPrecision(){
				    return 0;
				}
				public String DFORMULA_IDDefault(){
				
					return null;
				
				}
				public String DFORMULA_IDComment(){
				
				    return "";
				
				}
				public String DFORMULA_IDPattern(){
				
					return "";
				
				}
				public String DFORMULA_IDOriginalDbColumnName(){
				
					return "DFORMULA_ID";
				
				}

				
			    public java.util.Date FECHA_DISPENSACION;

				public java.util.Date getFECHA_DISPENSACION () {
					return this.FECHA_DISPENSACION;
				}

				public Boolean FECHA_DISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean FECHA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer FECHA_DISPENSACIONLength(){
				    return 0;
				}
				public Integer FECHA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String FECHA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String FECHA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String FECHA_DISPENSACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_DISPENSACIONOriginalDbColumnName(){
				
					return "FECHA_DISPENSACION";
				
				}

				
			    public String HORA_DISPENSACION;

				public String getHORA_DISPENSACION () {
					return this.HORA_DISPENSACION;
				}

				public Boolean HORA_DISPENSACIONIsNullable(){
				    return true;
				}
				public Boolean HORA_DISPENSACIONIsKey(){
				    return false;
				}
				public Integer HORA_DISPENSACIONLength(){
				    return 8;
				}
				public Integer HORA_DISPENSACIONPrecision(){
				    return 0;
				}
				public String HORA_DISPENSACIONDefault(){
				
					return null;
				
				}
				public String HORA_DISPENSACIONComment(){
				
				    return "";
				
				}
				public String HORA_DISPENSACIONPattern(){
				
					return "";
				
				}
				public String HORA_DISPENSACIONOriginalDbColumnName(){
				
					return "HORA_DISPENSACION";
				
				}

				
			    public BigDecimal VALOR_SUBTOTAL_FORMULA;

				public BigDecimal getVALOR_SUBTOTAL_FORMULA () {
					return this.VALOR_SUBTOTAL_FORMULA;
				}

				public Boolean VALOR_SUBTOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_SUBTOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_SUBTOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_SUBTOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_SUBTOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_SUBTOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_SUBTOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_SUBTOTAL_FORMULA";
				
				}

				
			    public BigDecimal VALOR_IVA_FORMULA;

				public BigDecimal getVALOR_IVA_FORMULA () {
					return this.VALOR_IVA_FORMULA;
				}

				public Boolean VALOR_IVA_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_IVA_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_IVA_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_IVA_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_FORMULAOriginalDbColumnName(){
				
					return "VALOR_IVA_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_FORMULA;

				public BigDecimal getVALOR_TOTAL_FORMULA () {
					return this.VALOR_TOTAL_FORMULA;
				}

				public Boolean VALOR_TOTAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_FORMULA";
				
				}

				
			    public BigDecimal SUBTOTAL_INT_FORMULA;

				public BigDecimal getSUBTOTAL_INT_FORMULA () {
					return this.SUBTOTAL_INT_FORMULA;
				}

				public Boolean SUBTOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean SUBTOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer SUBTOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer SUBTOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String SUBTOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String SUBTOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String SUBTOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String SUBTOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "SUBTOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_IVA_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_IVA_INT_FORMULA () {
					return this.VALOR_TOTAL_IVA_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_IVA_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_IVA_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_IVA_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_IVA_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_IVA_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_TOTAL_INT_FORMULA;

				public BigDecimal getVALOR_TOTAL_INT_FORMULA () {
					return this.VALOR_TOTAL_INT_FORMULA;
				}

				public Boolean VALOR_TOTAL_INT_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_INT_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_INT_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_TOTAL_INT_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_TOTAL_INT_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_INT_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_INT_FORMULAOriginalDbColumnName(){
				
					return "VALOR_TOTAL_INT_FORMULA";
				
				}

				
			    public BigDecimal VALOR_FINAL_FORMULA;

				public BigDecimal getVALOR_FINAL_FORMULA () {
					return this.VALOR_FINAL_FORMULA;
				}

				public Boolean VALOR_FINAL_FORMULAIsNullable(){
				    return true;
				}
				public Boolean VALOR_FINAL_FORMULAIsKey(){
				    return false;
				}
				public Integer VALOR_FINAL_FORMULALength(){
				    return 0;
				}
				public Integer VALOR_FINAL_FORMULAPrecision(){
				    return 0;
				}
				public String VALOR_FINAL_FORMULADefault(){
				
					return null;
				
				}
				public String VALOR_FINAL_FORMULAComment(){
				
				    return "";
				
				}
				public String VALOR_FINAL_FORMULAPattern(){
				
					return "";
				
				}
				public String VALOR_FINAL_FORMULAOriginalDbColumnName(){
				
					return "VALOR_FINAL_FORMULA";
				
				}

				
			    public BigDecimal UORG_DISPENSA_ID;

				public BigDecimal getUORG_DISPENSA_ID () {
					return this.UORG_DISPENSA_ID;
				}

				public Boolean UORG_DISPENSA_IDIsNullable(){
				    return true;
				}
				public Boolean UORG_DISPENSA_IDIsKey(){
				    return false;
				}
				public Integer UORG_DISPENSA_IDLength(){
				    return 0;
				}
				public Integer UORG_DISPENSA_IDPrecision(){
				    return 0;
				}
				public String UORG_DISPENSA_IDDefault(){
				
					return null;
				
				}
				public String UORG_DISPENSA_IDComment(){
				
				    return "";
				
				}
				public String UORG_DISPENSA_IDPattern(){
				
					return "";
				
				}
				public String UORG_DISPENSA_IDOriginalDbColumnName(){
				
					return "UORG_DISPENSA_ID";
				
				}

				
			    public String BODEGA;

				public String getBODEGA () {
					return this.BODEGA;
				}

				public Boolean BODEGAIsNullable(){
				    return true;
				}
				public Boolean BODEGAIsKey(){
				    return false;
				}
				public Integer BODEGALength(){
				    return 150;
				}
				public Integer BODEGAPrecision(){
				    return 0;
				}
				public String BODEGADefault(){
				
					return null;
				
				}
				public String BODEGAComment(){
				
				    return "";
				
				}
				public String BODEGAPattern(){
				
					return "";
				
				}
				public String BODEGAOriginalDbColumnName(){
				
					return "BODEGA";
				
				}

				
			    public java.util.Date FMOVIMIENTO;

				public java.util.Date getFMOVIMIENTO () {
					return this.FMOVIMIENTO;
				}

				public Boolean FMOVIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FMOVIMIENTOIsKey(){
				    return false;
				}
				public Integer FMOVIMIENTOLength(){
				    return 0;
				}
				public Integer FMOVIMIENTOPrecision(){
				    return 0;
				}
				public String FMOVIMIENTODefault(){
				
					return null;
				
				}
				public String FMOVIMIENTOComment(){
				
				    return "";
				
				}
				public String FMOVIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMOVIMIENTOOriginalDbColumnName(){
				
					return "FMOVIMIENTO";
				
				}

				
			    public BigDecimal USUARIOS_ID;

				public BigDecimal getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.MOVIMIENTOS_ID == null) ? 0 : this.MOVIMIENTOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row18Struct other = (row18Struct) obj;
		
						if (this.MOVIMIENTOS_ID == null) {
							if (other.MOVIMIENTOS_ID != null)
								return false;
						
						} else if (!this.MOVIMIENTOS_ID.equals(other.MOVIMIENTOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row18Struct other) {

		other.DMOVIMIENTOS_ID = this.DMOVIMIENTOS_ID;
	            other.MOVIMIENTOS_ID = this.MOVIMIENTOS_ID;
	            other.CANTIDAD_DISPENSADA = this.CANTIDAD_DISPENSADA;
	            other.VALOR_UNITARIO_ITEM = this.VALOR_UNITARIO_ITEM;
	            other.PORCENTAJE_IVA = this.PORCENTAJE_IVA;
	            other.VALOR_IVA_UNITARIO = this.VALOR_IVA_UNITARIO;
	            other.VALOR_INTERMEDIACION = this.VALOR_INTERMEDIACION;
	            other.PORCENTAJE_INTERMEDIACION = this.PORCENTAJE_INTERMEDIACION;
	            other.VALOR_IVA_INTERMEDIACION = this.VALOR_IVA_INTERMEDIACION;
	            other.VALOR_TOTAL_MEDICAMENTO = this.VALOR_TOTAL_MEDICAMENTO;
	            other.VALOR_TOTAL_INTERMEDIACION = this.VALOR_TOTAL_INTERMEDIACION;
	            other.TOTAL_TRANSACCION_COMPLETA = this.TOTAL_TRANSACCION_COMPLETA;
	            other.INVENTARIOS_ID = this.INVENTARIOS_ID;
	            other.HDCONTRATOS_ID = this.HDCONTRATOS_ID;
	            other.DFORMULA_ID = this.DFORMULA_ID;
	            other.FECHA_DISPENSACION = this.FECHA_DISPENSACION;
	            other.HORA_DISPENSACION = this.HORA_DISPENSACION;
	            other.VALOR_SUBTOTAL_FORMULA = this.VALOR_SUBTOTAL_FORMULA;
	            other.VALOR_IVA_FORMULA = this.VALOR_IVA_FORMULA;
	            other.VALOR_TOTAL_FORMULA = this.VALOR_TOTAL_FORMULA;
	            other.SUBTOTAL_INT_FORMULA = this.SUBTOTAL_INT_FORMULA;
	            other.VALOR_TOTAL_IVA_INT_FORMULA = this.VALOR_TOTAL_IVA_INT_FORMULA;
	            other.VALOR_TOTAL_INT_FORMULA = this.VALOR_TOTAL_INT_FORMULA;
	            other.VALOR_FINAL_FORMULA = this.VALOR_FINAL_FORMULA;
	            other.UORG_DISPENSA_ID = this.UORG_DISPENSA_ID;
	            other.BODEGA = this.BODEGA;
	            other.FMOVIMIENTO = this.FMOVIMIENTO;
	            other.USUARIOS_ID = this.USUARIOS_ID;
	            
	}

	public void copyKeysDataTo(row18Struct other) {

		other.MOVIMIENTOS_ID = this.MOVIMIENTOS_ID;
	            	
	}




	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.MOVIMIENTOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.MOVIMIENTOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MOVIMIENTOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.DMOVIMIENTOS_ID = (BigDecimal) ois.readObject();
					
       			    	this.CANTIDAD_DISPENSADA = (BigDecimal) ois.readObject();
					
       			    	this.VALOR_UNITARIO_ITEM = (BigDecimal) ois.readObject();
					
       			    	this.PORCENTAJE_IVA = (BigDecimal) ois.readObject();
					
       			    	this.VALOR_IVA_UNITARIO = (BigDecimal) ois.readObject();
					
       			    	this.VALOR_INTERMEDIACION = (BigDecimal) ois.readObject();
					
       			    	this.PORCENTAJE_INTERMEDIACION = (BigDecimal) ois.readObject();
					
       			    	this.VALOR_IVA_INTERMEDIACION = (BigDecimal) ois.readObject();
					
       			    	this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) ois.readObject();
					
       			    	this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) ois.readObject();
					
       			    	this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) ois.readObject();
					
       			    	this.INVENTARIOS_ID = (BigDecimal) ois.readObject();
					
       			    	this.HDCONTRATOS_ID = (BigDecimal) ois.readObject();
					
       			    	this.DFORMULA_ID = (BigDecimal) ois.readObject();
					
						this.FECHA_DISPENSACION = readDate(dis,ois);
					
						this.HORA_DISPENSACION = readString(dis,ois);
					
       			    	this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) ois.readObject();
					
       			    	this.VALOR_IVA_FORMULA = (BigDecimal) ois.readObject();
					
       			    	this.VALOR_TOTAL_FORMULA = (BigDecimal) ois.readObject();
					
       			    	this.SUBTOTAL_INT_FORMULA = (BigDecimal) ois.readObject();
					
       			    	this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) ois.readObject();
					
       			    	this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) ois.readObject();
					
       			    	this.VALOR_FINAL_FORMULA = (BigDecimal) ois.readObject();
					
       			    	this.UORG_DISPENSA_ID = (BigDecimal) ois.readObject();
					
						this.BODEGA = readString(dis,ois);
					
						this.FMOVIMIENTO = readDate(dis,ois);
					
       			    	this.USUARIOS_ID = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.DMOVIMIENTOS_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.CANTIDAD_DISPENSADA = (BigDecimal) objectIn.readObject();
					
       			    	this.VALOR_UNITARIO_ITEM = (BigDecimal) objectIn.readObject();
					
       			    	this.PORCENTAJE_IVA = (BigDecimal) objectIn.readObject();
					
       			    	this.VALOR_IVA_UNITARIO = (BigDecimal) objectIn.readObject();
					
       			    	this.VALOR_INTERMEDIACION = (BigDecimal) objectIn.readObject();
					
       			    	this.PORCENTAJE_INTERMEDIACION = (BigDecimal) objectIn.readObject();
					
       			    	this.VALOR_IVA_INTERMEDIACION = (BigDecimal) objectIn.readObject();
					
       			    	this.VALOR_TOTAL_MEDICAMENTO = (BigDecimal) objectIn.readObject();
					
       			    	this.VALOR_TOTAL_INTERMEDIACION = (BigDecimal) objectIn.readObject();
					
       			    	this.TOTAL_TRANSACCION_COMPLETA = (BigDecimal) objectIn.readObject();
					
       			    	this.INVENTARIOS_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.HDCONTRATOS_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.DFORMULA_ID = (BigDecimal) objectIn.readObject();
					
						this.FECHA_DISPENSACION = readDate(dis,objectIn);
					
						this.HORA_DISPENSACION = readString(dis,objectIn);
					
       			    	this.VALOR_SUBTOTAL_FORMULA = (BigDecimal) objectIn.readObject();
					
       			    	this.VALOR_IVA_FORMULA = (BigDecimal) objectIn.readObject();
					
       			    	this.VALOR_TOTAL_FORMULA = (BigDecimal) objectIn.readObject();
					
       			    	this.SUBTOTAL_INT_FORMULA = (BigDecimal) objectIn.readObject();
					
       			    	this.VALOR_TOTAL_IVA_INT_FORMULA = (BigDecimal) objectIn.readObject();
					
       			    	this.VALOR_TOTAL_INT_FORMULA = (BigDecimal) objectIn.readObject();
					
       			    	this.VALOR_FINAL_FORMULA = (BigDecimal) objectIn.readObject();
					
       			    	this.UORG_DISPENSA_ID = (BigDecimal) objectIn.readObject();
					
						this.BODEGA = readString(dis,objectIn);
					
						this.FMOVIMIENTO = readDate(dis,objectIn);
					
       			    	this.USUARIOS_ID = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.DMOVIMIENTOS_ID);
					
       			    	oos.writeObject(this.CANTIDAD_DISPENSADA);
					
       			    	oos.writeObject(this.VALOR_UNITARIO_ITEM);
					
       			    	oos.writeObject(this.PORCENTAJE_IVA);
					
       			    	oos.writeObject(this.VALOR_IVA_UNITARIO);
					
       			    	oos.writeObject(this.VALOR_INTERMEDIACION);
					
       			    	oos.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
       			    	oos.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
       			    	oos.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
       			    	oos.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
       			    	oos.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
       			    	oos.writeObject(this.INVENTARIOS_ID);
					
       			    	oos.writeObject(this.HDCONTRATOS_ID);
					
       			    	oos.writeObject(this.DFORMULA_ID);
					
						writeDate(this.FECHA_DISPENSACION, dos, oos);
					
						writeString(this.HORA_DISPENSACION, dos, oos);
					
       			    	oos.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
       			    	oos.writeObject(this.VALOR_IVA_FORMULA);
					
       			    	oos.writeObject(this.VALOR_TOTAL_FORMULA);
					
       			    	oos.writeObject(this.SUBTOTAL_INT_FORMULA);
					
       			    	oos.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
       			    	oos.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
       			    	oos.writeObject(this.VALOR_FINAL_FORMULA);
					
       			    	oos.writeObject(this.UORG_DISPENSA_ID);
					
						writeString(this.BODEGA, dos, oos);
					
						writeDate(this.FMOVIMIENTO, dos, oos);
					
       			    	oos.writeObject(this.USUARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.DMOVIMIENTOS_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.CANTIDAD_DISPENSADA);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_UNITARIO_ITEM);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.PORCENTAJE_IVA);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_IVA_UNITARIO);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_INTERMEDIACION);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.PORCENTAJE_INTERMEDIACION);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_IVA_INTERMEDIACION);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_TOTAL_MEDICAMENTO);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_TOTAL_INTERMEDIACION);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.TOTAL_TRANSACCION_COMPLETA);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.INVENTARIOS_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.HDCONTRATOS_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.DFORMULA_ID);
					
						writeDate(this.FECHA_DISPENSACION, dos, objectOut);
					
						writeString(this.HORA_DISPENSACION, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_SUBTOTAL_FORMULA);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_IVA_FORMULA);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_TOTAL_FORMULA);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.SUBTOTAL_INT_FORMULA);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_TOTAL_IVA_INT_FORMULA);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_TOTAL_INT_FORMULA);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VALOR_FINAL_FORMULA);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.UORG_DISPENSA_ID);
					
						writeString(this.BODEGA, dos, objectOut);
					
						writeDate(this.FMOVIMIENTO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.USUARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DMOVIMIENTOS_ID="+String.valueOf(DMOVIMIENTOS_ID));
		sb.append(",MOVIMIENTOS_ID="+String.valueOf(MOVIMIENTOS_ID));
		sb.append(",CANTIDAD_DISPENSADA="+String.valueOf(CANTIDAD_DISPENSADA));
		sb.append(",VALOR_UNITARIO_ITEM="+String.valueOf(VALOR_UNITARIO_ITEM));
		sb.append(",PORCENTAJE_IVA="+String.valueOf(PORCENTAJE_IVA));
		sb.append(",VALOR_IVA_UNITARIO="+String.valueOf(VALOR_IVA_UNITARIO));
		sb.append(",VALOR_INTERMEDIACION="+String.valueOf(VALOR_INTERMEDIACION));
		sb.append(",PORCENTAJE_INTERMEDIACION="+String.valueOf(PORCENTAJE_INTERMEDIACION));
		sb.append(",VALOR_IVA_INTERMEDIACION="+String.valueOf(VALOR_IVA_INTERMEDIACION));
		sb.append(",VALOR_TOTAL_MEDICAMENTO="+String.valueOf(VALOR_TOTAL_MEDICAMENTO));
		sb.append(",VALOR_TOTAL_INTERMEDIACION="+String.valueOf(VALOR_TOTAL_INTERMEDIACION));
		sb.append(",TOTAL_TRANSACCION_COMPLETA="+String.valueOf(TOTAL_TRANSACCION_COMPLETA));
		sb.append(",INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",DFORMULA_ID="+String.valueOf(DFORMULA_ID));
		sb.append(",FECHA_DISPENSACION="+String.valueOf(FECHA_DISPENSACION));
		sb.append(",HORA_DISPENSACION="+HORA_DISPENSACION);
		sb.append(",VALOR_SUBTOTAL_FORMULA="+String.valueOf(VALOR_SUBTOTAL_FORMULA));
		sb.append(",VALOR_IVA_FORMULA="+String.valueOf(VALOR_IVA_FORMULA));
		sb.append(",VALOR_TOTAL_FORMULA="+String.valueOf(VALOR_TOTAL_FORMULA));
		sb.append(",SUBTOTAL_INT_FORMULA="+String.valueOf(SUBTOTAL_INT_FORMULA));
		sb.append(",VALOR_TOTAL_IVA_INT_FORMULA="+String.valueOf(VALOR_TOTAL_IVA_INT_FORMULA));
		sb.append(",VALOR_TOTAL_INT_FORMULA="+String.valueOf(VALOR_TOTAL_INT_FORMULA));
		sb.append(",VALOR_FINAL_FORMULA="+String.valueOf(VALOR_FINAL_FORMULA));
		sb.append(",UORG_DISPENSA_ID="+String.valueOf(UORG_DISPENSA_ID));
		sb.append(",BODEGA="+BODEGA);
		sb.append(",FMOVIMIENTO="+String.valueOf(FMOVIMIENTO));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.MOVIMIENTOS_ID, other.MOVIMIENTOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_34Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_34_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();




	
	/**
	 * [tAdvancedHash_row18 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row18", false);
		start_Hash.put("tAdvancedHash_row18", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tAdvancedHash_row18 = 0;
		

			   		// connection name:row18
			   		// source node:tHashInput_34 - inputs:(after_tOracleInput_57) outputs:(row18,row18) | target node:tAdvancedHash_row18 - inputs:(row18) outputs:()
			   		// linked node: tMap_20 - inputs:(out18,row18) outputs:(out19)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row18 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct> tHash_Lookup_row18 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row18Struct>getLookup(matchingModeEnum_row18);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row18", tHash_Lookup_row18);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row18 begin ] stop
 */



	
	/**
	 * [tHashInput_34 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_34", false);
		start_Hash.put("tHashInput_34", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_34";
	
	
		int tos_count_tHashInput_34 = 0;
		


int nb_line_tHashInput_34 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_34=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row139Struct> tHashFile_tHashInput_34 = mf_tHashInput_34.getAdvancedMemoryHashFile("tHashFile_Medicamentos_" + pid +"_tHashOutput_15");
if(tHashFile_tHashInput_34==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row139Struct> iterator_tHashInput_34 = tHashFile_tHashInput_34.iterator();
while (iterator_tHashInput_34.hasNext()) {
    row139Struct next_tHashInput_34 = iterator_tHashInput_34.next();

	row18.DMOVIMIENTOS_ID = next_tHashInput_34.DMOVIMIENTOS_ID;
	row18.MOVIMIENTOS_ID = next_tHashInput_34.MOVIMIENTOS_ID;
	row18.CANTIDAD_DISPENSADA = next_tHashInput_34.CANTIDAD_DISPENSADA;
	row18.VALOR_UNITARIO_ITEM = next_tHashInput_34.VALOR_UNITARIO_ITEM;
	row18.PORCENTAJE_IVA = next_tHashInput_34.PORCENTAJE_IVA;
	row18.VALOR_IVA_UNITARIO = next_tHashInput_34.VALOR_IVA_UNITARIO;
	row18.VALOR_INTERMEDIACION = next_tHashInput_34.VALOR_INTERMEDIACION;
	row18.PORCENTAJE_INTERMEDIACION = next_tHashInput_34.PORCENTAJE_INTERMEDIACION;
	row18.VALOR_IVA_INTERMEDIACION = next_tHashInput_34.VALOR_IVA_INTERMEDIACION;
	row18.VALOR_TOTAL_MEDICAMENTO = next_tHashInput_34.VALOR_TOTAL_MEDICAMENTO;
	row18.VALOR_TOTAL_INTERMEDIACION = next_tHashInput_34.VALOR_TOTAL_INTERMEDIACION;
	row18.TOTAL_TRANSACCION_COMPLETA = next_tHashInput_34.TOTAL_TRANSACCION_COMPLETA;
	row18.INVENTARIOS_ID = next_tHashInput_34.INVENTARIOS_ID;
	row18.HDCONTRATOS_ID = next_tHashInput_34.HDCONTRATOS_ID;
	row18.DFORMULA_ID = next_tHashInput_34.DFORMULA_ID;
	row18.FECHA_DISPENSACION = next_tHashInput_34.FECHA_DISPENSACION;
	row18.HORA_DISPENSACION = next_tHashInput_34.HORA_DISPENSACION;
	row18.VALOR_SUBTOTAL_FORMULA = next_tHashInput_34.VALOR_SUBTOTAL_FORMULA;
	row18.VALOR_IVA_FORMULA = next_tHashInput_34.VALOR_IVA_FORMULA;
	row18.VALOR_TOTAL_FORMULA = next_tHashInput_34.VALOR_TOTAL_FORMULA;
	row18.SUBTOTAL_INT_FORMULA = next_tHashInput_34.SUBTOTAL_INT_FORMULA;
	row18.VALOR_TOTAL_IVA_INT_FORMULA = next_tHashInput_34.VALOR_TOTAL_IVA_INT_FORMULA;
	row18.VALOR_TOTAL_INT_FORMULA = next_tHashInput_34.VALOR_TOTAL_INT_FORMULA;
	row18.VALOR_FINAL_FORMULA = next_tHashInput_34.VALOR_FINAL_FORMULA;
	row18.UORG_DISPENSA_ID = next_tHashInput_34.UORG_DISPENSA_ID;
	row18.BODEGA = next_tHashInput_34.BODEGA;
	row18.FMOVIMIENTO = next_tHashInput_34.FMOVIMIENTO;
	row18.USUARIOS_ID = next_tHashInput_34.USUARIOS_ID;

 



/**
 * [tHashInput_34 begin ] stop
 */
	
	/**
	 * [tHashInput_34 main ] start
	 */

	

	
	
	currentComponent="tHashInput_34";
	
	

 


	tos_count_tHashInput_34++;

/**
 * [tHashInput_34 main ] stop
 */
	
	/**
	 * [tHashInput_34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_34";
	
	

 



/**
 * [tHashInput_34 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					


			   
			   

					row18Struct row18_HashRow = new row18Struct();
		   	   	   
				
				row18_HashRow.DMOVIMIENTOS_ID = row18.DMOVIMIENTOS_ID;
				
				row18_HashRow.MOVIMIENTOS_ID = row18.MOVIMIENTOS_ID;
				
				row18_HashRow.CANTIDAD_DISPENSADA = row18.CANTIDAD_DISPENSADA;
				
				row18_HashRow.VALOR_UNITARIO_ITEM = row18.VALOR_UNITARIO_ITEM;
				
				row18_HashRow.PORCENTAJE_IVA = row18.PORCENTAJE_IVA;
				
				row18_HashRow.VALOR_IVA_UNITARIO = row18.VALOR_IVA_UNITARIO;
				
				row18_HashRow.VALOR_INTERMEDIACION = row18.VALOR_INTERMEDIACION;
				
				row18_HashRow.PORCENTAJE_INTERMEDIACION = row18.PORCENTAJE_INTERMEDIACION;
				
				row18_HashRow.VALOR_IVA_INTERMEDIACION = row18.VALOR_IVA_INTERMEDIACION;
				
				row18_HashRow.VALOR_TOTAL_MEDICAMENTO = row18.VALOR_TOTAL_MEDICAMENTO;
				
				row18_HashRow.VALOR_TOTAL_INTERMEDIACION = row18.VALOR_TOTAL_INTERMEDIACION;
				
				row18_HashRow.TOTAL_TRANSACCION_COMPLETA = row18.TOTAL_TRANSACCION_COMPLETA;
				
				row18_HashRow.INVENTARIOS_ID = row18.INVENTARIOS_ID;
				
				row18_HashRow.HDCONTRATOS_ID = row18.HDCONTRATOS_ID;
				
				row18_HashRow.DFORMULA_ID = row18.DFORMULA_ID;
				
				row18_HashRow.FECHA_DISPENSACION = row18.FECHA_DISPENSACION;
				
				row18_HashRow.HORA_DISPENSACION = row18.HORA_DISPENSACION;
				
				row18_HashRow.VALOR_SUBTOTAL_FORMULA = row18.VALOR_SUBTOTAL_FORMULA;
				
				row18_HashRow.VALOR_IVA_FORMULA = row18.VALOR_IVA_FORMULA;
				
				row18_HashRow.VALOR_TOTAL_FORMULA = row18.VALOR_TOTAL_FORMULA;
				
				row18_HashRow.SUBTOTAL_INT_FORMULA = row18.SUBTOTAL_INT_FORMULA;
				
				row18_HashRow.VALOR_TOTAL_IVA_INT_FORMULA = row18.VALOR_TOTAL_IVA_INT_FORMULA;
				
				row18_HashRow.VALOR_TOTAL_INT_FORMULA = row18.VALOR_TOTAL_INT_FORMULA;
				
				row18_HashRow.VALOR_FINAL_FORMULA = row18.VALOR_FINAL_FORMULA;
				
				row18_HashRow.UORG_DISPENSA_ID = row18.UORG_DISPENSA_ID;
				
				row18_HashRow.BODEGA = row18.BODEGA;
				
				row18_HashRow.FMOVIMIENTO = row18.FMOVIMIENTO;
				
				row18_HashRow.USUARIOS_ID = row18.USUARIOS_ID;
				
			tHash_Lookup_row18.put(row18_HashRow);
			
            




 


	tos_count_tAdvancedHash_row18++;

/**
 * [tAdvancedHash_row18 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

 



/**
 * [tAdvancedHash_row18 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row18 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

 



/**
 * [tAdvancedHash_row18 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_34 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_34";
	
	

 



/**
 * [tHashInput_34 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_34 end ] start
	 */

	

	
	
	currentComponent="tHashInput_34";
	
	
    

		
			nb_line_tHashInput_34++;
		}	
    		
    		mf_tHashInput_34.clearCache("tHashFile_Medicamentos_" + pid +"_tHashOutput_15");
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_Medicamentos_" + pid +"_tHashOutput_15");
	


	globalMap.put("tHashInput_34_NB_LINE", nb_line_tHashInput_34);       

 

ok_Hash.put("tHashInput_34", true);
end_Hash.put("tHashInput_34", System.currentTimeMillis());




/**
 * [tHashInput_34 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

tHash_Lookup_row18.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row18", true);
end_Hash.put("tAdvancedHash_row18", System.currentTimeMillis());




/**
 * [tAdvancedHash_row18 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_34 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_34";
	
	

 



/**
 * [tHashInput_34 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

 



/**
 * [tAdvancedHash_row18 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_34_SUBPROCESS_STATE", 1);
	}
	


public static class row19Struct implements routines.system.IPersistableComparableLookupRow<row19Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return true;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return null;
				}
				public String INVENTARIOS_IDDefault(){
				
					return "";
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public BigDecimal INV_PRODUCTOS_ID;

				public BigDecimal getINV_PRODUCTOS_ID () {
					return this.INV_PRODUCTOS_ID;
				}

				public Boolean INV_PRODUCTOS_IDIsNullable(){
				    return false;
				}
				public Boolean INV_PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer INV_PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer INV_PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String INV_PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String INV_PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String INV_PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String INV_PRODUCTOS_IDOriginalDbColumnName(){
				
					return "INV_PRODUCTOS_ID";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 25;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public java.util.Date FECHA_VENCIMIENTO;

				public java.util.Date getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public BigDecimal INV_DCONTRATOS_ID;

				public BigDecimal getINV_DCONTRATOS_ID () {
					return this.INV_DCONTRATOS_ID;
				}

				public Boolean INV_DCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean INV_DCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer INV_DCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer INV_DCONTRATOS_IDPrecision(){
				    return null;
				}
				public String INV_DCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String INV_DCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String INV_DCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String INV_DCONTRATOS_IDOriginalDbColumnName(){
				
					return "INV_DCONTRATOS_ID";
				
				}

				
			    public String CODIGOBARRAS;

				public String getCODIGOBARRAS () {
					return this.CODIGOBARRAS;
				}

				public Boolean CODIGOBARRASIsNullable(){
				    return false;
				}
				public Boolean CODIGOBARRASIsKey(){
				    return false;
				}
				public Integer CODIGOBARRASLength(){
				    return 500;
				}
				public Integer CODIGOBARRASPrecision(){
				    return 0;
				}
				public String CODIGOBARRASDefault(){
				
					return null;
				
				}
				public String CODIGOBARRASComment(){
				
				    return "";
				
				}
				public String CODIGOBARRASPattern(){
				
					return "";
				
				}
				public String CODIGOBARRASOriginalDbColumnName(){
				
					return "CODIGOBARRAS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.INVENTARIOS_ID == null) ? 0 : this.INVENTARIOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row19Struct other = (row19Struct) obj;
		
						if (this.INVENTARIOS_ID == null) {
							if (other.INVENTARIOS_ID != null)
								return false;
						
						} else if (!this.INVENTARIOS_ID.equals(other.INVENTARIOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row19Struct other) {

		other.INVENTARIOS_ID = this.INVENTARIOS_ID;
	            other.INV_PRODUCTOS_ID = this.INV_PRODUCTOS_ID;
	            other.LOTE = this.LOTE;
	            other.FECHA_VENCIMIENTO = this.FECHA_VENCIMIENTO;
	            other.INV_DCONTRATOS_ID = this.INV_DCONTRATOS_ID;
	            other.CODIGOBARRAS = this.CODIGOBARRAS;
	            
	}

	public void copyKeysDataTo(row19Struct other) {

		other.INVENTARIOS_ID = this.INVENTARIOS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.INV_PRODUCTOS_ID = (BigDecimal) ois.readObject();
					
						this.LOTE = readString(dis,ois);
					
						this.FECHA_VENCIMIENTO = readDate(dis,ois);
					
       			    	this.INV_DCONTRATOS_ID = (BigDecimal) ois.readObject();
					
						this.CODIGOBARRAS = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.INV_PRODUCTOS_ID = (BigDecimal) objectIn.readObject();
					
						this.LOTE = readString(dis,objectIn);
					
						this.FECHA_VENCIMIENTO = readDate(dis,objectIn);
					
       			    	this.INV_DCONTRATOS_ID = (BigDecimal) objectIn.readObject();
					
						this.CODIGOBARRAS = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.INV_PRODUCTOS_ID);
					
						writeString(this.LOTE, dos, oos);
					
						writeDate(this.FECHA_VENCIMIENTO, dos, oos);
					
       			    	oos.writeObject(this.INV_DCONTRATOS_ID);
					
						writeString(this.CODIGOBARRAS, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.INV_PRODUCTOS_ID);
					
						writeString(this.LOTE, dos, objectOut);
					
						writeDate(this.FECHA_VENCIMIENTO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.INV_DCONTRATOS_ID);
					
						writeString(this.CODIGOBARRAS, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",INV_PRODUCTOS_ID="+String.valueOf(INV_PRODUCTOS_ID));
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+String.valueOf(FECHA_VENCIMIENTO));
		sb.append(",INV_DCONTRATOS_ID="+String.valueOf(INV_DCONTRATOS_ID));
		sb.append(",CODIGOBARRAS="+CODIGOBARRAS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.INVENTARIOS_ID, other.INVENTARIOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_35Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_35_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row19Struct row19 = new row19Struct();




	
	/**
	 * [tAdvancedHash_row19 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row19", false);
		start_Hash.put("tAdvancedHash_row19", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tAdvancedHash_row19 = 0;
		

			   		// connection name:row19
			   		// source node:tHashInput_35 - inputs:(after_tOracleInput_57) outputs:(row19,row19) | target node:tAdvancedHash_row19 - inputs:(row19) outputs:()
			   		// linked node: tMap_21 - inputs:(out19,row19) outputs:(out20)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row19 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct> tHash_Lookup_row19 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row19Struct>getLookup(matchingModeEnum_row19);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row19", tHash_Lookup_row19);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row19 begin ] stop
 */



	
	/**
	 * [tHashInput_35 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_35", false);
		start_Hash.put("tHashInput_35", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_35";
	
	
		int tos_count_tHashInput_35 = 0;
		


int nb_line_tHashInput_35 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_35=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row78Struct> tHashFile_tHashInput_35 = mf_tHashInput_35.getAdvancedMemoryHashFile("tHashFile_Medicamentos_" + pid +"_tHashOutput_13");
if(tHashFile_tHashInput_35==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row78Struct> iterator_tHashInput_35 = tHashFile_tHashInput_35.iterator();
while (iterator_tHashInput_35.hasNext()) {
    row78Struct next_tHashInput_35 = iterator_tHashInput_35.next();

	row19.INVENTARIOS_ID = next_tHashInput_35.INVENTARIOS_ID;
	row19.INV_PRODUCTOS_ID = next_tHashInput_35.INV_PRODUCTOS_ID;
	row19.LOTE = next_tHashInput_35.LOTE;
	row19.FECHA_VENCIMIENTO = next_tHashInput_35.FECHA_VENCIMIENTO;
	row19.INV_DCONTRATOS_ID = next_tHashInput_35.INV_DCONTRATOS_ID;
	row19.CODIGOBARRAS = next_tHashInput_35.CODIGOBARRAS;

 



/**
 * [tHashInput_35 begin ] stop
 */
	
	/**
	 * [tHashInput_35 main ] start
	 */

	

	
	
	currentComponent="tHashInput_35";
	
	

 


	tos_count_tHashInput_35++;

/**
 * [tHashInput_35 main ] stop
 */
	
	/**
	 * [tHashInput_35 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_35";
	
	

 



/**
 * [tHashInput_35 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					


			   
			   

					row19Struct row19_HashRow = new row19Struct();
		   	   	   
				
				row19_HashRow.INVENTARIOS_ID = row19.INVENTARIOS_ID;
				
				row19_HashRow.INV_PRODUCTOS_ID = row19.INV_PRODUCTOS_ID;
				
				row19_HashRow.LOTE = row19.LOTE;
				
				row19_HashRow.FECHA_VENCIMIENTO = row19.FECHA_VENCIMIENTO;
				
				row19_HashRow.INV_DCONTRATOS_ID = row19.INV_DCONTRATOS_ID;
				
				row19_HashRow.CODIGOBARRAS = row19.CODIGOBARRAS;
				
			tHash_Lookup_row19.put(row19_HashRow);
			
            




 


	tos_count_tAdvancedHash_row19++;

/**
 * [tAdvancedHash_row19 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row19 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_35 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_35";
	
	

 



/**
 * [tHashInput_35 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_35 end ] start
	 */

	

	
	
	currentComponent="tHashInput_35";
	
	
    

		
			nb_line_tHashInput_35++;
		}	
    		
    		mf_tHashInput_35.clearCache("tHashFile_Medicamentos_" + pid +"_tHashOutput_13");
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_Medicamentos_" + pid +"_tHashOutput_13");
	


	globalMap.put("tHashInput_35_NB_LINE", nb_line_tHashInput_35);       

 

ok_Hash.put("tHashInput_35", true);
end_Hash.put("tHashInput_35", System.currentTimeMillis());




/**
 * [tHashInput_35 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

tHash_Lookup_row19.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row19", true);
end_Hash.put("tAdvancedHash_row19", System.currentTimeMillis());




/**
 * [tAdvancedHash_row19 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_35 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_35";
	
	

 



/**
 * [tHashInput_35 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_35_SUBPROCESS_STATE", 1);
	}
	


public static class row80Struct implements routines.system.IPersistableComparableLookupRow<row80Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal INVENTARIOS_ID;

				public BigDecimal getINVENTARIOS_ID () {
					return this.INVENTARIOS_ID;
				}

				public Boolean INVENTARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean INVENTARIOS_IDIsKey(){
				    return true;
				}
				public Integer INVENTARIOS_IDLength(){
				    return 0;
				}
				public Integer INVENTARIOS_IDPrecision(){
				    return null;
				}
				public String INVENTARIOS_IDDefault(){
				
					return "";
				
				}
				public String INVENTARIOS_IDComment(){
				
				    return "";
				
				}
				public String INVENTARIOS_IDPattern(){
				
					return "";
				
				}
				public String INVENTARIOS_IDOriginalDbColumnName(){
				
					return "INVENTARIOS_ID";
				
				}

				
			    public BigDecimal INV_PRODUCTOS_ID;

				public BigDecimal getINV_PRODUCTOS_ID () {
					return this.INV_PRODUCTOS_ID;
				}

				public Boolean INV_PRODUCTOS_IDIsNullable(){
				    return false;
				}
				public Boolean INV_PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer INV_PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer INV_PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String INV_PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String INV_PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String INV_PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String INV_PRODUCTOS_IDOriginalDbColumnName(){
				
					return "INV_PRODUCTOS_ID";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 25;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public java.util.Date FECHA_VENCIMIENTO;

				public java.util.Date getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public BigDecimal INV_DCONTRATOS_ID;

				public BigDecimal getINV_DCONTRATOS_ID () {
					return this.INV_DCONTRATOS_ID;
				}

				public Boolean INV_DCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean INV_DCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer INV_DCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer INV_DCONTRATOS_IDPrecision(){
				    return null;
				}
				public String INV_DCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String INV_DCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String INV_DCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String INV_DCONTRATOS_IDOriginalDbColumnName(){
				
					return "INV_DCONTRATOS_ID";
				
				}

				
			    public String CODIGOBARRAS;

				public String getCODIGOBARRAS () {
					return this.CODIGOBARRAS;
				}

				public Boolean CODIGOBARRASIsNullable(){
				    return false;
				}
				public Boolean CODIGOBARRASIsKey(){
				    return false;
				}
				public Integer CODIGOBARRASLength(){
				    return 500;
				}
				public Integer CODIGOBARRASPrecision(){
				    return 0;
				}
				public String CODIGOBARRASDefault(){
				
					return null;
				
				}
				public String CODIGOBARRASComment(){
				
				    return "";
				
				}
				public String CODIGOBARRASPattern(){
				
					return "";
				
				}
				public String CODIGOBARRASOriginalDbColumnName(){
				
					return "CODIGOBARRAS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.INVENTARIOS_ID == null) ? 0 : this.INVENTARIOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row80Struct other = (row80Struct) obj;
		
						if (this.INVENTARIOS_ID == null) {
							if (other.INVENTARIOS_ID != null)
								return false;
						
						} else if (!this.INVENTARIOS_ID.equals(other.INVENTARIOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row80Struct other) {

		other.INVENTARIOS_ID = this.INVENTARIOS_ID;
	            other.INV_PRODUCTOS_ID = this.INV_PRODUCTOS_ID;
	            other.LOTE = this.LOTE;
	            other.FECHA_VENCIMIENTO = this.FECHA_VENCIMIENTO;
	            other.INV_DCONTRATOS_ID = this.INV_DCONTRATOS_ID;
	            other.CODIGOBARRAS = this.CODIGOBARRAS;
	            
	}

	public void copyKeysDataTo(row80Struct other) {

		other.INVENTARIOS_ID = this.INVENTARIOS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.INVENTARIOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.INVENTARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.INVENTARIOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.INV_PRODUCTOS_ID = (BigDecimal) ois.readObject();
					
						this.LOTE = readString(dis,ois);
					
						this.FECHA_VENCIMIENTO = readDate(dis,ois);
					
       			    	this.INV_DCONTRATOS_ID = (BigDecimal) ois.readObject();
					
						this.CODIGOBARRAS = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.INV_PRODUCTOS_ID = (BigDecimal) objectIn.readObject();
					
						this.LOTE = readString(dis,objectIn);
					
						this.FECHA_VENCIMIENTO = readDate(dis,objectIn);
					
       			    	this.INV_DCONTRATOS_ID = (BigDecimal) objectIn.readObject();
					
						this.CODIGOBARRAS = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.INV_PRODUCTOS_ID);
					
						writeString(this.LOTE, dos, oos);
					
						writeDate(this.FECHA_VENCIMIENTO, dos, oos);
					
       			    	oos.writeObject(this.INV_DCONTRATOS_ID);
					
						writeString(this.CODIGOBARRAS, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.INV_PRODUCTOS_ID);
					
						writeString(this.LOTE, dos, objectOut);
					
						writeDate(this.FECHA_VENCIMIENTO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.INV_DCONTRATOS_ID);
					
						writeString(this.CODIGOBARRAS, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("INVENTARIOS_ID="+String.valueOf(INVENTARIOS_ID));
		sb.append(",INV_PRODUCTOS_ID="+String.valueOf(INV_PRODUCTOS_ID));
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+String.valueOf(FECHA_VENCIMIENTO));
		sb.append(",INV_DCONTRATOS_ID="+String.valueOf(INV_DCONTRATOS_ID));
		sb.append(",CODIGOBARRAS="+CODIGOBARRAS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row80Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.INVENTARIOS_ID, other.INVENTARIOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row80Struct row80 = new row80Struct();




	
	/**
	 * [tAdvancedHash_row80 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row80", false);
		start_Hash.put("tAdvancedHash_row80", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row80";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row80");
					}
				
		int tos_count_tAdvancedHash_row80 = 0;
		

			   		// connection name:row80
			   		// source node:tHashInput_7 - inputs:(after_tHashInput_29) outputs:(row80,row80) | target node:tAdvancedHash_row80 - inputs:(row80) outputs:()
			   		// linked node: tMap_13 - inputs:(row166,row80) outputs:(out12)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row80 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct> tHash_Lookup_row80 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row80Struct>getLookup(matchingModeEnum_row80);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row80", tHash_Lookup_row80);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row80 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row78Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_Medicamentos_" + pid +"_tHashOutput_13");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row78Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row78Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row80.INVENTARIOS_ID = next_tHashInput_7.INVENTARIOS_ID;
	row80.INV_PRODUCTOS_ID = next_tHashInput_7.INV_PRODUCTOS_ID;
	row80.LOTE = next_tHashInput_7.LOTE;
	row80.FECHA_VENCIMIENTO = next_tHashInput_7.FECHA_VENCIMIENTO;
	row80.INV_DCONTRATOS_ID = next_tHashInput_7.INV_DCONTRATOS_ID;
	row80.CODIGOBARRAS = next_tHashInput_7.CODIGOBARRAS;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row80 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row80";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row80"
						
						);
					}
					


			   
			   

					row80Struct row80_HashRow = new row80Struct();
		   	   	   
				
				row80_HashRow.INVENTARIOS_ID = row80.INVENTARIOS_ID;
				
				row80_HashRow.INV_PRODUCTOS_ID = row80.INV_PRODUCTOS_ID;
				
				row80_HashRow.LOTE = row80.LOTE;
				
				row80_HashRow.FECHA_VENCIMIENTO = row80.FECHA_VENCIMIENTO;
				
				row80_HashRow.INV_DCONTRATOS_ID = row80.INV_DCONTRATOS_ID;
				
				row80_HashRow.CODIGOBARRAS = row80.CODIGOBARRAS;
				
			tHash_Lookup_row80.put(row80_HashRow);
			
            




 


	tos_count_tAdvancedHash_row80++;

/**
 * [tAdvancedHash_row80 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row80 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row80";
	
	

 



/**
 * [tAdvancedHash_row80 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row80 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row80";
	
	

 



/**
 * [tAdvancedHash_row80 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_Medicamentos_" + pid +"_tHashOutput_13");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row80 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row80";
	
	

tHash_Lookup_row80.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row80");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row80", true);
end_Hash.put("tAdvancedHash_row80", System.currentTimeMillis());




/**
 * [tAdvancedHash_row80 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row80 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row80";
	
	

 



/**
 * [tAdvancedHash_row80 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableComparableLookupRow<row3Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return false;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return null;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal DCONTRATOS_ID;

				public BigDecimal getDCONTRATOS_ID () {
					return this.DCONTRATOS_ID;
				}

				public Boolean DCONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean DCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer DCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer DCONTRATOS_IDPrecision(){
				    return null;
				}
				public String DCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String DCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String DCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String DCONTRATOS_IDOriginalDbColumnName(){
				
					return "DCONTRATOS_ID";
				
				}

				
			    public String CODIGO_OPERADOR_MEDICAMENTO;

				public String getCODIGO_OPERADOR_MEDICAMENTO () {
					return this.CODIGO_OPERADOR_MEDICAMENTO;
				}

				public Boolean CODIGO_OPERADOR_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADOR_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADOR_MEDICAMENTOLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADOR_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADOR_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOR_MEDICAMENTOOriginalDbColumnName(){
				
					return "CODIGO_OPERADOR_MEDICAMENTO";
				
				}

				
			    public String TIPO_MEDICAMENTO;

				public String getTIPO_MEDICAMENTO () {
					return this.TIPO_MEDICAMENTO;
				}

				public Boolean TIPO_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_MEDICAMENTOLength(){
				    return 200;
				}
				public Integer TIPO_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String TIPO_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String TIPO_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_MEDICAMENTOOriginalDbColumnName(){
				
					return "TIPO_MEDICAMENTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.HDCONTRATOS_ID == null) ? 0 : this.HDCONTRATOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row3Struct other = (row3Struct) obj;
		
						if (this.HDCONTRATOS_ID == null) {
							if (other.HDCONTRATOS_ID != null)
								return false;
						
						} else if (!this.HDCONTRATOS_ID.equals(other.HDCONTRATOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row3Struct other) {

		other.HDCONTRATOS_ID = this.HDCONTRATOS_ID;
	            other.DCONTRATOS_ID = this.DCONTRATOS_ID;
	            other.CODIGO_OPERADOR_MEDICAMENTO = this.CODIGO_OPERADOR_MEDICAMENTO;
	            other.TIPO_MEDICAMENTO = this.TIPO_MEDICAMENTO;
	            
	}

	public void copyKeysDataTo(row3Struct other) {

		other.HDCONTRATOS_ID = this.HDCONTRATOS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.HDCONTRATOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDCONTRATOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.DCONTRATOS_ID = (BigDecimal) ois.readObject();
					
						this.CODIGO_OPERADOR_MEDICAMENTO = readString(dis,ois);
					
						this.TIPO_MEDICAMENTO = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.DCONTRATOS_ID = (BigDecimal) objectIn.readObject();
					
						this.CODIGO_OPERADOR_MEDICAMENTO = readString(dis,objectIn);
					
						this.TIPO_MEDICAMENTO = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.DCONTRATOS_ID);
					
						writeString(this.CODIGO_OPERADOR_MEDICAMENTO, dos, oos);
					
						writeString(this.TIPO_MEDICAMENTO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.DCONTRATOS_ID);
					
						writeString(this.CODIGO_OPERADOR_MEDICAMENTO, dos, objectOut);
					
						writeString(this.TIPO_MEDICAMENTO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",DCONTRATOS_ID="+String.valueOf(DCONTRATOS_ID));
		sb.append(",CODIGO_OPERADOR_MEDICAMENTO="+CODIGO_OPERADOR_MEDICAMENTO);
		sb.append(",TIPO_MEDICAMENTO="+TIPO_MEDICAMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.HDCONTRATOS_ID, other.HDCONTRATOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_33Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_33_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();




	
	/**
	 * [tAdvancedHash_row3 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row3", false);
		start_Hash.put("tAdvancedHash_row3", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tAdvancedHash_row3 = 0;
		

			   		// connection name:row3
			   		// source node:tOracleInput_33 - inputs:(after_tHashInput_29) outputs:(row3,row3) | target node:tAdvancedHash_row3 - inputs:(row3) outputs:()
			   		// linked node: tMap_14 - inputs:(out12,row3) outputs:(out13)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row3 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct> tHash_Lookup_row3 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row3Struct>getLookup(matchingModeEnum_row3);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row3", tHash_Lookup_row3);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row3 begin ] stop
 */



	
	/**
	 * [tOracleInput_33 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_33", false);
		start_Hash.put("tOracleInput_33", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_33";
	
	
		int tos_count_tOracleInput_33 = 0;
		
	


	
		    int nb_line_tOracleInput_33 = 0;
		    java.sql.Connection conn_tOracleInput_33 = null;
				conn_tOracleInput_33 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_33 = false;
				boolean isConnectionWrapped_tOracleInput_33 = !(conn_tOracleInput_33 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_33.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_33 = null;
                if (isConnectionWrapped_tOracleInput_33) {
					unwrappedOraConn_tOracleInput_33 = conn_tOracleInput_33.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_33 != null) {
                        isTimeZoneNull_tOracleInput_33 = (unwrappedOraConn_tOracleInput_33.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_33 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_33).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_33) {
					java.sql.Statement stmtGetTZ_tOracleInput_33 = conn_tOracleInput_33.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_33 = stmtGetTZ_tOracleInput_33.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_33 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_33.next()) {
						sessionTimezone_tOracleInput_33 = rsGetTZ_tOracleInput_33.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_33 && unwrappedOraConn_tOracleInput_33 != null) {
                        unwrappedOraConn_tOracleInput_33.setSessionTimeZone(sessionTimezone_tOracleInput_33);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_33).setSessionTimeZone(sessionTimezone_tOracleInput_33);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_33 = conn_tOracleInput_33.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_33.setFetchSize(1000);


		    String dbquery_tOracleInput_33 = "SELECT \n    hdcon.ID AS Hdcontratos_id\n  , dcon.id AS dcontratos_id\n  , DCON.CODIGO AS CODIGO_OPERADOR_MEDICAMENTO\n"
+"  , tcarac.nombre AS TIPO_MEDICAMENTO\nFROM med_dcontratos dcon \nleft join  med_hdcontratos hdcon on hdcon.dcontratos_i"
+"d=dcon.id\nleft join med_tcaracteristicas tcarac  on tcarac.id=hdcon.tcaracteristicas_id";
		    

		    globalMap.put("tOracleInput_33_QUERY",dbquery_tOracleInput_33);

		    java.sql.ResultSet rs_tOracleInput_33 = null;

		    try {
		    	rs_tOracleInput_33 = stmt_tOracleInput_33.executeQuery(dbquery_tOracleInput_33);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_33 = rs_tOracleInput_33.getMetaData();
		    	int colQtyInRs_tOracleInput_33 = rsmd_tOracleInput_33.getColumnCount();

		    String tmpContent_tOracleInput_33 = null;
		    
		    
		    while (rs_tOracleInput_33.next()) {
		        nb_line_tOracleInput_33++;
		        
							if(colQtyInRs_tOracleInput_33 < 1) {
								row3.HDCONTRATOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_33.getObject(1) != null) {
						row3.HDCONTRATOS_ID = rs_tOracleInput_33.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_33 < 2) {
								row3.DCONTRATOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_33.getObject(2) != null) {
						row3.DCONTRATOS_ID = rs_tOracleInput_33.getBigDecimal(2);
					} else {
				
						row3.DCONTRATOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_33 < 3) {
								row3.CODIGO_OPERADOR_MEDICAMENTO = null;
							} else {
	                         		
        	row3.CODIGO_OPERADOR_MEDICAMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_33, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_33 < 4) {
								row3.TIPO_MEDICAMENTO = null;
							} else {
	                         		
        	row3.TIPO_MEDICAMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_33, 4, false);
		                    }
					




 



/**
 * [tOracleInput_33 begin ] stop
 */
	
	/**
	 * [tOracleInput_33 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 


	tos_count_tOracleInput_33++;

/**
 * [tOracleInput_33 main ] stop
 */
	
	/**
	 * [tOracleInput_33 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					


			   
			   

					row3Struct row3_HashRow = new row3Struct();
		   	   	   
				
				row3_HashRow.HDCONTRATOS_ID = row3.HDCONTRATOS_ID;
				
				row3_HashRow.DCONTRATOS_ID = row3.DCONTRATOS_ID;
				
				row3_HashRow.CODIGO_OPERADOR_MEDICAMENTO = row3.CODIGO_OPERADOR_MEDICAMENTO;
				
				row3_HashRow.TIPO_MEDICAMENTO = row3.TIPO_MEDICAMENTO;
				
			tHash_Lookup_row3.put(row3_HashRow);
			
            




 


	tos_count_tAdvancedHash_row3++;

/**
 * [tAdvancedHash_row3 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row3 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_33 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_33 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

}
}finally{
	if (rs_tOracleInput_33 != null) {
		rs_tOracleInput_33.close();
	}
	if (stmt_tOracleInput_33 != null) {
		stmt_tOracleInput_33.close();
	}
}

globalMap.put("tOracleInput_33_NB_LINE",nb_line_tOracleInput_33);
 

ok_Hash.put("tOracleInput_33", true);
end_Hash.put("tOracleInput_33", System.currentTimeMillis());




/**
 * [tOracleInput_33 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

tHash_Lookup_row3.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row3", true);
end_Hash.put("tAdvancedHash_row3", System.currentTimeMillis());




/**
 * [tAdvancedHash_row3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_33 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_33_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableComparableLookupRow<row7Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return false;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public String CARACTERISTICAS_MEDICAMENTO;

				public String getCARACTERISTICAS_MEDICAMENTO () {
					return this.CARACTERISTICAS_MEDICAMENTO;
				}

				public Boolean CARACTERISTICAS_MEDICAMENTOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAS_MEDICAMENTOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICAS_MEDICAMENTOLength(){
				    return 4000;
				}
				public Integer CARACTERISTICAS_MEDICAMENTOPrecision(){
				    return 0;
				}
				public String CARACTERISTICAS_MEDICAMENTODefault(){
				
					return null;
				
				}
				public String CARACTERISTICAS_MEDICAMENTOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAS_MEDICAMENTOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICAS_MEDICAMENTOOriginalDbColumnName(){
				
					return "CARACTERISTICAS_MEDICAMENTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PRODUCTOS_ID == null) ? 0 : this.PRODUCTOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row7Struct other = (row7Struct) obj;
		
						if (this.PRODUCTOS_ID == null) {
							if (other.PRODUCTOS_ID != null)
								return false;
						
						} else if (!this.PRODUCTOS_ID.equals(other.PRODUCTOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row7Struct other) {

		other.PRODUCTOS_ID = this.PRODUCTOS_ID;
	            other.CARACTERISTICAS_MEDICAMENTO = this.CARACTERISTICAS_MEDICAMENTO;
	            
	}

	public void copyKeysDataTo(row7Struct other) {

		other.PRODUCTOS_ID = this.PRODUCTOS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.CARACTERISTICAS_MEDICAMENTO = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.CARACTERISTICAS_MEDICAMENTO = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.CARACTERISTICAS_MEDICAMENTO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.CARACTERISTICAS_MEDICAMENTO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",CARACTERISTICAS_MEDICAMENTO="+CARACTERISTICAS_MEDICAMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PRODUCTOS_ID, other.PRODUCTOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_53Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_53_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();




	
	/**
	 * [tAdvancedHash_row7 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row7", false);
		start_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tAdvancedHash_row7 = 0;
		

			   		// connection name:row7
			   		// source node:tOracleInput_53 - inputs:(after_tHashInput_29) outputs:(row7,row7) | target node:tAdvancedHash_row7 - inputs:(row7) outputs:()
			   		// linked node: tMap_15 - inputs:(out13,row7) outputs:(out14)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row7 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row7Struct>getLookup(matchingModeEnum_row7);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row7", tHash_Lookup_row7);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row7 begin ] stop
 */



	
	/**
	 * [tOracleInput_53 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_53", false);
		start_Hash.put("tOracleInput_53", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_53";
	
	
		int tos_count_tOracleInput_53 = 0;
		
	


	
		    int nb_line_tOracleInput_53 = 0;
		    java.sql.Connection conn_tOracleInput_53 = null;
				conn_tOracleInput_53 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_53 = false;
				boolean isConnectionWrapped_tOracleInput_53 = !(conn_tOracleInput_53 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_53.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_53 = null;
                if (isConnectionWrapped_tOracleInput_53) {
					unwrappedOraConn_tOracleInput_53 = conn_tOracleInput_53.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_53 != null) {
                        isTimeZoneNull_tOracleInput_53 = (unwrappedOraConn_tOracleInput_53.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_53 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_53).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_53) {
					java.sql.Statement stmtGetTZ_tOracleInput_53 = conn_tOracleInput_53.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_53 = stmtGetTZ_tOracleInput_53.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_53 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_53.next()) {
						sessionTimezone_tOracleInput_53 = rsGetTZ_tOracleInput_53.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_53 && unwrappedOraConn_tOracleInput_53 != null) {
                        unwrappedOraConn_tOracleInput_53.setSessionTimeZone(sessionTimezone_tOracleInput_53);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_53).setSessionTimeZone(sessionTimezone_tOracleInput_53);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_53 = conn_tOracleInput_53.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_53.setFetchSize(1000);


		    String dbquery_tOracleInput_53 = "SELECT  MDP.productos_id\n        ,LISTAGG(tcaract.sigla, '; ') WITHIN GROUP(ORDER BY tcaract.sigla) AS CARACTERISTICAS"
+"_MEDICAMENTO\nFROM med_caractdproductos caract\nINNER JOIN med_tcaracteristicas tcaract on tcaract.id = caract.tcaracter"
+"isticas_id\nINNER JOIN MED_DPRODUCTOS MDP ON MDP.ID = caract.dproductos_id\nGROUP BY MDP.productos_id";
		    

		    globalMap.put("tOracleInput_53_QUERY",dbquery_tOracleInput_53);

		    java.sql.ResultSet rs_tOracleInput_53 = null;

		    try {
		    	rs_tOracleInput_53 = stmt_tOracleInput_53.executeQuery(dbquery_tOracleInput_53);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_53 = rs_tOracleInput_53.getMetaData();
		    	int colQtyInRs_tOracleInput_53 = rsmd_tOracleInput_53.getColumnCount();

		    String tmpContent_tOracleInput_53 = null;
		    
		    
		    while (rs_tOracleInput_53.next()) {
		        nb_line_tOracleInput_53++;
		        
							if(colQtyInRs_tOracleInput_53 < 1) {
								row7.PRODUCTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_53.getObject(1) != null) {
						row7.PRODUCTOS_ID = rs_tOracleInput_53.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_53 < 2) {
								row7.CARACTERISTICAS_MEDICAMENTO = null;
							} else {
	                         		
        	row7.CARACTERISTICAS_MEDICAMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_53, 2, false);
		                    }
					




 



/**
 * [tOracleInput_53 begin ] stop
 */
	
	/**
	 * [tOracleInput_53 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_53";
	
	

 


	tos_count_tOracleInput_53++;

/**
 * [tOracleInput_53 main ] stop
 */
	
	/**
	 * [tOracleInput_53 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_53";
	
	

 



/**
 * [tOracleInput_53 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					


			   
			   

					row7Struct row7_HashRow = new row7Struct();
		   	   	   
				
				row7_HashRow.PRODUCTOS_ID = row7.PRODUCTOS_ID;
				
				row7_HashRow.CARACTERISTICAS_MEDICAMENTO = row7.CARACTERISTICAS_MEDICAMENTO;
				
			tHash_Lookup_row7.put(row7_HashRow);
			
            




 


	tos_count_tAdvancedHash_row7++;

/**
 * [tAdvancedHash_row7 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_53 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_53";
	
	

 



/**
 * [tOracleInput_53 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_53 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_53";
	
	

}
}finally{
	if (rs_tOracleInput_53 != null) {
		rs_tOracleInput_53.close();
	}
	if (stmt_tOracleInput_53 != null) {
		stmt_tOracleInput_53.close();
	}
}

globalMap.put("tOracleInput_53_NB_LINE",nb_line_tOracleInput_53);
 

ok_Hash.put("tOracleInput_53", true);
end_Hash.put("tOracleInput_53", System.currentTimeMillis());




/**
 * [tOracleInput_53 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

tHash_Lookup_row7.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row7", true);
end_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());




/**
 * [tAdvancedHash_row7 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_53 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_53";
	
	

 



/**
 * [tOracleInput_53 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_53_SUBPROCESS_STATE", 1);
	}
	


public static class row4Struct implements routines.system.IPersistableComparableLookupRow<row4Struct> {
    final static byte[] commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
    static byte[] commonByteArray_REP_MEDICAMENTOS_F5_Medicamentos = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "SALUDSIS\".\"ISEQ$$_92784\".nextval";
				
				}
				public String IDComment(){
				
				    return "PK- Llave primaria";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return null;
				
				}
				public String PERSONAS_IDComment(){
				
				    return "FK-GEN_PERSONAS";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public String USUARIO;

				public String getUSUARIO () {
					return this.USUARIO;
				}

				public Boolean USUARIOIsNullable(){
				    return false;
				}
				public Boolean USUARIOIsKey(){
				    return false;
				}
				public Integer USUARIOLength(){
				    return 50;
				}
				public Integer USUARIOPrecision(){
				    return 0;
				}
				public String USUARIODefault(){
				
					return null;
				
				}
				public String USUARIOComment(){
				
				    return "Nombre de usuario ";
				
				}
				public String USUARIOPattern(){
				
					return "";
				
				}
				public String USUARIOOriginalDbColumnName(){
				
					return "USUARIO";
				
				}

				
			    public Object CLAVE;

				public Object getCLAVE () {
					return this.CLAVE;
				}

				public Boolean CLAVEIsNullable(){
				    return false;
				}
				public Boolean CLAVEIsKey(){
				    return false;
				}
				public Integer CLAVELength(){
				    return 4000;
				}
				public Integer CLAVEPrecision(){
				    return 0;
				}
				public String CLAVEDefault(){
				
					return null;
				
				}
				public String CLAVEComment(){
				
				    return "Clave del Usuario";
				
				}
				public String CLAVEPattern(){
				
					return "";
				
				}
				public String CLAVEOriginalDbColumnName(){
				
					return "CLAVE";
				
				}

				
			    public Object SELLO_SEGURIDAD;

				public Object getSELLO_SEGURIDAD () {
					return this.SELLO_SEGURIDAD;
				}

				public Boolean SELLO_SEGURIDADIsNullable(){
				    return false;
				}
				public Boolean SELLO_SEGURIDADIsKey(){
				    return false;
				}
				public Integer SELLO_SEGURIDADLength(){
				    return 4000;
				}
				public Integer SELLO_SEGURIDADPrecision(){
				    return 0;
				}
				public String SELLO_SEGURIDADDefault(){
				
					return null;
				
				}
				public String SELLO_SEGURIDADComment(){
				
				    return "Sello de seguridad";
				
				}
				public String SELLO_SEGURIDADPattern(){
				
					return "";
				
				}
				public String SELLO_SEGURIDADOriginalDbColumnName(){
				
					return "SELLO_SEGURIDAD";
				
				}

				
			    public BigDecimal TUSUARIOS_ID;

				public BigDecimal getTUSUARIOS_ID () {
					return this.TUSUARIOS_ID;
				}

				public Boolean TUSUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean TUSUARIOS_IDIsKey(){
				    return false;
				}
				public Integer TUSUARIOS_IDLength(){
				    return 0;
				}
				public Integer TUSUARIOS_IDPrecision(){
				    return null;
				}
				public String TUSUARIOS_IDDefault(){
				
					return null;
				
				}
				public String TUSUARIOS_IDComment(){
				
				    return "FK - GEN_TUSUARIOS";
				
				}
				public String TUSUARIOS_IDPattern(){
				
					return "";
				
				}
				public String TUSUARIOS_IDOriginalDbColumnName(){
				
					return "TUSUARIOS_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 10;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return "'Activo'";
				
				}
				public String ESTADOComment(){
				
				    return "Estado del usuario (Activo o Inactivo)";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public BigDecimal ESTREGISTRO_ID;

				public BigDecimal getESTREGISTRO_ID () {
					return this.ESTREGISTRO_ID;
				}

				public Boolean ESTREGISTRO_IDIsNullable(){
				    return false;
				}
				public Boolean ESTREGISTRO_IDIsKey(){
				    return false;
				}
				public Integer ESTREGISTRO_IDLength(){
				    return 0;
				}
				public Integer ESTREGISTRO_IDPrecision(){
				    return null;
				}
				public String ESTREGISTRO_IDDefault(){
				
					return "1";
				
				}
				public String ESTREGISTRO_IDComment(){
				
				    return "FK - GEN_ESTREGISTRO (Estado del Registro)";
				
				}
				public String ESTREGISTRO_IDPattern(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDOriginalDbColumnName(){
				
					return "ESTREGISTRO_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return null;
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "FK - GEN_ENTAPORTANTES (Entidad Aportante para la cual trabaja el usuario)";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal INTENTOS;

				public BigDecimal getINTENTOS () {
					return this.INTENTOS;
				}

				public Boolean INTENTOSIsNullable(){
				    return true;
				}
				public Boolean INTENTOSIsKey(){
				    return false;
				}
				public Integer INTENTOSLength(){
				    return 0;
				}
				public Integer INTENTOSPrecision(){
				    return null;
				}
				public String INTENTOSDefault(){
				
					return "0";
				
				}
				public String INTENTOSComment(){
				
				    return "Numero de intentos de acceso fallidos para la contrase\u00F1a actual";
				
				}
				public String INTENTOSPattern(){
				
					return "";
				
				}
				public String INTENTOSOriginalDbColumnName(){
				
					return "INTENTOS";
				
				}

				
			    public java.util.Date FMODIFICACION;

				public java.util.Date getFMODIFICACION () {
					return this.FMODIFICACION;
				}

				public Boolean FMODIFICACIONIsNullable(){
				    return true;
				}
				public Boolean FMODIFICACIONIsKey(){
				    return false;
				}
				public Integer FMODIFICACIONLength(){
				    return 7;
				}
				public Integer FMODIFICACIONPrecision(){
				    return 0;
				}
				public String FMODIFICACIONDefault(){
				
					return "'sysdate'";
				
				}
				public String FMODIFICACIONComment(){
				
				    return "Fecha de modificacion del usuario";
				
				}
				public String FMODIFICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FMODIFICACIONOriginalDbColumnName(){
				
					return "FMODIFICACION";
				
				}

				
			    public BigDecimal ESTILO_GRAFICO;

				public BigDecimal getESTILO_GRAFICO () {
					return this.ESTILO_GRAFICO;
				}

				public Boolean ESTILO_GRAFICOIsNullable(){
				    return true;
				}
				public Boolean ESTILO_GRAFICOIsKey(){
				    return false;
				}
				public Integer ESTILO_GRAFICOLength(){
				    return 0;
				}
				public Integer ESTILO_GRAFICOPrecision(){
				    return null;
				}
				public String ESTILO_GRAFICODefault(){
				
					return "1";
				
				}
				public String ESTILO_GRAFICOComment(){
				
				    return "Estilo grafico para el usuario (1:Estilo1, 2:Estilo2, 3:Estilo3)";
				
				}
				public String ESTILO_GRAFICOPattern(){
				
					return "";
				
				}
				public String ESTILO_GRAFICOOriginalDbColumnName(){
				
					return "ESTILO_GRAFICO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row4Struct other = (row4Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row4Struct other) {

		other.ID = this.ID;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            other.USUARIO = this.USUARIO;
	            other.CLAVE = this.CLAVE;
	            other.SELLO_SEGURIDAD = this.SELLO_SEGURIDAD;
	            other.TUSUARIOS_ID = this.TUSUARIOS_ID;
	            other.ESTADO = this.ESTADO;
	            other.ESTREGISTRO_ID = this.ESTREGISTRO_ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.INTENTOS = this.INTENTOS;
	            other.FMODIFICACION = this.FMODIFICACION;
	            other.ESTILO_GRAFICO = this.ESTILO_GRAFICO;
	            
	}

	public void copyKeysDataTo(row4Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_MEDICAMENTOS_F5_Medicamentos) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.PERSONAS_ID = (BigDecimal) ois.readObject();
					
						this.USUARIO = readString(dis,ois);
					
       			    	this.CLAVE = (Object) ois.readObject();
					
       			    	this.SELLO_SEGURIDAD = (Object) ois.readObject();
					
       			    	this.TUSUARIOS_ID = (BigDecimal) ois.readObject();
					
						this.ESTADO = readString(dis,ois);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) ois.readObject();
					
       			    	this.ENTAPORTANTES_ID = (BigDecimal) ois.readObject();
					
       			    	this.INTENTOS = (BigDecimal) ois.readObject();
					
						this.FMODIFICACION = readDate(dis,ois);
					
       			    	this.ESTILO_GRAFICO = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.PERSONAS_ID = (BigDecimal) objectIn.readObject();
					
						this.USUARIO = readString(dis,objectIn);
					
       			    	this.CLAVE = (Object) objectIn.readObject();
					
       			    	this.SELLO_SEGURIDAD = (Object) objectIn.readObject();
					
       			    	this.TUSUARIOS_ID = (BigDecimal) objectIn.readObject();
					
						this.ESTADO = readString(dis,objectIn);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.ENTAPORTANTES_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.INTENTOS = (BigDecimal) objectIn.readObject();
					
						this.FMODIFICACION = readDate(dis,objectIn);
					
       			    	this.ESTILO_GRAFICO = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.PERSONAS_ID);
					
						writeString(this.USUARIO, dos, oos);
					
       			    	oos.writeObject(this.CLAVE);
					
       			    	oos.writeObject(this.SELLO_SEGURIDAD);
					
       			    	oos.writeObject(this.TUSUARIOS_ID);
					
						writeString(this.ESTADO, dos, oos);
					
       			    	oos.writeObject(this.ESTREGISTRO_ID);
					
       			    	oos.writeObject(this.ENTAPORTANTES_ID);
					
       			    	oos.writeObject(this.INTENTOS);
					
						writeDate(this.FMODIFICACION, dos, oos);
					
       			    	oos.writeObject(this.ESTILO_GRAFICO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.PERSONAS_ID);
					
						writeString(this.USUARIO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.CLAVE);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.SELLO_SEGURIDAD);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.TUSUARIOS_ID);
					
						writeString(this.ESTADO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ESTREGISTRO_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ENTAPORTANTES_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.INTENTOS);
					
						writeDate(this.FMODIFICACION, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ESTILO_GRAFICO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",USUARIO="+USUARIO);
		sb.append(",CLAVE="+String.valueOf(CLAVE));
		sb.append(",SELLO_SEGURIDAD="+String.valueOf(SELLO_SEGURIDAD));
		sb.append(",TUSUARIOS_ID="+String.valueOf(TUSUARIOS_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",ESTREGISTRO_ID="+String.valueOf(ESTREGISTRO_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",INTENTOS="+String.valueOf(INTENTOS));
		sb.append(",FMODIFICACION="+String.valueOf(FMODIFICACION));
		sb.append(",ESTILO_GRAFICO="+String.valueOf(ESTILO_GRAFICO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();




	
	/**
	 * [tAdvancedHash_row4 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row4", false);
		start_Hash.put("tAdvancedHash_row4", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tAdvancedHash_row4 = 0;
		

			   		// connection name:row4
			   		// source node:tOracleInput_2 - inputs:(after_tHashInput_29) outputs:(row4,row4) | target node:tAdvancedHash_row4 - inputs:(row4) outputs:()
			   		// linked node: tMap_16 - inputs:(out14,row4) outputs:(out15)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row4 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct> tHash_Lookup_row4 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row4Struct>getLookup(matchingModeEnum_row4);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row4", tHash_Lookup_row4);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row4 begin ] stop
 */



	
	/**
	 * [tOracleInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_2", false);
		start_Hash.put("tOracleInput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_2";
	
	
		int tos_count_tOracleInput_2 = 0;
		
	


	
		    int nb_line_tOracleInput_2 = 0;
		    java.sql.Connection conn_tOracleInput_2 = null;
				conn_tOracleInput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_2 = false;
				boolean isConnectionWrapped_tOracleInput_2 = !(conn_tOracleInput_2 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_2.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_2 = null;
                if (isConnectionWrapped_tOracleInput_2) {
					unwrappedOraConn_tOracleInput_2 = conn_tOracleInput_2.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_2 != null) {
                        isTimeZoneNull_tOracleInput_2 = (unwrappedOraConn_tOracleInput_2.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_2 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_2).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_2) {
					java.sql.Statement stmtGetTZ_tOracleInput_2 = conn_tOracleInput_2.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_2 = stmtGetTZ_tOracleInput_2.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_2 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_2.next()) {
						sessionTimezone_tOracleInput_2 = rsGetTZ_tOracleInput_2.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_2 && unwrappedOraConn_tOracleInput_2 != null) {
                        unwrappedOraConn_tOracleInput_2.setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_2).setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_2 = conn_tOracleInput_2.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_2.setFetchSize(1000);


		    String dbquery_tOracleInput_2 = "SELECT \n  "+context.db_origen_Schema+".GEN_USUARIOS.\"ID\", \n  "+context.db_origen_Schema+".GEN_USUARIOS.PERSONAS_ID, \n  "+context.db_origen_Schema+".GEN_USUARIOS.USUARIO, \n  "+context.db_origen_Schema+".GEN_USUARIOS.CLAVE, \n  "+context.db_origen_Schema+".GEN_USUARIOS.SELLO_SEGURIDAD, \n  "+context.db_origen_Schema+".GEN_USUARIOS.TUSUARIOS_ID, \n  "+context.db_origen_Schema+".GEN_USUARIOS.ESTADO, \n  "+context.db_origen_Schema+".GEN_USUARIOS.ESTREGISTRO_ID, \n  "+context.db_origen_Schema+".GEN_USUARIOS.ENTAPORTANTES_ID, \n  "+context.db_origen_Schema+".GEN_USUARIOS.INTENTOS, \n  "+context.db_origen_Schema+".GEN_USUARIOS.FMODIFICACION, \n  "+context.db_origen_Schema+".GEN_USUARIOS.ESTILO_GRAFICO\nFROM "+context.db_origen_Schema+".GEN_USUARIOS";
		    

		    globalMap.put("tOracleInput_2_QUERY",dbquery_tOracleInput_2);

		    java.sql.ResultSet rs_tOracleInput_2 = null;

		    try {
		    	rs_tOracleInput_2 = stmt_tOracleInput_2.executeQuery(dbquery_tOracleInput_2);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_2 = rs_tOracleInput_2.getMetaData();
		    	int colQtyInRs_tOracleInput_2 = rsmd_tOracleInput_2.getColumnCount();

		    String tmpContent_tOracleInput_2 = null;
		    
		    
		    while (rs_tOracleInput_2.next()) {
		        nb_line_tOracleInput_2++;
		        
							if(colQtyInRs_tOracleInput_2 < 1) {
								row4.ID = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(1) != null) {
						row4.ID = rs_tOracleInput_2.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 2) {
								row4.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(2) != null) {
						row4.PERSONAS_ID = rs_tOracleInput_2.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 3) {
								row4.USUARIO = null;
							} else {
	                         		
        	row4.USUARIO = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 4) {
								row4.CLAVE = null;
							} else {
		                          
				Object tmpObj_4_tOracleInput_2 = rs_tOracleInput_2.getObject(4);
				if(tmpObj_4_tOracleInput_2 != null) {
					row4.CLAVE = tmpObj_4_tOracleInput_2;
				} else {
						throw new RuntimeException("Null value in non-Nullable column");
				}
		                    }
							if(colQtyInRs_tOracleInput_2 < 5) {
								row4.SELLO_SEGURIDAD = null;
							} else {
		                          
				Object tmpObj_5_tOracleInput_2 = rs_tOracleInput_2.getObject(5);
				if(tmpObj_5_tOracleInput_2 != null) {
					row4.SELLO_SEGURIDAD = tmpObj_5_tOracleInput_2;
				} else {
						throw new RuntimeException("Null value in non-Nullable column");
				}
		                    }
							if(colQtyInRs_tOracleInput_2 < 6) {
								row4.TUSUARIOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(6) != null) {
						row4.TUSUARIOS_ID = rs_tOracleInput_2.getBigDecimal(6);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 7) {
								row4.ESTADO = null;
							} else {
	                         		
        	row4.ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 8) {
								row4.ESTREGISTRO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(8) != null) {
						row4.ESTREGISTRO_ID = rs_tOracleInput_2.getBigDecimal(8);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 9) {
								row4.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(9) != null) {
						row4.ENTAPORTANTES_ID = rs_tOracleInput_2.getBigDecimal(9);
					} else {
				
						row4.ENTAPORTANTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 10) {
								row4.INTENTOS = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(10) != null) {
						row4.INTENTOS = rs_tOracleInput_2.getBigDecimal(10);
					} else {
				
						row4.INTENTOS = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 11) {
								row4.FMODIFICACION = null;
							} else {
										
			row4.FMODIFICACION = routines.system.JDBCUtil.getDate(rs_tOracleInput_2, 11);
		                    }
							if(colQtyInRs_tOracleInput_2 < 12) {
								row4.ESTILO_GRAFICO = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(12) != null) {
						row4.ESTILO_GRAFICO = rs_tOracleInput_2.getBigDecimal(12);
					} else {
				
						row4.ESTILO_GRAFICO = null;
					}
		                    }
					




 



/**
 * [tOracleInput_2 begin ] stop
 */
	
	/**
	 * [tOracleInput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 


	tos_count_tOracleInput_2++;

/**
 * [tOracleInput_2 main ] stop
 */
	
	/**
	 * [tOracleInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					


			   
			   

					row4Struct row4_HashRow = new row4Struct();
		   	   	   
				
				row4_HashRow.ID = row4.ID;
				
				row4_HashRow.PERSONAS_ID = row4.PERSONAS_ID;
				
				row4_HashRow.USUARIO = row4.USUARIO;
				
				row4_HashRow.CLAVE = row4.CLAVE;
				
				row4_HashRow.SELLO_SEGURIDAD = row4.SELLO_SEGURIDAD;
				
				row4_HashRow.TUSUARIOS_ID = row4.TUSUARIOS_ID;
				
				row4_HashRow.ESTADO = row4.ESTADO;
				
				row4_HashRow.ESTREGISTRO_ID = row4.ESTREGISTRO_ID;
				
				row4_HashRow.ENTAPORTANTES_ID = row4.ENTAPORTANTES_ID;
				
				row4_HashRow.INTENTOS = row4.INTENTOS;
				
				row4_HashRow.FMODIFICACION = row4.FMODIFICACION;
				
				row4_HashRow.ESTILO_GRAFICO = row4.ESTILO_GRAFICO;
				
			tHash_Lookup_row4.put(row4_HashRow);
			
            




 


	tos_count_tAdvancedHash_row4++;

/**
 * [tAdvancedHash_row4 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row4 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

}
}finally{
	if (rs_tOracleInput_2 != null) {
		rs_tOracleInput_2.close();
	}
	if (stmt_tOracleInput_2 != null) {
		stmt_tOracleInput_2.close();
	}
}

globalMap.put("tOracleInput_2_NB_LINE",nb_line_tOracleInput_2);
 

ok_Hash.put("tOracleInput_2", true);
end_Hash.put("tOracleInput_2", System.currentTimeMillis());




/**
 * [tOracleInput_2 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

tHash_Lookup_row4.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row4", true);
end_Hash.put("tAdvancedHash_row4", System.currentTimeMillis());




/**
 * [tAdvancedHash_row4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final Medicamentos MedicamentosClass = new Medicamentos();

        int exitCode = MedicamentosClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = Medicamentos.class.getClassLoader().getResourceAsStream("rep_medicamentos_f5/medicamentos_3_9/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = Medicamentos.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }
            
            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("db_origen_AdditionalParams", "id_String");
                        if(context.getStringValue("db_origen_AdditionalParams") == null) {
                            context.db_origen_AdditionalParams = null;
                        } else {
                            context.db_origen_AdditionalParams=(String) context.getProperty("db_origen_AdditionalParams");
                        }
                        context.setContextType("db_origen_Login", "id_String");
                        if(context.getStringValue("db_origen_Login") == null) {
                            context.db_origen_Login = null;
                        } else {
                            context.db_origen_Login=(String) context.getProperty("db_origen_Login");
                        }
                        context.setContextType("db_origen_Password", "id_Password");
                        if(context.getStringValue("db_origen_Password") == null) {
                            context.db_origen_Password = null;
                        } else {
                            String pwd_db_origen_Password_value = context.getProperty("db_origen_Password");
                            context.db_origen_Password = null;
                            if(pwd_db_origen_Password_value!=null) {
                                if(context_param.containsKey("db_origen_Password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.db_origen_Password = pwd_db_origen_Password_value;
                                } else if (!pwd_db_origen_Password_value.isEmpty()) {
                                    try {
                                        context.db_origen_Password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_db_origen_Password_value);
                                        context.put("db_origen_Password",context.db_origen_Password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("db_origen_Port", "id_String");
                        if(context.getStringValue("db_origen_Port") == null) {
                            context.db_origen_Port = null;
                        } else {
                            context.db_origen_Port=(String) context.getProperty("db_origen_Port");
                        }
                        context.setContextType("db_origen_Schema", "id_String");
                        if(context.getStringValue("db_origen_Schema") == null) {
                            context.db_origen_Schema = null;
                        } else {
                            context.db_origen_Schema=(String) context.getProperty("db_origen_Schema");
                        }
                        context.setContextType("db_origen_Server", "id_String");
                        if(context.getStringValue("db_origen_Server") == null) {
                            context.db_origen_Server = null;
                        } else {
                            context.db_origen_Server=(String) context.getProperty("db_origen_Server");
                        }
                        context.setContextType("db_origen_ServiceName", "id_String");
                        if(context.getStringValue("db_origen_ServiceName") == null) {
                            context.db_origen_ServiceName = null;
                        } else {
                            context.db_origen_ServiceName=(String) context.getProperty("db_origen_ServiceName");
                        }
                        context.setContextType("db_destino_AdditionalParams", "id_String");
                        if(context.getStringValue("db_destino_AdditionalParams") == null) {
                            context.db_destino_AdditionalParams = null;
                        } else {
                            context.db_destino_AdditionalParams=(String) context.getProperty("db_destino_AdditionalParams");
                        }
                        context.setContextType("db_destino_Login", "id_String");
                        if(context.getStringValue("db_destino_Login") == null) {
                            context.db_destino_Login = null;
                        } else {
                            context.db_destino_Login=(String) context.getProperty("db_destino_Login");
                        }
                        context.setContextType("db_destino_Password", "id_String");
                        if(context.getStringValue("db_destino_Password") == null) {
                            context.db_destino_Password = null;
                        } else {
                            context.db_destino_Password=(String) context.getProperty("db_destino_Password");
                        }
                        context.setContextType("db_destino_Port", "id_String");
                        if(context.getStringValue("db_destino_Port") == null) {
                            context.db_destino_Port = null;
                        } else {
                            context.db_destino_Port=(String) context.getProperty("db_destino_Port");
                        }
                        context.setContextType("db_destino_Schema", "id_String");
                        if(context.getStringValue("db_destino_Schema") == null) {
                            context.db_destino_Schema = null;
                        } else {
                            context.db_destino_Schema=(String) context.getProperty("db_destino_Schema");
                        }
                        context.setContextType("db_destino_Server", "id_String");
                        if(context.getStringValue("db_destino_Server") == null) {
                            context.db_destino_Server = null;
                        } else {
                            context.db_destino_Server=(String) context.getProperty("db_destino_Server");
                        }
                        context.setContextType("db_destino_ServiceName", "id_String");
                        if(context.getStringValue("db_destino_ServiceName") == null) {
                            context.db_destino_ServiceName = null;
                        } else {
                            context.db_destino_ServiceName=(String) context.getProperty("db_destino_ServiceName");
                        }
                        context.setContextType("db_destino_Sid", "id_String");
                        if(context.getStringValue("db_destino_Sid") == null) {
                            context.db_destino_Sid = null;
                        } else {
                            context.db_destino_Sid=(String) context.getProperty("db_destino_Sid");
                        }
                        context.setContextType("ACTUALIZACION_TOTAL", "id_Boolean");
                        if(context.getStringValue("ACTUALIZACION_TOTAL") == null) {
                            context.ACTUALIZACION_TOTAL = null;
                        } else {
                            try{
                                context.ACTUALIZACION_TOTAL=routines.system.ParserUtils.parseTo_Boolean (context.getProperty("ACTUALIZACION_TOTAL"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ACTUALIZACION_TOTAL", e.getMessage()));
                                context.ACTUALIZACION_TOTAL=null;
                            }
                        }
                        context.setContextType("BODEGA", "id_String");
                        if(context.getStringValue("BODEGA") == null) {
                            context.BODEGA = null;
                        } else {
                            context.BODEGA=(String) context.getProperty("BODEGA");
                        }
                        context.setContextType("ERROR", "id_String");
                        if(context.getStringValue("ERROR") == null) {
                            context.ERROR = null;
                        } else {
                            context.ERROR=(String) context.getProperty("ERROR");
                        }
                        context.setContextType("ESTADO", "id_String");
                        if(context.getStringValue("ESTADO") == null) {
                            context.ESTADO = null;
                        } else {
                            context.ESTADO=(String) context.getProperty("ESTADO");
                        }
                        context.setContextType("ESTADO_EXEC", "id_String");
                        if(context.getStringValue("ESTADO_EXEC") == null) {
                            context.ESTADO_EXEC = null;
                        } else {
                            context.ESTADO_EXEC=(String) context.getProperty("ESTADO_EXEC");
                        }
                        context.setContextType("FANTERIOR", "id_String");
                        if(context.getStringValue("FANTERIOR") == null) {
                            context.FANTERIOR = null;
                        } else {
                            context.FANTERIOR=(String) context.getProperty("FANTERIOR");
                        }
                        context.setContextType("FECHA_EJECUCION", "id_String");
                        if(context.getStringValue("FECHA_EJECUCION") == null) {
                            context.FECHA_EJECUCION = null;
                        } else {
                            context.FECHA_EJECUCION=(String) context.getProperty("FECHA_EJECUCION");
                        }
                        context.setContextType("FECHA_TERMINACION", "id_String");
                        if(context.getStringValue("FECHA_TERMINACION") == null) {
                            context.FECHA_TERMINACION = null;
                        } else {
                            context.FECHA_TERMINACION=(String) context.getProperty("FECHA_TERMINACION");
                        }
                        context.setContextType("HORA_FINAL", "id_String");
                        if(context.getStringValue("HORA_FINAL") == null) {
                            context.HORA_FINAL = null;
                        } else {
                            context.HORA_FINAL=(String) context.getProperty("HORA_FINAL");
                        }
                        context.setContextType("HORA_INICIO", "id_String");
                        if(context.getStringValue("HORA_INICIO") == null) {
                            context.HORA_INICIO = null;
                        } else {
                            context.HORA_INICIO=(String) context.getProperty("HORA_INICIO");
                        }
                        context.setContextType("ID_SOLICITUD", "id_Integer");
                        if(context.getStringValue("ID_SOLICITUD") == null) {
                            context.ID_SOLICITUD = null;
                        } else {
                            try{
                                context.ID_SOLICITUD=routines.system.ParserUtils.parseTo_Integer (context.getProperty("ID_SOLICITUD"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ID_SOLICITUD", e.getMessage()));
                                context.ID_SOLICITUD=null;
                            }
                        }
                        context.setContextType("LAST_DAYS", "id_Integer");
                        if(context.getStringValue("LAST_DAYS") == null) {
                            context.LAST_DAYS = null;
                        } else {
                            try{
                                context.LAST_DAYS=routines.system.ParserUtils.parseTo_Integer (context.getProperty("LAST_DAYS"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "LAST_DAYS", e.getMessage()));
                                context.LAST_DAYS=null;
                            }
                        }
                        context.setContextType("LOGS_ERROR", "id_String");
                        if(context.getStringValue("LOGS_ERROR") == null) {
                            context.LOGS_ERROR = null;
                        } else {
                            context.LOGS_ERROR=(String) context.getProperty("LOGS_ERROR");
                        }
                        context.setContextType("LOGS_EXECUTION", "id_String");
                        if(context.getStringValue("LOGS_EXECUTION") == null) {
                            context.LOGS_EXECUTION = null;
                        } else {
                            context.LOGS_EXECUTION=(String) context.getProperty("LOGS_EXECUTION");
                        }
                        context.setContextType("ORIGEN", "id_String");
                        if(context.getStringValue("ORIGEN") == null) {
                            context.ORIGEN = null;
                        } else {
                            context.ORIGEN=(String) context.getProperty("ORIGEN");
                        }
                        context.setContextType("mail_Message", "id_String");
                        if(context.getStringValue("mail_Message") == null) {
                            context.mail_Message = null;
                        } else {
                            context.mail_Message=(String) context.getProperty("mail_Message");
                        }
                        context.setContextType("mail_Password", "id_Password");
                        if(context.getStringValue("mail_Password") == null) {
                            context.mail_Password = null;
                        } else {
                            String pwd_mail_Password_value = context.getProperty("mail_Password");
                            context.mail_Password = null;
                            if(pwd_mail_Password_value!=null) {
                                if(context_param.containsKey("mail_Password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.mail_Password = pwd_mail_Password_value;
                                } else if (!pwd_mail_Password_value.isEmpty()) {
                                    try {
                                        context.mail_Password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_mail_Password_value);
                                        context.put("mail_Password",context.mail_Password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("mail_Sendername", "id_String");
                        if(context.getStringValue("mail_Sendername") == null) {
                            context.mail_Sendername = null;
                        } else {
                            context.mail_Sendername=(String) context.getProperty("mail_Sendername");
                        }
                        context.setContextType("mail_SMTP_Host", "id_String");
                        if(context.getStringValue("mail_SMTP_Host") == null) {
                            context.mail_SMTP_Host = null;
                        } else {
                            context.mail_SMTP_Host=(String) context.getProperty("mail_SMTP_Host");
                        }
                        context.setContextType("mail_SMTP_Port", "id_String");
                        if(context.getStringValue("mail_SMTP_Port") == null) {
                            context.mail_SMTP_Port = null;
                        } else {
                            context.mail_SMTP_Port=(String) context.getProperty("mail_SMTP_Port");
                        }
                        context.setContextType("mail_Subject", "id_String");
                        if(context.getStringValue("mail_Subject") == null) {
                            context.mail_Subject = null;
                        } else {
                            context.mail_Subject=(String) context.getProperty("mail_Subject");
                        }
                        context.setContextType("mail_To", "id_String");
                        if(context.getStringValue("mail_To") == null) {
                            context.mail_To = null;
                        } else {
                            context.mail_To=(String) context.getProperty("mail_To");
                        }
                        context.setContextType("mail_User", "id_String");
                        if(context.getStringValue("mail_User") == null) {
                            context.mail_User = null;
                        } else {
                            context.mail_User=(String) context.getProperty("mail_User");
                        }
                        context.setContextType("COND_HCL_FORMMEDICAS", "id_String");
                        if(context.getStringValue("COND_HCL_FORMMEDICAS") == null) {
                            context.COND_HCL_FORMMEDICAS = null;
                        } else {
                            context.COND_HCL_FORMMEDICAS=(String) context.getProperty("COND_HCL_FORMMEDICAS");
                        }
                        context.setContextType("COND_MOVIMIENTOS", "id_String");
                        if(context.getStringValue("COND_MOVIMIENTOS") == null) {
                            context.COND_MOVIMIENTOS = null;
                        } else {
                            context.COND_MOVIMIENTOS=(String) context.getProperty("COND_MOVIMIENTOS");
                        }
                        context.setContextType("COND_PENDIENTES", "id_String");
                        if(context.getStringValue("COND_PENDIENTES") == null) {
                            context.COND_PENDIENTES = null;
                        } else {
                            context.COND_PENDIENTES=(String) context.getProperty("COND_PENDIENTES");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("db_origen_AdditionalParams")) {
                context.db_origen_AdditionalParams = (String) parentContextMap.get("db_origen_AdditionalParams");
            }if (parentContextMap.containsKey("db_origen_Login")) {
                context.db_origen_Login = (String) parentContextMap.get("db_origen_Login");
            }if (parentContextMap.containsKey("db_origen_Password")) {
                context.db_origen_Password = (java.lang.String) parentContextMap.get("db_origen_Password");
            }if (parentContextMap.containsKey("db_origen_Port")) {
                context.db_origen_Port = (String) parentContextMap.get("db_origen_Port");
            }if (parentContextMap.containsKey("db_origen_Schema")) {
                context.db_origen_Schema = (String) parentContextMap.get("db_origen_Schema");
            }if (parentContextMap.containsKey("db_origen_Server")) {
                context.db_origen_Server = (String) parentContextMap.get("db_origen_Server");
            }if (parentContextMap.containsKey("db_origen_ServiceName")) {
                context.db_origen_ServiceName = (String) parentContextMap.get("db_origen_ServiceName");
            }if (parentContextMap.containsKey("db_destino_AdditionalParams")) {
                context.db_destino_AdditionalParams = (String) parentContextMap.get("db_destino_AdditionalParams");
            }if (parentContextMap.containsKey("db_destino_Login")) {
                context.db_destino_Login = (String) parentContextMap.get("db_destino_Login");
            }if (parentContextMap.containsKey("db_destino_Password")) {
                context.db_destino_Password = (String) parentContextMap.get("db_destino_Password");
            }if (parentContextMap.containsKey("db_destino_Port")) {
                context.db_destino_Port = (String) parentContextMap.get("db_destino_Port");
            }if (parentContextMap.containsKey("db_destino_Schema")) {
                context.db_destino_Schema = (String) parentContextMap.get("db_destino_Schema");
            }if (parentContextMap.containsKey("db_destino_Server")) {
                context.db_destino_Server = (String) parentContextMap.get("db_destino_Server");
            }if (parentContextMap.containsKey("db_destino_ServiceName")) {
                context.db_destino_ServiceName = (String) parentContextMap.get("db_destino_ServiceName");
            }if (parentContextMap.containsKey("db_destino_Sid")) {
                context.db_destino_Sid = (String) parentContextMap.get("db_destino_Sid");
            }if (parentContextMap.containsKey("ACTUALIZACION_TOTAL")) {
                context.ACTUALIZACION_TOTAL = (Boolean) parentContextMap.get("ACTUALIZACION_TOTAL");
            }if (parentContextMap.containsKey("BODEGA")) {
                context.BODEGA = (String) parentContextMap.get("BODEGA");
            }if (parentContextMap.containsKey("ERROR")) {
                context.ERROR = (String) parentContextMap.get("ERROR");
            }if (parentContextMap.containsKey("ESTADO")) {
                context.ESTADO = (String) parentContextMap.get("ESTADO");
            }if (parentContextMap.containsKey("ESTADO_EXEC")) {
                context.ESTADO_EXEC = (String) parentContextMap.get("ESTADO_EXEC");
            }if (parentContextMap.containsKey("FANTERIOR")) {
                context.FANTERIOR = (String) parentContextMap.get("FANTERIOR");
            }if (parentContextMap.containsKey("FECHA_EJECUCION")) {
                context.FECHA_EJECUCION = (String) parentContextMap.get("FECHA_EJECUCION");
            }if (parentContextMap.containsKey("FECHA_TERMINACION")) {
                context.FECHA_TERMINACION = (String) parentContextMap.get("FECHA_TERMINACION");
            }if (parentContextMap.containsKey("HORA_FINAL")) {
                context.HORA_FINAL = (String) parentContextMap.get("HORA_FINAL");
            }if (parentContextMap.containsKey("HORA_INICIO")) {
                context.HORA_INICIO = (String) parentContextMap.get("HORA_INICIO");
            }if (parentContextMap.containsKey("ID_SOLICITUD")) {
                context.ID_SOLICITUD = (Integer) parentContextMap.get("ID_SOLICITUD");
            }if (parentContextMap.containsKey("LAST_DAYS")) {
                context.LAST_DAYS = (Integer) parentContextMap.get("LAST_DAYS");
            }if (parentContextMap.containsKey("LOGS_ERROR")) {
                context.LOGS_ERROR = (String) parentContextMap.get("LOGS_ERROR");
            }if (parentContextMap.containsKey("LOGS_EXECUTION")) {
                context.LOGS_EXECUTION = (String) parentContextMap.get("LOGS_EXECUTION");
            }if (parentContextMap.containsKey("ORIGEN")) {
                context.ORIGEN = (String) parentContextMap.get("ORIGEN");
            }if (parentContextMap.containsKey("mail_Message")) {
                context.mail_Message = (String) parentContextMap.get("mail_Message");
            }if (parentContextMap.containsKey("mail_Password")) {
                context.mail_Password = (java.lang.String) parentContextMap.get("mail_Password");
            }if (parentContextMap.containsKey("mail_Sendername")) {
                context.mail_Sendername = (String) parentContextMap.get("mail_Sendername");
            }if (parentContextMap.containsKey("mail_SMTP_Host")) {
                context.mail_SMTP_Host = (String) parentContextMap.get("mail_SMTP_Host");
            }if (parentContextMap.containsKey("mail_SMTP_Port")) {
                context.mail_SMTP_Port = (String) parentContextMap.get("mail_SMTP_Port");
            }if (parentContextMap.containsKey("mail_Subject")) {
                context.mail_Subject = (String) parentContextMap.get("mail_Subject");
            }if (parentContextMap.containsKey("mail_To")) {
                context.mail_To = (String) parentContextMap.get("mail_To");
            }if (parentContextMap.containsKey("mail_User")) {
                context.mail_User = (String) parentContextMap.get("mail_User");
            }if (parentContextMap.containsKey("COND_HCL_FORMMEDICAS")) {
                context.COND_HCL_FORMMEDICAS = (String) parentContextMap.get("COND_HCL_FORMMEDICAS");
            }if (parentContextMap.containsKey("COND_MOVIMIENTOS")) {
                context.COND_MOVIMIENTOS = (String) parentContextMap.get("COND_MOVIMIENTOS");
            }if (parentContextMap.containsKey("COND_PENDIENTES")) {
                context.COND_PENDIENTES = (String) parentContextMap.get("COND_PENDIENTES");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
			parametersToEncrypt.add("db_origen_Password");
			parametersToEncrypt.add("mail_Password");
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs


this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : Medicamentos");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tOracleConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tOracleConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tOracleConnection_1", globalMap.get("conn_tOracleConnection_1"));
            connections.put("conn_tOracleConnection_2", globalMap.get("conn_tOracleConnection_2"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--context_file")) {
        	String keyValue = arg.substring(15);
        	String filePath = new String(java.util.Base64.getDecoder().decode(keyValue));
        	java.nio.file.Path contextFile = java.nio.file.Paths.get(filePath);
            try (java.io.BufferedReader reader = java.nio.file.Files.newBufferedReader(contextFile)) {
                String line;
                while ((line = reader.readLine()) != null) {
                    int index = -1;
                    if ( (index = line.indexOf('=')) > -1) {
							if (line.startsWith("--context_param")) {
								if ("id_Password".equals(context_param.getContextType(line.substring(16, index)))) {
									context_param.put(line.substring(16, index), routines.system.PasswordEncryptUtil.decryptPassword(
											line.substring(index + 1)));
								} else {
									context_param.put(line.substring(16, index), line.substring(index + 1));
								}
							}else {//--context_type
								context_param.setContextType(line.substring(15, index), line.substring(index + 1));
							}
                    }
                }
            } catch (java.io.IOException e) {
            	System.err.println("Could not load the context file: " + filePath);
                e.printStackTrace();
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     2213915 characters generated by Talend Open Studio for ESB 
 *     on the November 1, 2024, 3:48:18 PM COT
 ************************************************************************************************/